// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kira/custody/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreteCustodyRecord struct {
	Address         github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	CustodySettings CustodySettings                               `protobuf:"bytes,2,opt,name=custody_settings,json=custodySettings,proto3" json:"custody_settings"`
	OldKey          string                                        `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey          string                                        `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgCreteCustodyRecord) Reset()         { *m = MsgCreteCustodyRecord{} }
func (m *MsgCreteCustodyRecord) String() string { return proto.CompactTextString(m) }
func (*MsgCreteCustodyRecord) ProtoMessage()    {}
func (*MsgCreteCustodyRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{0}
}
func (m *MsgCreteCustodyRecord) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreteCustodyRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreteCustodyRecord.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreteCustodyRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreteCustodyRecord.Merge(m, src)
}
func (m *MsgCreteCustodyRecord) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreteCustodyRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreteCustodyRecord.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreteCustodyRecord proto.InternalMessageInfo

type MsgAddToCustodyCustodians struct {
	Address    github_com_cosmos_cosmos_sdk_types.AccAddress   `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	AddAddress []github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,rep,name=add_address,json=addAddress,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"add_address,omitempty" yaml:"address"`
	OldKey     string                                          `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey     string                                          `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgAddToCustodyCustodians) Reset()         { *m = MsgAddToCustodyCustodians{} }
func (m *MsgAddToCustodyCustodians) String() string { return proto.CompactTextString(m) }
func (*MsgAddToCustodyCustodians) ProtoMessage()    {}
func (*MsgAddToCustodyCustodians) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{1}
}
func (m *MsgAddToCustodyCustodians) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddToCustodyCustodians) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddToCustodyCustodians.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddToCustodyCustodians) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddToCustodyCustodians.Merge(m, src)
}
func (m *MsgAddToCustodyCustodians) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddToCustodyCustodians) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddToCustodyCustodians.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddToCustodyCustodians proto.InternalMessageInfo

type MsgRemoveFromCustodyCustodians struct {
	Address       github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	RemoveAddress github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=remove_address,json=removeAddress,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"remove_address,omitempty" yaml:"address"`
	OldKey        string                                        `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string                                        `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgRemoveFromCustodyCustodians) Reset()         { *m = MsgRemoveFromCustodyCustodians{} }
func (m *MsgRemoveFromCustodyCustodians) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveFromCustodyCustodians) ProtoMessage()    {}
func (*MsgRemoveFromCustodyCustodians) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{2}
}
func (m *MsgRemoveFromCustodyCustodians) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveFromCustodyCustodians) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveFromCustodyCustodians.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveFromCustodyCustodians) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveFromCustodyCustodians.Merge(m, src)
}
func (m *MsgRemoveFromCustodyCustodians) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveFromCustodyCustodians) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveFromCustodyCustodians.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveFromCustodyCustodians proto.InternalMessageInfo

type MsgDropCustodyCustodians struct {
	Address github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	OldKey  string                                        `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey  string                                        `protobuf:"bytes,3,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgDropCustodyCustodians) Reset()         { *m = MsgDropCustodyCustodians{} }
func (m *MsgDropCustodyCustodians) String() string { return proto.CompactTextString(m) }
func (*MsgDropCustodyCustodians) ProtoMessage()    {}
func (*MsgDropCustodyCustodians) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{3}
}
func (m *MsgDropCustodyCustodians) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDropCustodyCustodians) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDropCustodyCustodians.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDropCustodyCustodians) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDropCustodyCustodians.Merge(m, src)
}
func (m *MsgDropCustodyCustodians) XXX_Size() int {
	return m.Size()
}
func (m *MsgDropCustodyCustodians) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDropCustodyCustodians.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDropCustodyCustodians proto.InternalMessageInfo

type MsgAddToCustodyWhiteList struct {
	Address    github_com_cosmos_cosmos_sdk_types.AccAddress   `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	AddAddress []github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,rep,name=add_address,json=addAddress,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"add_address,omitempty" yaml:"address"`
	OldKey     string                                          `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey     string                                          `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgAddToCustodyWhiteList) Reset()         { *m = MsgAddToCustodyWhiteList{} }
func (m *MsgAddToCustodyWhiteList) String() string { return proto.CompactTextString(m) }
func (*MsgAddToCustodyWhiteList) ProtoMessage()    {}
func (*MsgAddToCustodyWhiteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{4}
}
func (m *MsgAddToCustodyWhiteList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddToCustodyWhiteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddToCustodyWhiteList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddToCustodyWhiteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddToCustodyWhiteList.Merge(m, src)
}
func (m *MsgAddToCustodyWhiteList) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddToCustodyWhiteList) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddToCustodyWhiteList.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddToCustodyWhiteList proto.InternalMessageInfo

type MsgRemoveFromCustodyWhiteList struct {
	Address       github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	RemoveAddress github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=remove_address,json=removeAddress,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"remove_address,omitempty" yaml:"address"`
	OldKey        string                                        `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey        string                                        `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgRemoveFromCustodyWhiteList) Reset()         { *m = MsgRemoveFromCustodyWhiteList{} }
func (m *MsgRemoveFromCustodyWhiteList) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveFromCustodyWhiteList) ProtoMessage()    {}
func (*MsgRemoveFromCustodyWhiteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{5}
}
func (m *MsgRemoveFromCustodyWhiteList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveFromCustodyWhiteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveFromCustodyWhiteList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveFromCustodyWhiteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveFromCustodyWhiteList.Merge(m, src)
}
func (m *MsgRemoveFromCustodyWhiteList) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveFromCustodyWhiteList) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveFromCustodyWhiteList.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveFromCustodyWhiteList proto.InternalMessageInfo

type MsgDropCustodyWhiteList struct {
	Address github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	OldKey  string                                        `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey  string                                        `protobuf:"bytes,3,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgDropCustodyWhiteList) Reset()         { *m = MsgDropCustodyWhiteList{} }
func (m *MsgDropCustodyWhiteList) String() string { return proto.CompactTextString(m) }
func (*MsgDropCustodyWhiteList) ProtoMessage()    {}
func (*MsgDropCustodyWhiteList) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{6}
}
func (m *MsgDropCustodyWhiteList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDropCustodyWhiteList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDropCustodyWhiteList.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDropCustodyWhiteList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDropCustodyWhiteList.Merge(m, src)
}
func (m *MsgDropCustodyWhiteList) XXX_Size() int {
	return m.Size()
}
func (m *MsgDropCustodyWhiteList) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDropCustodyWhiteList.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDropCustodyWhiteList proto.InternalMessageInfo

type MsgAddToCustodyLimits struct {
	Address github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	Denom   string                                        `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount  uint64                                        `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Limit   string                                        `protobuf:"bytes,4,opt,name=limit,proto3" json:"limit,omitempty"`
	OldKey  string                                        `protobuf:"bytes,5,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey  string                                        `protobuf:"bytes,6,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgAddToCustodyLimits) Reset()         { *m = MsgAddToCustodyLimits{} }
func (m *MsgAddToCustodyLimits) String() string { return proto.CompactTextString(m) }
func (*MsgAddToCustodyLimits) ProtoMessage()    {}
func (*MsgAddToCustodyLimits) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{7}
}
func (m *MsgAddToCustodyLimits) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddToCustodyLimits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddToCustodyLimits.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddToCustodyLimits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddToCustodyLimits.Merge(m, src)
}
func (m *MsgAddToCustodyLimits) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddToCustodyLimits) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddToCustodyLimits.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddToCustodyLimits proto.InternalMessageInfo

type MsgRemoveFromCustodyLimits struct {
	Address github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	Denom   string                                        `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	OldKey  string                                        `protobuf:"bytes,3,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey  string                                        `protobuf:"bytes,4,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgRemoveFromCustodyLimits) Reset()         { *m = MsgRemoveFromCustodyLimits{} }
func (m *MsgRemoveFromCustodyLimits) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveFromCustodyLimits) ProtoMessage()    {}
func (*MsgRemoveFromCustodyLimits) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{8}
}
func (m *MsgRemoveFromCustodyLimits) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveFromCustodyLimits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveFromCustodyLimits.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveFromCustodyLimits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveFromCustodyLimits.Merge(m, src)
}
func (m *MsgRemoveFromCustodyLimits) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveFromCustodyLimits) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveFromCustodyLimits.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveFromCustodyLimits proto.InternalMessageInfo

type MsgDropCustodyLimits struct {
	Address github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" yaml:"address"`
	OldKey  string                                        `protobuf:"bytes,2,opt,name=old_key,json=oldKey,proto3" json:"old_key,omitempty"`
	NewKey  string                                        `protobuf:"bytes,3,opt,name=new_key,json=newKey,proto3" json:"new_key,omitempty"`
}

func (m *MsgDropCustodyLimits) Reset()         { *m = MsgDropCustodyLimits{} }
func (m *MsgDropCustodyLimits) String() string { return proto.CompactTextString(m) }
func (*MsgDropCustodyLimits) ProtoMessage()    {}
func (*MsgDropCustodyLimits) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{9}
}
func (m *MsgDropCustodyLimits) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDropCustodyLimits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDropCustodyLimits.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDropCustodyLimits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDropCustodyLimits.Merge(m, src)
}
func (m *MsgDropCustodyLimits) XXX_Size() int {
	return m.Size()
}
func (m *MsgDropCustodyLimits) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDropCustodyLimits.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDropCustodyLimits proto.InternalMessageInfo

type MsgCreteCustodyRecordResponse struct {
}

func (m *MsgCreteCustodyRecordResponse) Reset()         { *m = MsgCreteCustodyRecordResponse{} }
func (m *MsgCreteCustodyRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreteCustodyRecordResponse) ProtoMessage()    {}
func (*MsgCreteCustodyRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{10}
}
func (m *MsgCreteCustodyRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreteCustodyRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreteCustodyRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreteCustodyRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreteCustodyRecordResponse.Merge(m, src)
}
func (m *MsgCreteCustodyRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreteCustodyRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreteCustodyRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreteCustodyRecordResponse proto.InternalMessageInfo

//message MsgAddToCustodyPoolResponse {}
//message MsgRemoveFromCustodyPoolResponse {}
type MsgAddToCustodyCustodiansResponse struct {
}

func (m *MsgAddToCustodyCustodiansResponse) Reset()         { *m = MsgAddToCustodyCustodiansResponse{} }
func (m *MsgAddToCustodyCustodiansResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddToCustodyCustodiansResponse) ProtoMessage()    {}
func (*MsgAddToCustodyCustodiansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{11}
}
func (m *MsgAddToCustodyCustodiansResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddToCustodyCustodiansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddToCustodyCustodiansResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddToCustodyCustodiansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddToCustodyCustodiansResponse.Merge(m, src)
}
func (m *MsgAddToCustodyCustodiansResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddToCustodyCustodiansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddToCustodyCustodiansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddToCustodyCustodiansResponse proto.InternalMessageInfo

type MsgRemoveFromCustodyCustodiansResponse struct {
}

func (m *MsgRemoveFromCustodyCustodiansResponse) Reset() {
	*m = MsgRemoveFromCustodyCustodiansResponse{}
}
func (m *MsgRemoveFromCustodyCustodiansResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveFromCustodyCustodiansResponse) ProtoMessage()    {}
func (*MsgRemoveFromCustodyCustodiansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{12}
}
func (m *MsgRemoveFromCustodyCustodiansResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveFromCustodyCustodiansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveFromCustodyCustodiansResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveFromCustodyCustodiansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveFromCustodyCustodiansResponse.Merge(m, src)
}
func (m *MsgRemoveFromCustodyCustodiansResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveFromCustodyCustodiansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveFromCustodyCustodiansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveFromCustodyCustodiansResponse proto.InternalMessageInfo

type MsgDropCustodyCustodiansResponse struct {
}

func (m *MsgDropCustodyCustodiansResponse) Reset()         { *m = MsgDropCustodyCustodiansResponse{} }
func (m *MsgDropCustodyCustodiansResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDropCustodyCustodiansResponse) ProtoMessage()    {}
func (*MsgDropCustodyCustodiansResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{13}
}
func (m *MsgDropCustodyCustodiansResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDropCustodyCustodiansResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDropCustodyCustodiansResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDropCustodyCustodiansResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDropCustodyCustodiansResponse.Merge(m, src)
}
func (m *MsgDropCustodyCustodiansResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDropCustodyCustodiansResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDropCustodyCustodiansResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDropCustodyCustodiansResponse proto.InternalMessageInfo

type MsgAddToCustodyWhiteListResponse struct {
}

func (m *MsgAddToCustodyWhiteListResponse) Reset()         { *m = MsgAddToCustodyWhiteListResponse{} }
func (m *MsgAddToCustodyWhiteListResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddToCustodyWhiteListResponse) ProtoMessage()    {}
func (*MsgAddToCustodyWhiteListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{14}
}
func (m *MsgAddToCustodyWhiteListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddToCustodyWhiteListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddToCustodyWhiteListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddToCustodyWhiteListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddToCustodyWhiteListResponse.Merge(m, src)
}
func (m *MsgAddToCustodyWhiteListResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddToCustodyWhiteListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddToCustodyWhiteListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddToCustodyWhiteListResponse proto.InternalMessageInfo

type MsgRemoveFromCustodyWhiteListResponse struct {
}

func (m *MsgRemoveFromCustodyWhiteListResponse) Reset()         { *m = MsgRemoveFromCustodyWhiteListResponse{} }
func (m *MsgRemoveFromCustodyWhiteListResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveFromCustodyWhiteListResponse) ProtoMessage()    {}
func (*MsgRemoveFromCustodyWhiteListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{15}
}
func (m *MsgRemoveFromCustodyWhiteListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveFromCustodyWhiteListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveFromCustodyWhiteListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveFromCustodyWhiteListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveFromCustodyWhiteListResponse.Merge(m, src)
}
func (m *MsgRemoveFromCustodyWhiteListResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveFromCustodyWhiteListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveFromCustodyWhiteListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveFromCustodyWhiteListResponse proto.InternalMessageInfo

type MsgDropCustodyWhiteListResponse struct {
}

func (m *MsgDropCustodyWhiteListResponse) Reset()         { *m = MsgDropCustodyWhiteListResponse{} }
func (m *MsgDropCustodyWhiteListResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDropCustodyWhiteListResponse) ProtoMessage()    {}
func (*MsgDropCustodyWhiteListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{16}
}
func (m *MsgDropCustodyWhiteListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDropCustodyWhiteListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDropCustodyWhiteListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDropCustodyWhiteListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDropCustodyWhiteListResponse.Merge(m, src)
}
func (m *MsgDropCustodyWhiteListResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDropCustodyWhiteListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDropCustodyWhiteListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDropCustodyWhiteListResponse proto.InternalMessageInfo

type MsgAddToCustodyLimitsResponse struct {
}

func (m *MsgAddToCustodyLimitsResponse) Reset()         { *m = MsgAddToCustodyLimitsResponse{} }
func (m *MsgAddToCustodyLimitsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddToCustodyLimitsResponse) ProtoMessage()    {}
func (*MsgAddToCustodyLimitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{17}
}
func (m *MsgAddToCustodyLimitsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddToCustodyLimitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddToCustodyLimitsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddToCustodyLimitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddToCustodyLimitsResponse.Merge(m, src)
}
func (m *MsgAddToCustodyLimitsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddToCustodyLimitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddToCustodyLimitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddToCustodyLimitsResponse proto.InternalMessageInfo

//message MsgAddToCustodyLimitsStatusResponse {}
type MsgRemoveFromCustodyLimitsResponse struct {
}

func (m *MsgRemoveFromCustodyLimitsResponse) Reset()         { *m = MsgRemoveFromCustodyLimitsResponse{} }
func (m *MsgRemoveFromCustodyLimitsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveFromCustodyLimitsResponse) ProtoMessage()    {}
func (*MsgRemoveFromCustodyLimitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{18}
}
func (m *MsgRemoveFromCustodyLimitsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveFromCustodyLimitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveFromCustodyLimitsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveFromCustodyLimitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveFromCustodyLimitsResponse.Merge(m, src)
}
func (m *MsgRemoveFromCustodyLimitsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveFromCustodyLimitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveFromCustodyLimitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveFromCustodyLimitsResponse proto.InternalMessageInfo

type MsgDropCustodyLimitsResponse struct {
}

func (m *MsgDropCustodyLimitsResponse) Reset()         { *m = MsgDropCustodyLimitsResponse{} }
func (m *MsgDropCustodyLimitsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDropCustodyLimitsResponse) ProtoMessage()    {}
func (*MsgDropCustodyLimitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85c0ad3d36de53cc, []int{19}
}
func (m *MsgDropCustodyLimitsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDropCustodyLimitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDropCustodyLimitsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDropCustodyLimitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDropCustodyLimitsResponse.Merge(m, src)
}
func (m *MsgDropCustodyLimitsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDropCustodyLimitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDropCustodyLimitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDropCustodyLimitsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreteCustodyRecord)(nil), "kira.custody.MsgCreteCustodyRecord")
	proto.RegisterType((*MsgAddToCustodyCustodians)(nil), "kira.custody.MsgAddToCustodyCustodians")
	proto.RegisterType((*MsgRemoveFromCustodyCustodians)(nil), "kira.custody.MsgRemoveFromCustodyCustodians")
	proto.RegisterType((*MsgDropCustodyCustodians)(nil), "kira.custody.MsgDropCustodyCustodians")
	proto.RegisterType((*MsgAddToCustodyWhiteList)(nil), "kira.custody.MsgAddToCustodyWhiteList")
	proto.RegisterType((*MsgRemoveFromCustodyWhiteList)(nil), "kira.custody.MsgRemoveFromCustodyWhiteList")
	proto.RegisterType((*MsgDropCustodyWhiteList)(nil), "kira.custody.MsgDropCustodyWhiteList")
	proto.RegisterType((*MsgAddToCustodyLimits)(nil), "kira.custody.MsgAddToCustodyLimits")
	proto.RegisterType((*MsgRemoveFromCustodyLimits)(nil), "kira.custody.MsgRemoveFromCustodyLimits")
	proto.RegisterType((*MsgDropCustodyLimits)(nil), "kira.custody.MsgDropCustodyLimits")
	proto.RegisterType((*MsgCreteCustodyRecordResponse)(nil), "kira.custody.MsgCreteCustodyRecordResponse")
	proto.RegisterType((*MsgAddToCustodyCustodiansResponse)(nil), "kira.custody.MsgAddToCustodyCustodiansResponse")
	proto.RegisterType((*MsgRemoveFromCustodyCustodiansResponse)(nil), "kira.custody.MsgRemoveFromCustodyCustodiansResponse")
	proto.RegisterType((*MsgDropCustodyCustodiansResponse)(nil), "kira.custody.MsgDropCustodyCustodiansResponse")
	proto.RegisterType((*MsgAddToCustodyWhiteListResponse)(nil), "kira.custody.MsgAddToCustodyWhiteListResponse")
	proto.RegisterType((*MsgRemoveFromCustodyWhiteListResponse)(nil), "kira.custody.MsgRemoveFromCustodyWhiteListResponse")
	proto.RegisterType((*MsgDropCustodyWhiteListResponse)(nil), "kira.custody.MsgDropCustodyWhiteListResponse")
	proto.RegisterType((*MsgAddToCustodyLimitsResponse)(nil), "kira.custody.MsgAddToCustodyLimitsResponse")
	proto.RegisterType((*MsgRemoveFromCustodyLimitsResponse)(nil), "kira.custody.MsgRemoveFromCustodyLimitsResponse")
	proto.RegisterType((*MsgDropCustodyLimitsResponse)(nil), "kira.custody.MsgDropCustodyLimitsResponse")
}

func init() { proto.RegisterFile("kira/custody/tx.proto", fileDescriptor_85c0ad3d36de53cc) }

var fileDescriptor_85c0ad3d36de53cc = []byte{
	// 852 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xbf, 0x6f, 0xdb, 0x46,
	0x14, 0x16, 0x29, 0x5b, 0x76, 0x9f, 0x7f, 0x82, 0x95, 0x6b, 0x99, 0xa8, 0x49, 0x99, 0xae, 0x6d,
	0xb5, 0xae, 0xc5, 0xc2, 0xee, 0xe4, 0xcd, 0x56, 0xd1, 0xc5, 0x56, 0x07, 0xb5, 0x40, 0x81, 0xa2,
	0x85, 0x40, 0x8b, 0x57, 0x9a, 0x95, 0xc8, 0x13, 0x78, 0x54, 0x6d, 0x65, 0xcc, 0x94, 0x31, 0x7b,
	0x32, 0x78, 0x4a, 0xe6, 0x00, 0xce, 0xff, 0xe0, 0x25, 0x80, 0xc7, 0x4c, 0x46, 0x60, 0x2f, 0x99,
	0x33, 0x64, 0xc8, 0x14, 0x90, 0x3c, 0x91, 0x94, 0x45, 0xd2, 0x32, 0x64, 0x2b, 0x08, 0x90, 0x89,
	0x3c, 0xbe, 0xef, 0xee, 0x7b, 0xef, 0xe3, 0x77, 0xf7, 0x48, 0x98, 0xab, 0xeb, 0x96, 0x22, 0xd7,
	0x5a, 0xc4, 0xc6, 0x6a, 0x5b, 0xb6, 0x8f, 0x8b, 0x4d, 0x0b, 0xdb, 0x98, 0x9b, 0x74, 0x1e, 0x17,
	0xe9, 0x63, 0x3e, 0xab, 0x61, 0x0d, 0xbb, 0x01, 0xd9, 0xb9, 0xf3, 0x30, 0xbc, 0xa8, 0x61, 0xac,
	0x35, 0x90, 0xec, 0x8e, 0x0e, 0x5a, 0xff, 0xca, 0xb6, 0x6e, 0x20, 0x62, 0x2b, 0x46, 0x93, 0x02,
	0xf8, 0xae, 0xb5, 0xe9, 0x95, 0xc6, 0x16, 0xae, 0x4f, 0x56, 0x4c, 0x1a, 0x92, 0x1e, 0xb2, 0x30,
	0x57, 0x26, 0x5a, 0xc9, 0x42, 0x36, 0x2a, 0x79, 0x93, 0x2a, 0xa8, 0x86, 0x2d, 0x95, 0xfb, 0x07,
	0xc6, 0x14, 0x55, 0xb5, 0x10, 0x21, 0x39, 0x26, 0xcf, 0x14, 0x26, 0x77, 0x4b, 0xef, 0x2e, 0xc4,
	0xe9, 0xb6, 0x62, 0x34, 0xb6, 0x25, 0x1a, 0x90, 0x3e, 0x5c, 0x88, 0x1b, 0x9a, 0x6e, 0x1f, 0xb6,
	0x0e, 0x8a, 0x35, 0x6c, 0xc8, 0x35, 0x4c, 0x0c, 0x4c, 0xe8, 0x65, 0x83, 0xa8, 0x75, 0xd9, 0x6e,
	0x37, 0x11, 0x29, 0xee, 0xd4, 0x6a, 0x3b, 0xde, 0x8c, 0x4a, 0x67, 0x4d, 0xee, 0x37, 0x98, 0xa5,
	0x49, 0x56, 0x09, 0xb2, 0x6d, 0xdd, 0xd4, 0x48, 0x8e, 0xcd, 0x33, 0x85, 0x89, 0xcd, 0xc5, 0x62,
	0x58, 0x8f, 0x22, 0xcd, 0xea, 0x77, 0x0a, 0xda, 0x1d, 0x39, 0xbb, 0x10, 0x53, 0x95, 0x99, 0x5a,
	0xf7, 0x63, 0x6e, 0x1e, 0xc6, 0x70, 0x43, 0xad, 0xd6, 0x51, 0x3b, 0x97, 0xce, 0x33, 0x85, 0xaf,
	0x2a, 0x19, 0xdc, 0x50, 0xf7, 0x50, 0xdb, 0x09, 0x98, 0xe8, 0xc8, 0x0d, 0x8c, 0x78, 0x01, 0x13,
	0x1d, 0xed, 0xa1, 0xf6, 0xf6, 0xf8, 0xa3, 0x13, 0x31, 0xf5, 0xf6, 0x44, 0x4c, 0x49, 0x4f, 0x59,
	0x58, 0x28, 0x13, 0x6d, 0x47, 0x55, 0xff, 0xc0, 0x94, 0xce, 0xbb, 0xe8, 0x8a, 0x49, 0xee, 0x5b,
	0x08, 0x15, 0x26, 0x14, 0x55, 0xad, 0x76, 0x28, 0xd8, 0x7c, 0xfa, 0xae, 0x28, 0x40, 0x51, 0x55,
	0x7a, 0x3f, 0x90, 0x3c, 0xcf, 0x59, 0x10, 0xca, 0x44, 0xab, 0x20, 0x03, 0xff, 0x8f, 0x7e, 0xb5,
	0xb0, 0x31, 0x74, 0x8d, 0xfe, 0x83, 0x69, 0xcb, 0x65, 0x0f, 0xc9, 0x74, 0x67, 0x2c, 0x53, 0xde,
	0xd2, 0x77, 0xa1, 0xd4, 0x4b, 0x06, 0x72, 0x65, 0xa2, 0xfd, 0x62, 0xe1, 0xe6, 0xd0, 0x35, 0x0a,
	0xe5, 0xcd, 0xc6, 0xe5, 0x9d, 0x8e, 0xc9, 0xfb, 0x09, 0xeb, 0xe6, 0x1d, 0xde, 0x00, 0x7f, 0x1e,
	0xea, 0x36, 0xda, 0xd7, 0x89, 0xfd, 0xc5, 0xff, 0xcf, 0x58, 0x58, 0x8c, 0xf2, 0xff, 0xd0, 0x24,
	0xfa, 0x5c, 0xec, 0x7f, 0xca, 0xc0, 0x7c, 0xb7, 0xfd, 0x87, 0x26, 0xd1, 0x20, 0xee, 0x7f, 0xcf,
	0xb8, 0x3d, 0x30, 0xec, 0xfe, 0x7d, 0xdd, 0xd0, 0xed, 0x7b, 0xdf, 0xb2, 0x59, 0x18, 0x55, 0x91,
	0x89, 0x0d, 0x9a, 0xb2, 0x37, 0xe0, 0xbe, 0x81, 0x8c, 0x62, 0xe0, 0x96, 0x69, 0xbb, 0x09, 0x8f,
	0x54, 0xe8, 0xc8, 0x41, 0x37, 0x9c, 0xb4, 0xa8, 0xfc, 0xde, 0x20, 0x5c, 0xf8, 0x68, 0x5c, 0xe1,
	0x99, 0x98, 0xc2, 0x5f, 0x31, 0xc0, 0x47, 0x19, 0xfb, 0x53, 0x56, 0x3f, 0x88, 0xff, 0x5e, 0x30,
	0x90, 0xed, 0xf6, 0xdf, 0x70, 0x2a, 0x19, 0xc4, 0x7c, 0xa2, 0x7b, 0xb6, 0xf4, 0x7e, 0x7f, 0x55,
	0x10, 0x69, 0x62, 0x93, 0x20, 0x69, 0x19, 0x96, 0x62, 0xbf, 0x4d, 0x7c, 0x50, 0x01, 0x56, 0x93,
	0x3b, 0xb4, 0x8f, 0x94, 0x20, 0x1f, 0xd7, 0xa1, 0xae, 0x61, 0x22, 0xbb, 0x81, 0x8f, 0x59, 0x83,
	0x95, 0xc4, 0x33, 0xd1, 0x07, 0x2e, 0x81, 0x18, 0x73, 0x26, 0xf8, 0x10, 0x4f, 0x83, 0xde, 0xfd,
	0xe7, 0x03, 0xbe, 0x03, 0x29, 0xde, 0xa7, 0x3e, 0x4a, 0x80, 0x6f, 0xa3, 0xde, 0x7e, 0x27, 0xbe,
	0x79, 0x3a, 0x0e, 0xe9, 0x32, 0xd1, 0x38, 0x05, 0xa6, 0x4a, 0x16, 0x52, 0x7c, 0xc1, 0xb9, 0xe5,
	0xee, 0x2f, 0xce, 0xc8, 0xf7, 0xc1, 0xaf, 0xf7, 0x01, 0xea, 0x50, 0x71, 0x75, 0x98, 0x09, 0x95,
	0xe3, 0xb6, 0xff, 0xb5, 0x9e, 0xf9, 0xd1, 0xef, 0x94, 0x97, 0xfb, 0x04, 0xfa, 0x64, 0x0f, 0x20,
	0x7b, 0x5d, 0x1a, 0x97, 0xf1, 0xc7, 0x9e, 0x85, 0x12, 0x0c, 0xc2, 0xff, 0x7c, 0x1b, 0xb4, 0xcf,
	0x7d, 0x08, 0xd3, 0x81, 0xe0, 0x2e, 0xeb, 0x6a, 0xcf, 0x3a, 0x91, 0x66, 0xe3, 0x8b, 0xfd, 0xe1,
	0xc2, 0x4c, 0xae, 0x0e, 0x41, 0x4b, 0x59, 0x4d, 0x14, 0xca, 0xc7, 0x45, 0x30, 0x25, 0x5a, 0x9b,
	0x3b, 0x82, 0xaf, 0x83, 0xd2, 0x03, 0xba, 0xf5, 0x9b, 0x05, 0x0a, 0x38, 0xb7, 0x6e, 0x01, 0xf6,
	0x89, 0x11, 0x4c, 0x39, 0x1a, 0x04, 0x94, 0x2b, 0x49, 0x1a, 0x05, 0x64, 0x1b, 0x7d, 0xc1, 0x7c,
	0x9a, 0x2a, 0x4c, 0xb8, 0x02, 0xd0, 0xc3, 0x71, 0x39, 0x51, 0x1e, 0x0f, 0x14, 0xe1, 0xfe, 0xf8,
	0xed, 0xca, 0x99, 0x30, 0x1b, 0x54, 0x4b, 0x59, 0x0a, 0x37, 0x0b, 0x42, 0xa9, 0x7e, 0xea, 0x17,
	0xe9, 0xf3, 0xfd, 0x0d, 0xe0, 0x14, 0x4c, 0x99, 0xa4, 0x24, 0x35, 0x28, 0xc7, 0x0f, 0x37, 0x63,
	0x3a, 0xab, 0xef, 0x96, 0xce, 0x2e, 0x05, 0xe6, 0xfc, 0x52, 0x60, 0xde, 0x5c, 0x0a, 0xcc, 0xe3,
	0x2b, 0x21, 0x75, 0x7e, 0x25, 0xa4, 0x5e, 0x5f, 0x09, 0xa9, 0xbf, 0xbe, 0x0f, 0xf5, 0x8b, 0x3d,
	0xdd, 0x52, 0x4a, 0xd8, 0x42, 0x32, 0x41, 0x75, 0x45, 0x97, 0x8f, 0x83, 0xdf, 0x7c, 0xa7, 0x6d,
	0x1c, 0x64, 0xdc, 0xdf, 0xed, 0xad, 0x8f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xdc, 0x1c, 0x5f, 0x3f,
	0x03, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateCustody(ctx context.Context, in *MsgCreteCustodyRecord, opts ...grpc.CallOption) (*MsgCreteCustodyRecordResponse, error)
	//  rpc AddToCustodyPool(MsgAddToCustodyPool) returns (MsgAddToCustodyPoolResponse);
	//  rpc RemoveFromCustodyPool(MsgRemoveFromCustodyPool) returns (MsgRemoveFromCustodyPoolResponse);
	AddToCustodians(ctx context.Context, in *MsgAddToCustodyCustodians, opts ...grpc.CallOption) (*MsgAddToCustodyCustodiansResponse, error)
	RemoveFromCustodians(ctx context.Context, in *MsgRemoveFromCustodyCustodians, opts ...grpc.CallOption) (*MsgRemoveFromCustodyCustodiansResponse, error)
	DropCustodians(ctx context.Context, in *MsgDropCustodyCustodians, opts ...grpc.CallOption) (*MsgDropCustodyCustodiansResponse, error)
	AddToWhiteList(ctx context.Context, in *MsgAddToCustodyWhiteList, opts ...grpc.CallOption) (*MsgAddToCustodyWhiteListResponse, error)
	RemoveFromWhiteList(ctx context.Context, in *MsgRemoveFromCustodyWhiteList, opts ...grpc.CallOption) (*MsgRemoveFromCustodyWhiteListResponse, error)
	DropWhiteList(ctx context.Context, in *MsgDropCustodyWhiteList, opts ...grpc.CallOption) (*MsgDropCustodyWhiteListResponse, error)
	AddToLimits(ctx context.Context, in *MsgAddToCustodyLimits, opts ...grpc.CallOption) (*MsgAddToCustodyLimitsResponse, error)
	RemoveFromLimits(ctx context.Context, in *MsgRemoveFromCustodyLimits, opts ...grpc.CallOption) (*MsgRemoveFromCustodyLimitsResponse, error)
	DropLimits(ctx context.Context, in *MsgDropCustodyLimits, opts ...grpc.CallOption) (*MsgDropCustodyLimitsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateCustody(ctx context.Context, in *MsgCreteCustodyRecord, opts ...grpc.CallOption) (*MsgCreteCustodyRecordResponse, error) {
	out := new(MsgCreteCustodyRecordResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/CreateCustody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddToCustodians(ctx context.Context, in *MsgAddToCustodyCustodians, opts ...grpc.CallOption) (*MsgAddToCustodyCustodiansResponse, error) {
	out := new(MsgAddToCustodyCustodiansResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/AddToCustodians", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveFromCustodians(ctx context.Context, in *MsgRemoveFromCustodyCustodians, opts ...grpc.CallOption) (*MsgRemoveFromCustodyCustodiansResponse, error) {
	out := new(MsgRemoveFromCustodyCustodiansResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/RemoveFromCustodians", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DropCustodians(ctx context.Context, in *MsgDropCustodyCustodians, opts ...grpc.CallOption) (*MsgDropCustodyCustodiansResponse, error) {
	out := new(MsgDropCustodyCustodiansResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/DropCustodians", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddToWhiteList(ctx context.Context, in *MsgAddToCustodyWhiteList, opts ...grpc.CallOption) (*MsgAddToCustodyWhiteListResponse, error) {
	out := new(MsgAddToCustodyWhiteListResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/AddToWhiteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveFromWhiteList(ctx context.Context, in *MsgRemoveFromCustodyWhiteList, opts ...grpc.CallOption) (*MsgRemoveFromCustodyWhiteListResponse, error) {
	out := new(MsgRemoveFromCustodyWhiteListResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/RemoveFromWhiteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DropWhiteList(ctx context.Context, in *MsgDropCustodyWhiteList, opts ...grpc.CallOption) (*MsgDropCustodyWhiteListResponse, error) {
	out := new(MsgDropCustodyWhiteListResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/DropWhiteList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddToLimits(ctx context.Context, in *MsgAddToCustodyLimits, opts ...grpc.CallOption) (*MsgAddToCustodyLimitsResponse, error) {
	out := new(MsgAddToCustodyLimitsResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/AddToLimits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveFromLimits(ctx context.Context, in *MsgRemoveFromCustodyLimits, opts ...grpc.CallOption) (*MsgRemoveFromCustodyLimitsResponse, error) {
	out := new(MsgRemoveFromCustodyLimitsResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/RemoveFromLimits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DropLimits(ctx context.Context, in *MsgDropCustodyLimits, opts ...grpc.CallOption) (*MsgDropCustodyLimitsResponse, error) {
	out := new(MsgDropCustodyLimitsResponse)
	err := c.cc.Invoke(ctx, "/kira.custody.Msg/DropLimits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateCustody(context.Context, *MsgCreteCustodyRecord) (*MsgCreteCustodyRecordResponse, error)
	//  rpc AddToCustodyPool(MsgAddToCustodyPool) returns (MsgAddToCustodyPoolResponse);
	//  rpc RemoveFromCustodyPool(MsgRemoveFromCustodyPool) returns (MsgRemoveFromCustodyPoolResponse);
	AddToCustodians(context.Context, *MsgAddToCustodyCustodians) (*MsgAddToCustodyCustodiansResponse, error)
	RemoveFromCustodians(context.Context, *MsgRemoveFromCustodyCustodians) (*MsgRemoveFromCustodyCustodiansResponse, error)
	DropCustodians(context.Context, *MsgDropCustodyCustodians) (*MsgDropCustodyCustodiansResponse, error)
	AddToWhiteList(context.Context, *MsgAddToCustodyWhiteList) (*MsgAddToCustodyWhiteListResponse, error)
	RemoveFromWhiteList(context.Context, *MsgRemoveFromCustodyWhiteList) (*MsgRemoveFromCustodyWhiteListResponse, error)
	DropWhiteList(context.Context, *MsgDropCustodyWhiteList) (*MsgDropCustodyWhiteListResponse, error)
	AddToLimits(context.Context, *MsgAddToCustodyLimits) (*MsgAddToCustodyLimitsResponse, error)
	RemoveFromLimits(context.Context, *MsgRemoveFromCustodyLimits) (*MsgRemoveFromCustodyLimitsResponse, error)
	DropLimits(context.Context, *MsgDropCustodyLimits) (*MsgDropCustodyLimitsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateCustody(ctx context.Context, req *MsgCreteCustodyRecord) (*MsgCreteCustodyRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustody not implemented")
}
func (*UnimplementedMsgServer) AddToCustodians(ctx context.Context, req *MsgAddToCustodyCustodians) (*MsgAddToCustodyCustodiansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToCustodians not implemented")
}
func (*UnimplementedMsgServer) RemoveFromCustodians(ctx context.Context, req *MsgRemoveFromCustodyCustodians) (*MsgRemoveFromCustodyCustodiansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromCustodians not implemented")
}
func (*UnimplementedMsgServer) DropCustodians(ctx context.Context, req *MsgDropCustodyCustodians) (*MsgDropCustodyCustodiansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropCustodians not implemented")
}
func (*UnimplementedMsgServer) AddToWhiteList(ctx context.Context, req *MsgAddToCustodyWhiteList) (*MsgAddToCustodyWhiteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToWhiteList not implemented")
}
func (*UnimplementedMsgServer) RemoveFromWhiteList(ctx context.Context, req *MsgRemoveFromCustodyWhiteList) (*MsgRemoveFromCustodyWhiteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromWhiteList not implemented")
}
func (*UnimplementedMsgServer) DropWhiteList(ctx context.Context, req *MsgDropCustodyWhiteList) (*MsgDropCustodyWhiteListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropWhiteList not implemented")
}
func (*UnimplementedMsgServer) AddToLimits(ctx context.Context, req *MsgAddToCustodyLimits) (*MsgAddToCustodyLimitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddToLimits not implemented")
}
func (*UnimplementedMsgServer) RemoveFromLimits(ctx context.Context, req *MsgRemoveFromCustodyLimits) (*MsgRemoveFromCustodyLimitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFromLimits not implemented")
}
func (*UnimplementedMsgServer) DropLimits(ctx context.Context, req *MsgDropCustodyLimits) (*MsgDropCustodyLimitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropLimits not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateCustody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreteCustodyRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCustody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/CreateCustody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCustody(ctx, req.(*MsgCreteCustodyRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddToCustodians_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddToCustodyCustodians)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddToCustodians(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/AddToCustodians",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddToCustodians(ctx, req.(*MsgAddToCustodyCustodians))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveFromCustodians_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveFromCustodyCustodians)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveFromCustodians(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/RemoveFromCustodians",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveFromCustodians(ctx, req.(*MsgRemoveFromCustodyCustodians))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DropCustodians_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDropCustodyCustodians)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DropCustodians(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/DropCustodians",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DropCustodians(ctx, req.(*MsgDropCustodyCustodians))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddToWhiteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddToCustodyWhiteList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddToWhiteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/AddToWhiteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddToWhiteList(ctx, req.(*MsgAddToCustodyWhiteList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveFromWhiteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveFromCustodyWhiteList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveFromWhiteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/RemoveFromWhiteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveFromWhiteList(ctx, req.(*MsgRemoveFromCustodyWhiteList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DropWhiteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDropCustodyWhiteList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DropWhiteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/DropWhiteList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DropWhiteList(ctx, req.(*MsgDropCustodyWhiteList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddToLimits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddToCustodyLimits)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddToLimits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/AddToLimits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddToLimits(ctx, req.(*MsgAddToCustodyLimits))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveFromLimits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveFromCustodyLimits)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveFromLimits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/RemoveFromLimits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveFromLimits(ctx, req.(*MsgRemoveFromCustodyLimits))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DropLimits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDropCustodyLimits)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DropLimits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.custody.Msg/DropLimits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DropLimits(ctx, req.(*MsgDropCustodyLimits))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kira.custody.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustody",
			Handler:    _Msg_CreateCustody_Handler,
		},
		{
			MethodName: "AddToCustodians",
			Handler:    _Msg_AddToCustodians_Handler,
		},
		{
			MethodName: "RemoveFromCustodians",
			Handler:    _Msg_RemoveFromCustodians_Handler,
		},
		{
			MethodName: "DropCustodians",
			Handler:    _Msg_DropCustodians_Handler,
		},
		{
			MethodName: "AddToWhiteList",
			Handler:    _Msg_AddToWhiteList_Handler,
		},
		{
			MethodName: "RemoveFromWhiteList",
			Handler:    _Msg_RemoveFromWhiteList_Handler,
		},
		{
			MethodName: "DropWhiteList",
			Handler:    _Msg_DropWhiteList_Handler,
		},
		{
			MethodName: "AddToLimits",
			Handler:    _Msg_AddToLimits_Handler,
		},
		{
			MethodName: "RemoveFromLimits",
			Handler:    _Msg_RemoveFromLimits_Handler,
		},
		{
			MethodName: "DropLimits",
			Handler:    _Msg_DropLimits_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kira/custody/tx.proto",
}

func (m *MsgCreteCustodyRecord) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreteCustodyRecord) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreteCustodyRecord) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.CustodySettings.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddToCustodyCustodians) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddToCustodyCustodians) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddToCustodyCustodians) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddAddress) > 0 {
		for iNdEx := len(m.AddAddress) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AddAddress[iNdEx])
			copy(dAtA[i:], m.AddAddress[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.AddAddress[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveFromCustodyCustodians) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveFromCustodyCustodians) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveFromCustodyCustodians) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RemoveAddress) > 0 {
		i -= len(m.RemoveAddress)
		copy(dAtA[i:], m.RemoveAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RemoveAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDropCustodyCustodians) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDropCustodyCustodians) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDropCustodyCustodians) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddToCustodyWhiteList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddToCustodyWhiteList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddToCustodyWhiteList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AddAddress) > 0 {
		for iNdEx := len(m.AddAddress) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.AddAddress[iNdEx])
			copy(dAtA[i:], m.AddAddress[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.AddAddress[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveFromCustodyWhiteList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveFromCustodyWhiteList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveFromCustodyWhiteList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RemoveAddress) > 0 {
		i -= len(m.RemoveAddress)
		copy(dAtA[i:], m.RemoveAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RemoveAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDropCustodyWhiteList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDropCustodyWhiteList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDropCustodyWhiteList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddToCustodyLimits) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddToCustodyLimits) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddToCustodyLimits) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Limit) > 0 {
		i -= len(m.Limit)
		copy(dAtA[i:], m.Limit)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Limit)))
		i--
		dAtA[i] = 0x22
	}
	if m.Amount != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Amount))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveFromCustodyLimits) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveFromCustodyLimits) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveFromCustodyLimits) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDropCustodyLimits) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDropCustodyLimits) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDropCustodyLimits) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewKey) > 0 {
		i -= len(m.NewKey)
		copy(dAtA[i:], m.NewKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OldKey) > 0 {
		i -= len(m.OldKey)
		copy(dAtA[i:], m.OldKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OldKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreteCustodyRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreteCustodyRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreteCustodyRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddToCustodyCustodiansResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddToCustodyCustodiansResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddToCustodyCustodiansResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveFromCustodyCustodiansResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveFromCustodyCustodiansResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveFromCustodyCustodiansResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDropCustodyCustodiansResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDropCustodyCustodiansResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDropCustodyCustodiansResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddToCustodyWhiteListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddToCustodyWhiteListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddToCustodyWhiteListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveFromCustodyWhiteListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveFromCustodyWhiteListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveFromCustodyWhiteListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDropCustodyWhiteListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDropCustodyWhiteListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDropCustodyWhiteListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddToCustodyLimitsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddToCustodyLimitsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddToCustodyLimitsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveFromCustodyLimitsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveFromCustodyLimitsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveFromCustodyLimitsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDropCustodyLimitsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDropCustodyLimitsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDropCustodyLimitsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreteCustodyRecord) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.CustodySettings.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddToCustodyCustodians) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.AddAddress) > 0 {
		for _, b := range m.AddAddress {
			l = len(b)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveFromCustodyCustodians) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RemoveAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDropCustodyCustodians) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddToCustodyWhiteList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.AddAddress) > 0 {
		for _, b := range m.AddAddress {
			l = len(b)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveFromCustodyWhiteList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RemoveAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDropCustodyWhiteList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddToCustodyLimits) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Amount != 0 {
		n += 1 + sovTx(uint64(m.Amount))
	}
	l = len(m.Limit)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveFromCustodyLimits) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDropCustodyLimits) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OldKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreteCustodyRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddToCustodyCustodiansResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveFromCustodyCustodiansResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDropCustodyCustodiansResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddToCustodyWhiteListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveFromCustodyWhiteListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDropCustodyWhiteListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddToCustodyLimitsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveFromCustodyLimitsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDropCustodyLimitsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreteCustodyRecord) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreteCustodyRecord: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreteCustodyRecord: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustodySettings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CustodySettings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddToCustodyCustodians) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddToCustodyCustodians: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddToCustodyCustodians: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddAddress", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddAddress = append(m.AddAddress, make([]byte, postIndex-iNdEx))
			copy(m.AddAddress[len(m.AddAddress)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveFromCustodyCustodians) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyCustodians: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyCustodians: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveAddress", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveAddress = append(m.RemoveAddress[:0], dAtA[iNdEx:postIndex]...)
			if m.RemoveAddress == nil {
				m.RemoveAddress = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDropCustodyCustodians) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDropCustodyCustodians: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDropCustodyCustodians: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddToCustodyWhiteList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddToCustodyWhiteList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddToCustodyWhiteList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddAddress", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddAddress = append(m.AddAddress, make([]byte, postIndex-iNdEx))
			copy(m.AddAddress[len(m.AddAddress)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveFromCustodyWhiteList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyWhiteList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyWhiteList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoveAddress", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RemoveAddress = append(m.RemoveAddress[:0], dAtA[iNdEx:postIndex]...)
			if m.RemoveAddress == nil {
				m.RemoveAddress = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDropCustodyWhiteList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDropCustodyWhiteList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDropCustodyWhiteList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddToCustodyLimits) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddToCustodyLimits: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddToCustodyLimits: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			m.Amount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Amount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Limit = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveFromCustodyLimits) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyLimits: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyLimits: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDropCustodyLimits) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDropCustodyLimits: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDropCustodyLimits: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = append(m.Address[:0], dAtA[iNdEx:postIndex]...)
			if m.Address == nil {
				m.Address = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OldKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OldKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreteCustodyRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreteCustodyRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreteCustodyRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddToCustodyCustodiansResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddToCustodyCustodiansResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddToCustodyCustodiansResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveFromCustodyCustodiansResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyCustodiansResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyCustodiansResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDropCustodyCustodiansResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDropCustodyCustodiansResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDropCustodyCustodiansResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddToCustodyWhiteListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddToCustodyWhiteListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddToCustodyWhiteListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveFromCustodyWhiteListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyWhiteListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyWhiteListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDropCustodyWhiteListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDropCustodyWhiteListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDropCustodyWhiteListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddToCustodyLimitsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddToCustodyLimitsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddToCustodyLimitsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveFromCustodyLimitsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyLimitsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveFromCustodyLimitsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDropCustodyLimitsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDropCustodyLimitsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDropCustodyLimitsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
