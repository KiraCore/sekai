// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
// proposal Content.
type MsgSubmitProposal struct {
	Proposer    github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=proposer,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"proposer,omitempty"`
	Title       string                                        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string                                        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Content     *types.Any                                    `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *MsgSubmitProposal) Reset()      { *m = MsgSubmitProposal{} }
func (*MsgSubmitProposal) ProtoMessage() {}
func (*MsgSubmitProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{0}
}
func (m *MsgSubmitProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitProposal.Merge(m, src)
}
func (m *MsgSubmitProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitProposal proto.InternalMessageInfo

// MsgSubmitProposalResponse defines the Msg/SubmitProposal response type.
type MsgSubmitProposalResponse struct {
	ProposalID uint64 `protobuf:"varint,1,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
}

func (m *MsgSubmitProposalResponse) Reset()         { *m = MsgSubmitProposalResponse{} }
func (m *MsgSubmitProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitProposalResponse) ProtoMessage()    {}
func (*MsgSubmitProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{1}
}
func (m *MsgSubmitProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitProposalResponse.Merge(m, src)
}
func (m *MsgSubmitProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitProposalResponse proto.InternalMessageInfo

func (m *MsgSubmitProposalResponse) GetProposalID() uint64 {
	if m != nil {
		return m.ProposalID
	}
	return 0
}

type MsgWhitelistPermissionsResponse struct {
}

func (m *MsgWhitelistPermissionsResponse) Reset()         { *m = MsgWhitelistPermissionsResponse{} }
func (m *MsgWhitelistPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWhitelistPermissionsResponse) ProtoMessage()    {}
func (*MsgWhitelistPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{2}
}
func (m *MsgWhitelistPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWhitelistPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWhitelistPermissionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWhitelistPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWhitelistPermissionsResponse.Merge(m, src)
}
func (m *MsgWhitelistPermissionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWhitelistPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWhitelistPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWhitelistPermissionsResponse proto.InternalMessageInfo

type MsgBlacklistPermissionsResponse struct {
}

func (m *MsgBlacklistPermissionsResponse) Reset()         { *m = MsgBlacklistPermissionsResponse{} }
func (m *MsgBlacklistPermissionsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBlacklistPermissionsResponse) ProtoMessage()    {}
func (*MsgBlacklistPermissionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{3}
}
func (m *MsgBlacklistPermissionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBlacklistPermissionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBlacklistPermissionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBlacklistPermissionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBlacklistPermissionsResponse.Merge(m, src)
}
func (m *MsgBlacklistPermissionsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBlacklistPermissionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBlacklistPermissionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBlacklistPermissionsResponse proto.InternalMessageInfo

type MsgClaimCouncilorResponse struct {
}

func (m *MsgClaimCouncilorResponse) Reset()         { *m = MsgClaimCouncilorResponse{} }
func (m *MsgClaimCouncilorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgClaimCouncilorResponse) ProtoMessage()    {}
func (*MsgClaimCouncilorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{4}
}
func (m *MsgClaimCouncilorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClaimCouncilorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClaimCouncilorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClaimCouncilorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClaimCouncilorResponse.Merge(m, src)
}
func (m *MsgClaimCouncilorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgClaimCouncilorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClaimCouncilorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClaimCouncilorResponse proto.InternalMessageInfo

type MsgVoteProposalResponse struct {
}

func (m *MsgVoteProposalResponse) Reset()         { *m = MsgVoteProposalResponse{} }
func (m *MsgVoteProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteProposalResponse) ProtoMessage()    {}
func (*MsgVoteProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{5}
}
func (m *MsgVoteProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteProposalResponse.Merge(m, src)
}
func (m *MsgVoteProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteProposalResponse proto.InternalMessageInfo

type MsgCreateRoleResponse struct {
}

func (m *MsgCreateRoleResponse) Reset()         { *m = MsgCreateRoleResponse{} }
func (m *MsgCreateRoleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRoleResponse) ProtoMessage()    {}
func (*MsgCreateRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{6}
}
func (m *MsgCreateRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRoleResponse.Merge(m, src)
}
func (m *MsgCreateRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRoleResponse proto.InternalMessageInfo

type MsgAssignRoleResponse struct {
}

func (m *MsgAssignRoleResponse) Reset()         { *m = MsgAssignRoleResponse{} }
func (m *MsgAssignRoleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAssignRoleResponse) ProtoMessage()    {}
func (*MsgAssignRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{7}
}
func (m *MsgAssignRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAssignRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAssignRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAssignRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAssignRoleResponse.Merge(m, src)
}
func (m *MsgAssignRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAssignRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAssignRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAssignRoleResponse proto.InternalMessageInfo

type MsgRemoveRoleResponse struct {
}

func (m *MsgRemoveRoleResponse) Reset()         { *m = MsgRemoveRoleResponse{} }
func (m *MsgRemoveRoleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveRoleResponse) ProtoMessage()    {}
func (*MsgRemoveRoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{8}
}
func (m *MsgRemoveRoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveRoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveRoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveRoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveRoleResponse.Merge(m, src)
}
func (m *MsgRemoveRoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveRoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveRoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveRoleResponse proto.InternalMessageInfo

type MsgSetNetworkPropertiesResponse struct {
}

func (m *MsgSetNetworkPropertiesResponse) Reset()         { *m = MsgSetNetworkPropertiesResponse{} }
func (m *MsgSetNetworkPropertiesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetNetworkPropertiesResponse) ProtoMessage()    {}
func (*MsgSetNetworkPropertiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{9}
}
func (m *MsgSetNetworkPropertiesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetNetworkPropertiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetNetworkPropertiesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetNetworkPropertiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetNetworkPropertiesResponse.Merge(m, src)
}
func (m *MsgSetNetworkPropertiesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetNetworkPropertiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetNetworkPropertiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetNetworkPropertiesResponse proto.InternalMessageInfo

type MsgSetExecutionFeeResponse struct {
}

func (m *MsgSetExecutionFeeResponse) Reset()         { *m = MsgSetExecutionFeeResponse{} }
func (m *MsgSetExecutionFeeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetExecutionFeeResponse) ProtoMessage()    {}
func (*MsgSetExecutionFeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{10}
}
func (m *MsgSetExecutionFeeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetExecutionFeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetExecutionFeeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetExecutionFeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetExecutionFeeResponse.Merge(m, src)
}
func (m *MsgSetExecutionFeeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetExecutionFeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetExecutionFeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetExecutionFeeResponse proto.InternalMessageInfo

type MsgWhitelistRolePermissionResponse struct {
}

func (m *MsgWhitelistRolePermissionResponse) Reset()         { *m = MsgWhitelistRolePermissionResponse{} }
func (m *MsgWhitelistRolePermissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWhitelistRolePermissionResponse) ProtoMessage()    {}
func (*MsgWhitelistRolePermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{11}
}
func (m *MsgWhitelistRolePermissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWhitelistRolePermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWhitelistRolePermissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWhitelistRolePermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWhitelistRolePermissionResponse.Merge(m, src)
}
func (m *MsgWhitelistRolePermissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWhitelistRolePermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWhitelistRolePermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWhitelistRolePermissionResponse proto.InternalMessageInfo

type MsgBlacklistRolePermissionResponse struct {
}

func (m *MsgBlacklistRolePermissionResponse) Reset()         { *m = MsgBlacklistRolePermissionResponse{} }
func (m *MsgBlacklistRolePermissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgBlacklistRolePermissionResponse) ProtoMessage()    {}
func (*MsgBlacklistRolePermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{12}
}
func (m *MsgBlacklistRolePermissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgBlacklistRolePermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgBlacklistRolePermissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgBlacklistRolePermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgBlacklistRolePermissionResponse.Merge(m, src)
}
func (m *MsgBlacklistRolePermissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgBlacklistRolePermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgBlacklistRolePermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgBlacklistRolePermissionResponse proto.InternalMessageInfo

type MsgRemoveWhitelistRolePermissionResponse struct {
}

func (m *MsgRemoveWhitelistRolePermissionResponse) Reset() {
	*m = MsgRemoveWhitelistRolePermissionResponse{}
}
func (m *MsgRemoveWhitelistRolePermissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveWhitelistRolePermissionResponse) ProtoMessage()    {}
func (*MsgRemoveWhitelistRolePermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{13}
}
func (m *MsgRemoveWhitelistRolePermissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveWhitelistRolePermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveWhitelistRolePermissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveWhitelistRolePermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveWhitelistRolePermissionResponse.Merge(m, src)
}
func (m *MsgRemoveWhitelistRolePermissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveWhitelistRolePermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveWhitelistRolePermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveWhitelistRolePermissionResponse proto.InternalMessageInfo

type MsgRemoveBlacklistRolePermissionResponse struct {
}

func (m *MsgRemoveBlacklistRolePermissionResponse) Reset() {
	*m = MsgRemoveBlacklistRolePermissionResponse{}
}
func (m *MsgRemoveBlacklistRolePermissionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveBlacklistRolePermissionResponse) ProtoMessage()    {}
func (*MsgRemoveBlacklistRolePermissionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{14}
}
func (m *MsgRemoveBlacklistRolePermissionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveBlacklistRolePermissionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveBlacklistRolePermissionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveBlacklistRolePermissionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveBlacklistRolePermissionResponse.Merge(m, src)
}
func (m *MsgRemoveBlacklistRolePermissionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveBlacklistRolePermissionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveBlacklistRolePermissionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveBlacklistRolePermissionResponse proto.InternalMessageInfo

type MsgCreateIdentityRecordResponse struct {
	RecordId uint64 `protobuf:"varint,1,opt,name=recordId,proto3" json:"recordId,omitempty"`
}

func (m *MsgCreateIdentityRecordResponse) Reset()         { *m = MsgCreateIdentityRecordResponse{} }
func (m *MsgCreateIdentityRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIdentityRecordResponse) ProtoMessage()    {}
func (*MsgCreateIdentityRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{15}
}
func (m *MsgCreateIdentityRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIdentityRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIdentityRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIdentityRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIdentityRecordResponse.Merge(m, src)
}
func (m *MsgCreateIdentityRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIdentityRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIdentityRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIdentityRecordResponse proto.InternalMessageInfo

func (m *MsgCreateIdentityRecordResponse) GetRecordId() uint64 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type MsgEditIdentityRecordResponse struct {
}

func (m *MsgEditIdentityRecordResponse) Reset()         { *m = MsgEditIdentityRecordResponse{} }
func (m *MsgEditIdentityRecordResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditIdentityRecordResponse) ProtoMessage()    {}
func (*MsgEditIdentityRecordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{16}
}
func (m *MsgEditIdentityRecordResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditIdentityRecordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditIdentityRecordResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditIdentityRecordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditIdentityRecordResponse.Merge(m, src)
}
func (m *MsgEditIdentityRecordResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditIdentityRecordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditIdentityRecordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditIdentityRecordResponse proto.InternalMessageInfo

type MsgRequestIdentityRecordsVerifyResponse struct {
	RequestId uint64 `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
}

func (m *MsgRequestIdentityRecordsVerifyResponse) Reset() {
	*m = MsgRequestIdentityRecordsVerifyResponse{}
}
func (m *MsgRequestIdentityRecordsVerifyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRequestIdentityRecordsVerifyResponse) ProtoMessage()    {}
func (*MsgRequestIdentityRecordsVerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{17}
}
func (m *MsgRequestIdentityRecordsVerifyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestIdentityRecordsVerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestIdentityRecordsVerifyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestIdentityRecordsVerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestIdentityRecordsVerifyResponse.Merge(m, src)
}
func (m *MsgRequestIdentityRecordsVerifyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestIdentityRecordsVerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestIdentityRecordsVerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestIdentityRecordsVerifyResponse proto.InternalMessageInfo

func (m *MsgRequestIdentityRecordsVerifyResponse) GetRequestId() uint64 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type MsgApproveIdentityRecordsResponse struct {
}

func (m *MsgApproveIdentityRecordsResponse) Reset()         { *m = MsgApproveIdentityRecordsResponse{} }
func (m *MsgApproveIdentityRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApproveIdentityRecordsResponse) ProtoMessage()    {}
func (*MsgApproveIdentityRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{18}
}
func (m *MsgApproveIdentityRecordsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveIdentityRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveIdentityRecordsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveIdentityRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveIdentityRecordsResponse.Merge(m, src)
}
func (m *MsgApproveIdentityRecordsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveIdentityRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveIdentityRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveIdentityRecordsResponse proto.InternalMessageInfo

type MsgCancelIdentityRecordsVerifyRequestResponse struct {
}

func (m *MsgCancelIdentityRecordsVerifyRequestResponse) Reset() {
	*m = MsgCancelIdentityRecordsVerifyRequestResponse{}
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgCancelIdentityRecordsVerifyRequestResponse) ProtoMessage() {}
func (*MsgCancelIdentityRecordsVerifyRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fd2153dc07d3b5c, []int{19}
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelIdentityRecordsVerifyRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelIdentityRecordsVerifyRequestResponse.Merge(m, src)
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelIdentityRecordsVerifyRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelIdentityRecordsVerifyRequestResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSubmitProposal)(nil), "kira.gov.MsgSubmitProposal")
	proto.RegisterType((*MsgSubmitProposalResponse)(nil), "kira.gov.MsgSubmitProposalResponse")
	proto.RegisterType((*MsgWhitelistPermissionsResponse)(nil), "kira.gov.MsgWhitelistPermissionsResponse")
	proto.RegisterType((*MsgBlacklistPermissionsResponse)(nil), "kira.gov.MsgBlacklistPermissionsResponse")
	proto.RegisterType((*MsgClaimCouncilorResponse)(nil), "kira.gov.MsgClaimCouncilorResponse")
	proto.RegisterType((*MsgVoteProposalResponse)(nil), "kira.gov.MsgVoteProposalResponse")
	proto.RegisterType((*MsgCreateRoleResponse)(nil), "kira.gov.MsgCreateRoleResponse")
	proto.RegisterType((*MsgAssignRoleResponse)(nil), "kira.gov.MsgAssignRoleResponse")
	proto.RegisterType((*MsgRemoveRoleResponse)(nil), "kira.gov.MsgRemoveRoleResponse")
	proto.RegisterType((*MsgSetNetworkPropertiesResponse)(nil), "kira.gov.MsgSetNetworkPropertiesResponse")
	proto.RegisterType((*MsgSetExecutionFeeResponse)(nil), "kira.gov.MsgSetExecutionFeeResponse")
	proto.RegisterType((*MsgWhitelistRolePermissionResponse)(nil), "kira.gov.MsgWhitelistRolePermissionResponse")
	proto.RegisterType((*MsgBlacklistRolePermissionResponse)(nil), "kira.gov.MsgBlacklistRolePermissionResponse")
	proto.RegisterType((*MsgRemoveWhitelistRolePermissionResponse)(nil), "kira.gov.MsgRemoveWhitelistRolePermissionResponse")
	proto.RegisterType((*MsgRemoveBlacklistRolePermissionResponse)(nil), "kira.gov.MsgRemoveBlacklistRolePermissionResponse")
	proto.RegisterType((*MsgCreateIdentityRecordResponse)(nil), "kira.gov.MsgCreateIdentityRecordResponse")
	proto.RegisterType((*MsgEditIdentityRecordResponse)(nil), "kira.gov.MsgEditIdentityRecordResponse")
	proto.RegisterType((*MsgRequestIdentityRecordsVerifyResponse)(nil), "kira.gov.MsgRequestIdentityRecordsVerifyResponse")
	proto.RegisterType((*MsgApproveIdentityRecordsResponse)(nil), "kira.gov.MsgApproveIdentityRecordsResponse")
	proto.RegisterType((*MsgCancelIdentityRecordsVerifyRequestResponse)(nil), "kira.gov.MsgCancelIdentityRecordsVerifyRequestResponse")
}

func init() { proto.RegisterFile("tx.proto", fileDescriptor_0fd2153dc07d3b5c) }

var fileDescriptor_0fd2153dc07d3b5c = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x4d, 0x6f, 0x1b, 0x45,
	0x18, 0xb6, 0x69, 0x81, 0xf4, 0x6d, 0x95, 0xc2, 0x10, 0x1a, 0x67, 0x9b, 0xda, 0x8e, 0x1b, 0xd4,
	0xb4, 0x90, 0x5d, 0x35, 0x1c, 0x90, 0x40, 0x08, 0x25, 0xa1, 0x45, 0x11, 0x18, 0x45, 0x5b, 0x51,
	0x24, 0x0e, 0x44, 0x9b, 0xdd, 0x37, 0xdb, 0xc1, 0xeb, 0x1d, 0x33, 0x33, 0x4e, 0x63, 0x09, 0x09,
	0x8e, 0x9c, 0x10, 0x47, 0x8e, 0xf9, 0x39, 0x1c, 0x7b, 0xe4, 0x50, 0x21, 0x94, 0x5c, 0xf8, 0x0d,
	0x48, 0x48, 0x68, 0xbf, 0x66, 0x77, 0xc7, 0xbb, 0xb6, 0x39, 0xd9, 0x33, 0xcf, 0xf3, 0x7e, 0x7f,
	0xcc, 0xc2, 0x92, 0x3c, 0x33, 0x47, 0x9c, 0x49, 0x46, 0x96, 0x06, 0x94, 0x3b, 0xa6, 0xcf, 0x4e,
	0x8d, 0x15, 0x9f, 0xf9, 0x2c, 0xbe, 0xb4, 0xa2, 0x7f, 0x09, 0x6e, 0xac, 0xf9, 0x8c, 0xf9, 0x01,
	0x5a, 0xf1, 0xe9, 0x78, 0x7c, 0x62, 0x39, 0xe1, 0x24, 0x85, 0xae, 0x3b, 0xae, 0x64, 0x3c, 0x3d,
	0xdc, 0x74, 0xd9, 0x38, 0x74, 0x69, 0xa0, 0x2e, 0x96, 0x47, 0x9c, 0x8d, 0x98, 0x70, 0x82, 0xf4,
	0x0c, 0x9c, 0x05, 0x98, 0xfe, 0x7f, 0x0b, 0xcf, 0xd0, 0x1d, 0x4b, 0xca, 0xc2, 0xa3, 0x13, 0xcc,
	0x2e, 0x5b, 0x21, 0xca, 0xe7, 0x8c, 0x0f, 0x8e, 0x22, 0x41, 0xe4, 0x92, 0xa2, 0x48, 0x91, 0x5b,
	0x4e, 0x10, 0xb0, 0xe7, 0xe8, 0x1d, 0x0d, 0x51, 0x08, 0xc7, 0x57, 0xf7, 0x2d, 0xea, 0x61, 0x28,
	0xa9, 0x9c, 0x1c, 0x71, 0xf4, 0xa9, 0x90, 0xdc, 0x49, 0x8d, 0xf7, 0x5e, 0x36, 0xe1, 0xcd, 0xbe,
	0xf0, 0x9f, 0x8c, 0x8f, 0x87, 0x54, 0x1e, 0xa6, 0x8e, 0x90, 0x3e, 0x2c, 0x25, 0x4e, 0x21, 0x6f,
	0x35, 0xbb, 0xcd, 0xad, 0x1b, 0x7b, 0x0f, 0xff, 0xf9, 0xb3, 0xb3, 0xed, 0x53, 0xf9, 0x6c, 0x7c,
	0x6c, 0xba, 0x6c, 0x68, 0xb9, 0x4c, 0x0c, 0x99, 0x48, 0x7f, 0xb6, 0x85, 0x37, 0xb0, 0xe4, 0x64,
	0x84, 0xc2, 0xdc, 0x75, 0xdd, 0x5d, 0xcf, 0xe3, 0x28, 0x84, 0xad, 0x54, 0x90, 0x15, 0x78, 0x55,
	0x52, 0x19, 0x60, 0xeb, 0x95, 0x6e, 0x73, 0xeb, 0x9a, 0x9d, 0x1c, 0x48, 0x17, 0xae, 0x7b, 0x28,
	0x5c, 0x4e, 0x47, 0x51, 0x7c, 0xad, 0x2b, 0x31, 0x56, 0xbc, 0x22, 0x26, 0xbc, 0xee, 0xb2, 0x50,
	0x62, 0x28, 0x5b, 0x57, 0xbb, 0xcd, 0xad, 0xeb, 0x3b, 0x2b, 0x66, 0x92, 0x64, 0x33, 0x4b, 0xb2,
	0xb9, 0x1b, 0x4e, 0xec, 0x8c, 0xf4, 0xe1, 0x1b, 0x3f, 0x9f, 0x77, 0x1a, 0xbf, 0x9d, 0x77, 0x1a,
	0x7f, 0x9f, 0x77, 0x1a, 0x3f, 0xbd, 0xec, 0x36, 0x7a, 0x1f, 0xc1, 0xda, 0x54, 0x74, 0x36, 0x8a,
	0x11, 0x0b, 0x05, 0x92, 0x36, 0x40, 0x96, 0xfa, 0x83, 0x4f, 0xe3, 0x38, 0xaf, 0xda, 0x85, 0x9b,
	0xde, 0x06, 0x74, 0xfa, 0xc2, 0xff, 0xfa, 0x19, 0x95, 0x18, 0x50, 0x21, 0x0f, 0x91, 0x0f, 0xa9,
	0x10, 0x94, 0x85, 0x22, 0x53, 0x91, 0x52, 0xf6, 0x02, 0xc7, 0x1d, 0xd4, 0x51, 0x6e, 0xc7, 0x2e,
	0xec, 0x07, 0x0e, 0x1d, 0xee, 0x67, 0x95, 0x57, 0xe0, 0x1a, 0xac, 0xf6, 0x85, 0xff, 0x94, 0x49,
	0xd4, 0xbd, 0xeb, 0xad, 0xc2, 0xdb, 0x91, 0x1c, 0x47, 0x47, 0xa2, 0xcd, 0x02, 0xd4, 0x80, 0x5d,
	0x21, 0xa8, 0x1f, 0x56, 0x00, 0x36, 0x0e, 0xd9, 0x69, 0x59, 0x22, 0xf1, 0xf2, 0x09, 0xca, 0x2f,
	0x93, 0xc6, 0x39, 0x54, 0x7d, 0xa3, 0x28, 0xeb, 0x60, 0x24, 0x94, 0x47, 0x59, 0xc3, 0x3d, 0xc6,
	0x5c, 0xc1, 0x26, 0xf4, 0x8a, 0x99, 0x88, 0x94, 0xe7, 0xa1, 0x6a, 0x2c, 0x95, 0x8c, 0x1a, 0xd6,
	0x03, 0xd8, 0x52, 0x5e, 0xce, 0xd3, 0x58, 0xe4, 0xce, 0xd3, 0xfb, 0x71, 0x1c, 0x64, 0x92, 0xaf,
	0x83, 0xb4, 0xdd, 0x6d, 0x74, 0x19, 0xf7, 0x54, 0xc1, 0x0d, 0x58, 0xe2, 0xf1, 0xcd, 0x81, 0x97,
	0x96, 0x5b, 0x9d, 0x7b, 0x1d, 0xb8, 0xd3, 0x17, 0xfe, 0x23, 0x8f, 0xca, 0x6a, 0xe1, 0xde, 0x67,
	0x70, 0x2f, 0xf6, 0xe5, 0xfb, 0x31, 0x0a, 0x8d, 0x23, 0x9e, 0x22, 0xa7, 0x27, 0x13, 0x65, 0x67,
	0x1d, 0xae, 0xf1, 0x8c, 0x97, 0x1a, 0xca, 0x2f, 0x7a, 0x77, 0x61, 0x23, 0xaa, 0xdf, 0x68, 0xc4,
	0xd9, 0xa9, 0xe6, 0x69, 0x5e, 0x0f, 0x0b, 0xb6, 0xa3, 0x68, 0x9c, 0xd0, 0xc5, 0xa0, 0xc6, 0x58,
	0xac, 0x2f, 0x13, 0xd8, 0xf9, 0x77, 0x19, 0xae, 0xf4, 0x85, 0x4f, 0x6c, 0x58, 0xd6, 0x86, 0xf9,
	0xb6, 0x99, 0x6d, 0x2e, 0x73, 0x6a, 0x16, 0x8c, 0xbb, 0x33, 0x40, 0x15, 0x8f, 0x07, 0x2b, 0x55,
	0x53, 0x40, 0x36, 0x4a, 0xc2, 0x55, 0x14, 0xe3, 0xfe, 0x5c, 0x4a, 0xd1, 0x4a, 0xd5, 0x20, 0x69,
	0x56, 0xaa, 0x28, 0x9a, 0x95, 0x59, 0xe3, 0x18, 0xe5, 0xa7, 0x3c, 0x8b, 0x5a, 0x7e, 0xca, 0xa0,
	0x96, 0x9f, 0xea, 0x29, 0x26, 0x5f, 0xc0, 0x8d, 0xe2, 0x08, 0x93, 0xb5, 0x92, 0x50, 0x11, 0x32,
	0x36, 0x6a, 0x21, 0xa5, 0xed, 0x31, 0x40, 0x3e, 0xf5, 0x64, 0xb5, 0xec, 0x80, 0x02, 0x8c, 0x4e,
	0x0d, 0x50, 0xd4, 0x93, 0x2f, 0x09, 0x4d, 0x4f, 0x0e, 0x68, 0x7a, 0xa6, 0xd7, 0x4a, 0xa4, 0x27,
	0xdf, 0x29, 0x9a, 0x9e, 0x1c, 0xd0, 0xf4, 0x4c, 0x6f, 0xa1, 0xa8, 0xbe, 0x55, 0x2b, 0x48, 0xab,
	0x6f, 0x15, 0x45, 0xab, 0xef, 0xac, 0x45, 0x46, 0xbe, 0x82, 0x9b, 0xda, 0x16, 0x23, 0xeb, 0xba,
	0x74, 0x11, 0x35, 0x36, 0x67, 0xa1, 0x4a, 0xed, 0x10, 0x56, 0x6b, 0x96, 0x15, 0xd9, 0xac, 0x6e,
	0xf1, 0x32, 0xcb, 0x78, 0x6f, 0x11, 0x56, 0xd1, 0x5c, 0xcd, 0xbe, 0xd3, 0xcc, 0xd5, 0xb0, 0x34,
	0x73, 0x73, 0x76, 0x27, 0xf9, 0x11, 0xee, 0xcc, 0x5c, 0xc8, 0xe4, 0x41, 0x45, 0x71, 0xeb, 0x22,
	0xdd, 0x59, 0x9c, 0x3b, 0xed, 0x40, 0x5d, 0xd4, 0x55, 0x0e, 0xd4, 0xc5, 0xbe, 0xb3, 0x38, 0xb7,
	0xd8, 0x9c, 0x55, 0x4f, 0x87, 0xd6, 0x9c, 0x55, 0x14, 0xad, 0x39, 0x67, 0x3e, 0x40, 0xdf, 0x02,
	0x99, 0x7e, 0x61, 0x48, 0x79, 0x72, 0xa6, 0x09, 0xc6, 0xbd, 0x39, 0x04, 0xa5, 0xff, 0x07, 0x58,
	0x9f, 0xf5, 0x40, 0x91, 0xfb, 0x5a, 0x66, 0xea, 0xa9, 0xc6, 0xc3, 0x85, 0xa9, 0xca, 0xfa, 0x77,
	0x70, 0xab, 0xfa, 0x55, 0x23, 0xe5, 0x2d, 0x5a, 0x4d, 0x32, 0xde, 0x5d, 0x80, 0xa4, 0x6c, 0xfd,
	0xd2, 0x84, 0xde, 0xfc, 0xd7, 0x91, 0x58, 0xe5, 0xda, 0xcc, 0x15, 0x30, 0x3e, 0xf8, 0x9f, 0x02,
	0x99, 0x43, 0x7b, 0x9f, 0xfc, 0x7e, 0xd1, 0x6e, 0xbe, 0xb8, 0x68, 0x37, 0xff, 0xba, 0x68, 0x37,
	0x7f, 0xbd, 0x6c, 0x37, 0x5e, 0x5c, 0xb6, 0x1b, 0x7f, 0x5c, 0xb6, 0x1b, 0xdf, 0xbc, 0x53, 0xf8,
	0x6c, 0xfe, 0x9c, 0x72, 0x67, 0x9f, 0x71, 0xb4, 0x04, 0x0e, 0x1c, 0x6a, 0x9d, 0x59, 0x3e, 0x3b,
	0x4d, 0xbe, 0x9c, 0x8f, 0x5f, 0x8b, 0xbf, 0x69, 0xdf, 0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xd5,
	0x5e, 0xbe, 0x17, 0x72, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// SubmitProposal defines a method to create new proposal given a content.
	SubmitProposal(ctx context.Context, in *MsgSubmitProposal, opts ...grpc.CallOption) (*MsgSubmitProposalResponse, error)
	// WhitelistPermissions defines a method for whitelisting a permission for an address.
	WhitelistPermissions(ctx context.Context, in *MsgWhitelistPermissions, opts ...grpc.CallOption) (*MsgWhitelistPermissionsResponse, error)
	// BlacklistPermissions defines a method for blacklisting a permission for an address.
	BlacklistPermissions(ctx context.Context, in *MsgBlacklistPermissions, opts ...grpc.CallOption) (*MsgBlacklistPermissionsResponse, error)
	// ClaimCouncilor defines a method for claiming a councilor
	ClaimCouncilor(ctx context.Context, in *MsgClaimCouncilor, opts ...grpc.CallOption) (*MsgClaimCouncilorResponse, error)
	// VoteProposal defines a method for voting a proposal
	VoteProposal(ctx context.Context, in *MsgVoteProposal, opts ...grpc.CallOption) (*MsgVoteProposalResponse, error)
	// CreateRole defines a method for creating a role
	CreateRole(ctx context.Context, in *MsgCreateRole, opts ...grpc.CallOption) (*MsgCreateRoleResponse, error)
	// AssignRole defines a method for assigning a role to an address
	AssignRole(ctx context.Context, in *MsgAssignRole, opts ...grpc.CallOption) (*MsgAssignRoleResponse, error)
	// RemoveRole defines a method for removing a role from an address
	RemoveRole(ctx context.Context, in *MsgRemoveRole, opts ...grpc.CallOption) (*MsgRemoveRoleResponse, error)
	// SetNetworkProperties defines a method for setting network properties
	SetNetworkProperties(ctx context.Context, in *MsgSetNetworkProperties, opts ...grpc.CallOption) (*MsgSetNetworkPropertiesResponse, error)
	// SetExecutionFee defines a method for setting execution fee
	SetExecutionFee(ctx context.Context, in *MsgSetExecutionFee, opts ...grpc.CallOption) (*MsgSetExecutionFeeResponse, error)
	// WhitelistRolePermission defines a method for whitelisting a permission for a role
	WhitelistRolePermission(ctx context.Context, in *MsgWhitelistRolePermission, opts ...grpc.CallOption) (*MsgWhitelistRolePermissionResponse, error)
	// BlacklistRolePermission defines a method for blacklisting a permission for a role
	BlacklistRolePermission(ctx context.Context, in *MsgBlacklistRolePermission, opts ...grpc.CallOption) (*MsgBlacklistRolePermissionResponse, error)
	// RemoveWhitelistRolePermission defines a method for removing whitelisted permission from a role
	RemoveWhitelistRolePermission(ctx context.Context, in *MsgRemoveWhitelistRolePermission, opts ...grpc.CallOption) (*MsgRemoveWhitelistRolePermissionResponse, error)
	// RemoveBlacklistRolePermission defines a method for removing blacklisted permission from a role
	RemoveBlacklistRolePermission(ctx context.Context, in *MsgRemoveBlacklistRolePermission, opts ...grpc.CallOption) (*MsgRemoveBlacklistRolePermissionResponse, error)
	// CreateIdentityRecord defines a method to create identity record
	CreateIdentityRecord(ctx context.Context, in *MsgCreateIdentityRecord, opts ...grpc.CallOption) (*MsgCreateIdentityRecordResponse, error)
	// EditIdentityRecord defines a method to edit identity record, it removes all verifiers for the record
	EditIdentityRecord(ctx context.Context, in *MsgEditIdentityRecord, opts ...grpc.CallOption) (*MsgEditIdentityRecordResponse, error)
	// RequestIdentityRecordsVerify defines a method to request verify request from specific verifier
	RequestIdentityRecordsVerify(ctx context.Context, in *MsgRequestIdentityRecordsVerify, opts ...grpc.CallOption) (*MsgRequestIdentityRecordsVerifyResponse, error)
	// ApproveIdentityRecords defines a method to accept verification request
	ApproveIdentityRecords(ctx context.Context, in *MsgApproveIdentityRecords, opts ...grpc.CallOption) (*MsgApproveIdentityRecordsResponse, error)
	// CancelIdentityRecordsVerifyRequest defines a method to cancel verification request
	CancelIdentityRecordsVerifyRequest(ctx context.Context, in *MsgCancelIdentityRecordsVerifyRequest, opts ...grpc.CallOption) (*MsgCancelIdentityRecordsVerifyRequestResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SubmitProposal(ctx context.Context, in *MsgSubmitProposal, opts ...grpc.CallOption) (*MsgSubmitProposalResponse, error) {
	out := new(MsgSubmitProposalResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/SubmitProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WhitelistPermissions(ctx context.Context, in *MsgWhitelistPermissions, opts ...grpc.CallOption) (*MsgWhitelistPermissionsResponse, error) {
	out := new(MsgWhitelistPermissionsResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/WhitelistPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BlacklistPermissions(ctx context.Context, in *MsgBlacklistPermissions, opts ...grpc.CallOption) (*MsgBlacklistPermissionsResponse, error) {
	out := new(MsgBlacklistPermissionsResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/BlacklistPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ClaimCouncilor(ctx context.Context, in *MsgClaimCouncilor, opts ...grpc.CallOption) (*MsgClaimCouncilorResponse, error) {
	out := new(MsgClaimCouncilorResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/ClaimCouncilor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteProposal(ctx context.Context, in *MsgVoteProposal, opts ...grpc.CallOption) (*MsgVoteProposalResponse, error) {
	out := new(MsgVoteProposalResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/VoteProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRole(ctx context.Context, in *MsgCreateRole, opts ...grpc.CallOption) (*MsgCreateRoleResponse, error) {
	out := new(MsgCreateRoleResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AssignRole(ctx context.Context, in *MsgAssignRole, opts ...grpc.CallOption) (*MsgAssignRoleResponse, error) {
	out := new(MsgAssignRoleResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/AssignRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveRole(ctx context.Context, in *MsgRemoveRole, opts ...grpc.CallOption) (*MsgRemoveRoleResponse, error) {
	out := new(MsgRemoveRoleResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/RemoveRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetNetworkProperties(ctx context.Context, in *MsgSetNetworkProperties, opts ...grpc.CallOption) (*MsgSetNetworkPropertiesResponse, error) {
	out := new(MsgSetNetworkPropertiesResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/SetNetworkProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetExecutionFee(ctx context.Context, in *MsgSetExecutionFee, opts ...grpc.CallOption) (*MsgSetExecutionFeeResponse, error) {
	out := new(MsgSetExecutionFeeResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/SetExecutionFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WhitelistRolePermission(ctx context.Context, in *MsgWhitelistRolePermission, opts ...grpc.CallOption) (*MsgWhitelistRolePermissionResponse, error) {
	out := new(MsgWhitelistRolePermissionResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/WhitelistRolePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) BlacklistRolePermission(ctx context.Context, in *MsgBlacklistRolePermission, opts ...grpc.CallOption) (*MsgBlacklistRolePermissionResponse, error) {
	out := new(MsgBlacklistRolePermissionResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/BlacklistRolePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveWhitelistRolePermission(ctx context.Context, in *MsgRemoveWhitelistRolePermission, opts ...grpc.CallOption) (*MsgRemoveWhitelistRolePermissionResponse, error) {
	out := new(MsgRemoveWhitelistRolePermissionResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/RemoveWhitelistRolePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveBlacklistRolePermission(ctx context.Context, in *MsgRemoveBlacklistRolePermission, opts ...grpc.CallOption) (*MsgRemoveBlacklistRolePermissionResponse, error) {
	out := new(MsgRemoveBlacklistRolePermissionResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/RemoveBlacklistRolePermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateIdentityRecord(ctx context.Context, in *MsgCreateIdentityRecord, opts ...grpc.CallOption) (*MsgCreateIdentityRecordResponse, error) {
	out := new(MsgCreateIdentityRecordResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/CreateIdentityRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditIdentityRecord(ctx context.Context, in *MsgEditIdentityRecord, opts ...grpc.CallOption) (*MsgEditIdentityRecordResponse, error) {
	out := new(MsgEditIdentityRecordResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/EditIdentityRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RequestIdentityRecordsVerify(ctx context.Context, in *MsgRequestIdentityRecordsVerify, opts ...grpc.CallOption) (*MsgRequestIdentityRecordsVerifyResponse, error) {
	out := new(MsgRequestIdentityRecordsVerifyResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/RequestIdentityRecordsVerify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ApproveIdentityRecords(ctx context.Context, in *MsgApproveIdentityRecords, opts ...grpc.CallOption) (*MsgApproveIdentityRecordsResponse, error) {
	out := new(MsgApproveIdentityRecordsResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/ApproveIdentityRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelIdentityRecordsVerifyRequest(ctx context.Context, in *MsgCancelIdentityRecordsVerifyRequest, opts ...grpc.CallOption) (*MsgCancelIdentityRecordsVerifyRequestResponse, error) {
	out := new(MsgCancelIdentityRecordsVerifyRequestResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Msg/CancelIdentityRecordsVerifyRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// SubmitProposal defines a method to create new proposal given a content.
	SubmitProposal(context.Context, *MsgSubmitProposal) (*MsgSubmitProposalResponse, error)
	// WhitelistPermissions defines a method for whitelisting a permission for an address.
	WhitelistPermissions(context.Context, *MsgWhitelistPermissions) (*MsgWhitelistPermissionsResponse, error)
	// BlacklistPermissions defines a method for blacklisting a permission for an address.
	BlacklistPermissions(context.Context, *MsgBlacklistPermissions) (*MsgBlacklistPermissionsResponse, error)
	// ClaimCouncilor defines a method for claiming a councilor
	ClaimCouncilor(context.Context, *MsgClaimCouncilor) (*MsgClaimCouncilorResponse, error)
	// VoteProposal defines a method for voting a proposal
	VoteProposal(context.Context, *MsgVoteProposal) (*MsgVoteProposalResponse, error)
	// CreateRole defines a method for creating a role
	CreateRole(context.Context, *MsgCreateRole) (*MsgCreateRoleResponse, error)
	// AssignRole defines a method for assigning a role to an address
	AssignRole(context.Context, *MsgAssignRole) (*MsgAssignRoleResponse, error)
	// RemoveRole defines a method for removing a role from an address
	RemoveRole(context.Context, *MsgRemoveRole) (*MsgRemoveRoleResponse, error)
	// SetNetworkProperties defines a method for setting network properties
	SetNetworkProperties(context.Context, *MsgSetNetworkProperties) (*MsgSetNetworkPropertiesResponse, error)
	// SetExecutionFee defines a method for setting execution fee
	SetExecutionFee(context.Context, *MsgSetExecutionFee) (*MsgSetExecutionFeeResponse, error)
	// WhitelistRolePermission defines a method for whitelisting a permission for a role
	WhitelistRolePermission(context.Context, *MsgWhitelistRolePermission) (*MsgWhitelistRolePermissionResponse, error)
	// BlacklistRolePermission defines a method for blacklisting a permission for a role
	BlacklistRolePermission(context.Context, *MsgBlacklistRolePermission) (*MsgBlacklistRolePermissionResponse, error)
	// RemoveWhitelistRolePermission defines a method for removing whitelisted permission from a role
	RemoveWhitelistRolePermission(context.Context, *MsgRemoveWhitelistRolePermission) (*MsgRemoveWhitelistRolePermissionResponse, error)
	// RemoveBlacklistRolePermission defines a method for removing blacklisted permission from a role
	RemoveBlacklistRolePermission(context.Context, *MsgRemoveBlacklistRolePermission) (*MsgRemoveBlacklistRolePermissionResponse, error)
	// CreateIdentityRecord defines a method to create identity record
	CreateIdentityRecord(context.Context, *MsgCreateIdentityRecord) (*MsgCreateIdentityRecordResponse, error)
	// EditIdentityRecord defines a method to edit identity record, it removes all verifiers for the record
	EditIdentityRecord(context.Context, *MsgEditIdentityRecord) (*MsgEditIdentityRecordResponse, error)
	// RequestIdentityRecordsVerify defines a method to request verify request from specific verifier
	RequestIdentityRecordsVerify(context.Context, *MsgRequestIdentityRecordsVerify) (*MsgRequestIdentityRecordsVerifyResponse, error)
	// ApproveIdentityRecords defines a method to accept verification request
	ApproveIdentityRecords(context.Context, *MsgApproveIdentityRecords) (*MsgApproveIdentityRecordsResponse, error)
	// CancelIdentityRecordsVerifyRequest defines a method to cancel verification request
	CancelIdentityRecordsVerifyRequest(context.Context, *MsgCancelIdentityRecordsVerifyRequest) (*MsgCancelIdentityRecordsVerifyRequestResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SubmitProposal(ctx context.Context, req *MsgSubmitProposal) (*MsgSubmitProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitProposal not implemented")
}
func (*UnimplementedMsgServer) WhitelistPermissions(ctx context.Context, req *MsgWhitelistPermissions) (*MsgWhitelistPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhitelistPermissions not implemented")
}
func (*UnimplementedMsgServer) BlacklistPermissions(ctx context.Context, req *MsgBlacklistPermissions) (*MsgBlacklistPermissionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlacklistPermissions not implemented")
}
func (*UnimplementedMsgServer) ClaimCouncilor(ctx context.Context, req *MsgClaimCouncilor) (*MsgClaimCouncilorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClaimCouncilor not implemented")
}
func (*UnimplementedMsgServer) VoteProposal(ctx context.Context, req *MsgVoteProposal) (*MsgVoteProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteProposal not implemented")
}
func (*UnimplementedMsgServer) CreateRole(ctx context.Context, req *MsgCreateRole) (*MsgCreateRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}
func (*UnimplementedMsgServer) AssignRole(ctx context.Context, req *MsgAssignRole) (*MsgAssignRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignRole not implemented")
}
func (*UnimplementedMsgServer) RemoveRole(ctx context.Context, req *MsgRemoveRole) (*MsgRemoveRoleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRole not implemented")
}
func (*UnimplementedMsgServer) SetNetworkProperties(ctx context.Context, req *MsgSetNetworkProperties) (*MsgSetNetworkPropertiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNetworkProperties not implemented")
}
func (*UnimplementedMsgServer) SetExecutionFee(ctx context.Context, req *MsgSetExecutionFee) (*MsgSetExecutionFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetExecutionFee not implemented")
}
func (*UnimplementedMsgServer) WhitelistRolePermission(ctx context.Context, req *MsgWhitelistRolePermission) (*MsgWhitelistRolePermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhitelistRolePermission not implemented")
}
func (*UnimplementedMsgServer) BlacklistRolePermission(ctx context.Context, req *MsgBlacklistRolePermission) (*MsgBlacklistRolePermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlacklistRolePermission not implemented")
}
func (*UnimplementedMsgServer) RemoveWhitelistRolePermission(ctx context.Context, req *MsgRemoveWhitelistRolePermission) (*MsgRemoveWhitelistRolePermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveWhitelistRolePermission not implemented")
}
func (*UnimplementedMsgServer) RemoveBlacklistRolePermission(ctx context.Context, req *MsgRemoveBlacklistRolePermission) (*MsgRemoveBlacklistRolePermissionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveBlacklistRolePermission not implemented")
}
func (*UnimplementedMsgServer) CreateIdentityRecord(ctx context.Context, req *MsgCreateIdentityRecord) (*MsgCreateIdentityRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIdentityRecord not implemented")
}
func (*UnimplementedMsgServer) EditIdentityRecord(ctx context.Context, req *MsgEditIdentityRecord) (*MsgEditIdentityRecordResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditIdentityRecord not implemented")
}
func (*UnimplementedMsgServer) RequestIdentityRecordsVerify(ctx context.Context, req *MsgRequestIdentityRecordsVerify) (*MsgRequestIdentityRecordsVerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestIdentityRecordsVerify not implemented")
}
func (*UnimplementedMsgServer) ApproveIdentityRecords(ctx context.Context, req *MsgApproveIdentityRecords) (*MsgApproveIdentityRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveIdentityRecords not implemented")
}
func (*UnimplementedMsgServer) CancelIdentityRecordsVerifyRequest(ctx context.Context, req *MsgCancelIdentityRecordsVerifyRequest) (*MsgCancelIdentityRecordsVerifyRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelIdentityRecordsVerifyRequest not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SubmitProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/SubmitProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitProposal(ctx, req.(*MsgSubmitProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WhitelistPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWhitelistPermissions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WhitelistPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/WhitelistPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WhitelistPermissions(ctx, req.(*MsgWhitelistPermissions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BlacklistPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBlacklistPermissions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BlacklistPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/BlacklistPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BlacklistPermissions(ctx, req.(*MsgBlacklistPermissions))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ClaimCouncilor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgClaimCouncilor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ClaimCouncilor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/ClaimCouncilor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ClaimCouncilor(ctx, req.(*MsgClaimCouncilor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/VoteProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteProposal(ctx, req.(*MsgVoteProposal))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRole(ctx, req.(*MsgCreateRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AssignRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAssignRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AssignRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/AssignRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AssignRole(ctx, req.(*MsgAssignRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveRole)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/RemoveRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveRole(ctx, req.(*MsgRemoveRole))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetNetworkProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetNetworkProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetNetworkProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/SetNetworkProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetNetworkProperties(ctx, req.(*MsgSetNetworkProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetExecutionFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetExecutionFee)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetExecutionFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/SetExecutionFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetExecutionFee(ctx, req.(*MsgSetExecutionFee))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WhitelistRolePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWhitelistRolePermission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WhitelistRolePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/WhitelistRolePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WhitelistRolePermission(ctx, req.(*MsgWhitelistRolePermission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_BlacklistRolePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgBlacklistRolePermission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).BlacklistRolePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/BlacklistRolePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).BlacklistRolePermission(ctx, req.(*MsgBlacklistRolePermission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveWhitelistRolePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveWhitelistRolePermission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveWhitelistRolePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/RemoveWhitelistRolePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveWhitelistRolePermission(ctx, req.(*MsgRemoveWhitelistRolePermission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveBlacklistRolePermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveBlacklistRolePermission)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveBlacklistRolePermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/RemoveBlacklistRolePermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveBlacklistRolePermission(ctx, req.(*MsgRemoveBlacklistRolePermission))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateIdentityRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateIdentityRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateIdentityRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/CreateIdentityRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateIdentityRecord(ctx, req.(*MsgCreateIdentityRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditIdentityRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditIdentityRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditIdentityRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/EditIdentityRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditIdentityRecord(ctx, req.(*MsgEditIdentityRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RequestIdentityRecordsVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequestIdentityRecordsVerify)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RequestIdentityRecordsVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/RequestIdentityRecordsVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RequestIdentityRecordsVerify(ctx, req.(*MsgRequestIdentityRecordsVerify))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ApproveIdentityRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApproveIdentityRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApproveIdentityRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/ApproveIdentityRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApproveIdentityRecords(ctx, req.(*MsgApproveIdentityRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelIdentityRecordsVerifyRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelIdentityRecordsVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelIdentityRecordsVerifyRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Msg/CancelIdentityRecordsVerifyRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelIdentityRecordsVerifyRequest(ctx, req.(*MsgCancelIdentityRecordsVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kira.gov.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitProposal",
			Handler:    _Msg_SubmitProposal_Handler,
		},
		{
			MethodName: "WhitelistPermissions",
			Handler:    _Msg_WhitelistPermissions_Handler,
		},
		{
			MethodName: "BlacklistPermissions",
			Handler:    _Msg_BlacklistPermissions_Handler,
		},
		{
			MethodName: "ClaimCouncilor",
			Handler:    _Msg_ClaimCouncilor_Handler,
		},
		{
			MethodName: "VoteProposal",
			Handler:    _Msg_VoteProposal_Handler,
		},
		{
			MethodName: "CreateRole",
			Handler:    _Msg_CreateRole_Handler,
		},
		{
			MethodName: "AssignRole",
			Handler:    _Msg_AssignRole_Handler,
		},
		{
			MethodName: "RemoveRole",
			Handler:    _Msg_RemoveRole_Handler,
		},
		{
			MethodName: "SetNetworkProperties",
			Handler:    _Msg_SetNetworkProperties_Handler,
		},
		{
			MethodName: "SetExecutionFee",
			Handler:    _Msg_SetExecutionFee_Handler,
		},
		{
			MethodName: "WhitelistRolePermission",
			Handler:    _Msg_WhitelistRolePermission_Handler,
		},
		{
			MethodName: "BlacklistRolePermission",
			Handler:    _Msg_BlacklistRolePermission_Handler,
		},
		{
			MethodName: "RemoveWhitelistRolePermission",
			Handler:    _Msg_RemoveWhitelistRolePermission_Handler,
		},
		{
			MethodName: "RemoveBlacklistRolePermission",
			Handler:    _Msg_RemoveBlacklistRolePermission_Handler,
		},
		{
			MethodName: "CreateIdentityRecord",
			Handler:    _Msg_CreateIdentityRecord_Handler,
		},
		{
			MethodName: "EditIdentityRecord",
			Handler:    _Msg_EditIdentityRecord_Handler,
		},
		{
			MethodName: "RequestIdentityRecordsVerify",
			Handler:    _Msg_RequestIdentityRecordsVerify_Handler,
		},
		{
			MethodName: "ApproveIdentityRecords",
			Handler:    _Msg_ApproveIdentityRecords_Handler,
		},
		{
			MethodName: "CancelIdentityRecordsVerifyRequest",
			Handler:    _Msg_CancelIdentityRecordsVerifyRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tx.proto",
}

func (m *MsgSubmitProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Proposer) > 0 {
		i -= len(m.Proposer)
		copy(dAtA[i:], m.Proposer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proposer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ProposalID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProposalID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgWhitelistPermissionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWhitelistPermissionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWhitelistPermissionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBlacklistPermissionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBlacklistPermissionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBlacklistPermissionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgClaimCouncilorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClaimCouncilorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClaimCouncilorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAssignRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAssignRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAssignRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveRoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveRoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveRoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetNetworkPropertiesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetNetworkPropertiesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetNetworkPropertiesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetExecutionFeeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetExecutionFeeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetExecutionFeeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWhitelistRolePermissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWhitelistRolePermissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWhitelistRolePermissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgBlacklistRolePermissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgBlacklistRolePermissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgBlacklistRolePermissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveWhitelistRolePermissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveWhitelistRolePermissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveWhitelistRolePermissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveBlacklistRolePermissionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveBlacklistRolePermissionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveBlacklistRolePermissionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateIdentityRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIdentityRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIdentityRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RecordId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RecordId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditIdentityRecordResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditIdentityRecordResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditIdentityRecordResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRequestIdentityRecordsVerifyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestIdentityRecordsVerifyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestIdentityRecordsVerifyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RequestId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RequestId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgApproveIdentityRecordsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveIdentityRecordsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveIdentityRecordsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelIdentityRecordsVerifyRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelIdentityRecordsVerifyRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelIdentityRecordsVerifyRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSubmitProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Proposer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProposalID != 0 {
		n += 1 + sovTx(uint64(m.ProposalID))
	}
	return n
}

func (m *MsgWhitelistPermissionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBlacklistPermissionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgClaimCouncilorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAssignRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveRoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetNetworkPropertiesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetExecutionFeeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWhitelistRolePermissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgBlacklistRolePermissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveWhitelistRolePermissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveBlacklistRolePermissionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateIdentityRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RecordId != 0 {
		n += 1 + sovTx(uint64(m.RecordId))
	}
	return n
}

func (m *MsgEditIdentityRecordResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRequestIdentityRecordsVerifyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RequestId != 0 {
		n += 1 + sovTx(uint64(m.RequestId))
	}
	return n
}

func (m *MsgApproveIdentityRecordsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelIdentityRecordsVerifyRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSubmitProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposer = append(m.Proposer[:0], dAtA[iNdEx:postIndex]...)
			if m.Proposer == nil {
				m.Proposer = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &types.Any{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalID", wireType)
			}
			m.ProposalID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProposalID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWhitelistPermissionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWhitelistPermissionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWhitelistPermissionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBlacklistPermissionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBlacklistPermissionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBlacklistPermissionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClaimCouncilorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClaimCouncilorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClaimCouncilorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAssignRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAssignRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAssignRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveRoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveRoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveRoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetNetworkPropertiesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetNetworkPropertiesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetNetworkPropertiesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetExecutionFeeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetExecutionFeeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetExecutionFeeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWhitelistRolePermissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWhitelistRolePermissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWhitelistRolePermissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgBlacklistRolePermissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgBlacklistRolePermissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgBlacklistRolePermissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveWhitelistRolePermissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveWhitelistRolePermissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveWhitelistRolePermissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveBlacklistRolePermissionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveBlacklistRolePermissionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveBlacklistRolePermissionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateIdentityRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIdentityRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIdentityRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordId", wireType)
			}
			m.RecordId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RecordId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditIdentityRecordResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditIdentityRecordResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditIdentityRecordResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestIdentityRecordsVerifyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestIdentityRecordsVerifyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestIdentityRecordsVerifyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestId", wireType)
			}
			m.RequestId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RequestId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveIdentityRecordsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveIdentityRecordsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveIdentityRecordsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelIdentityRecordsVerifyRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelIdentityRecordsVerifyRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelIdentityRecordsVerifyRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
