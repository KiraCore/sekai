package types

type PermInfo struct {
	Id          int32  `json:"id"`
	Name        string `json:"name"`
	Module      string `json:"module"`
	Description string `json:"description"`
}

var PermMetadata = []PermInfo{
	{
		Id:          int32(PermSetPermissions),
		Name:        "PERMISSION_SET_PERMISSIONS",
		Module:      "gov",
		Description: "the permission that allows to Set Permissions to other actors",
	},
	{
		Id:          int32(PermClaimValidator),
		Name:        "PERMISSION_CLAIM_VALIDATOR",
		Module:      "customstaking",
		Description: "the permission that allows to Claim a validator Seat",
	},
	{
		Id:          int32(PermClaimCouncilor),
		Name:        "PERMISSION_CLAIM_COUNCILOR",
		Module:      "gov",
		Description: "the permission that allows to Claim a Councilor Seat",
	},
	{
		Id:          int32(PermWhitelistAccountPermissionProposal),
		Name:        "PERMISSION_WHITELIST_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for whitelisting an account permission.",
	},
	{
		Id:          int32(PermVoteWhitelistAccountPermissionProposal),
		Name:        "PERMISSION_VOTE_WHITELIST_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to whitelist account permission",
	},
	{
		Id:          int32(PermChangeTxFee),
		Name:        "PERMISSION_CHANGE_TX_FEE",
		Module:      "tokens",
		Description: "Permission to change tx fee",
	},
	{
		Id:          int32(PermUpsertTokenInfo),
		Name:        "PERMISSION_UPSERT_TOKEN_RATE",
		Module:      "tokens",
		Description: "Permission to upsert token rate",
	},
	{
		Id:          int32(PermUpsertRole),
		Name:        "PERMISSION_UPSERT_ROLE",
		Module:      "gov",
		Description: "Permission to upsert a role",
	},
	{
		Id:          int32(PermCreateUpsertDataRegistryProposal),
		Name:        "PERMISSION_CREATE_UPSERT_DATA_REGISTRY_PROPOSAL",
		Module:      "gov",
		Description: "makes possible to create a proposal to change the Data Registry",
	},
	{
		Id:          int32(PermVoteUpsertDataRegistryProposal),
		Name:        "PERMISSION_VOTE_UPSERT_DATA_REGISTRY_PROPOSAL",
		Module:      "gov",
		Description: "makes possible to vote on a proposal to change the Data Registry.",
	},
	{
		Id:          int32(PermCreateSetNetworkPropertyProposal),
		Name:        "PERMISSION_CREATE_SET_NETWORK_PROPERTY_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for setting network property",
	},
	{
		Id:          int32(PermVoteSetNetworkPropertyProposal),
		Name:        "PERMISSION_VOTE_SET_NETWORK_PROPERTY_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to set network property.",
	},
	{
		Id:          int32(PermCreateSetPoorNetworkMessagesProposal),
		Name:        "PERMISSION_CREATE_SET_POOR_NETWORK_MESSAGES",
		Module:      "tokens",
		Description: "the permission needed to create proposals for setting poor network messages.",
	},
	{
		Id:          int32(PermVoteSetPoorNetworkMessagesProposal),
		Name:        "PERMISSION_VOTE_SET_POOR_NETWORK_MESSAGES_PROPOSAL",
		Module:      "tokens",
		Description: "the permission needed to vote proposals to set poor network messages.",
	},
	{
		Id:          int32(PermCreateUpsertTokenInfoProposal),
		Name:        "PERMISSION_CREATE_UPSERT_TOKEN_RATE_PROPOSAL",
		Module:      "tokens",
		Description: "the permission needed to create proposals for upsert token rate.",
	},
	{
		Id:          int32(PermVoteUpsertTokenInfoProposal),
		Name:        "PERMISSION_VOTE_UPSERT_TOKEN_RATE_PROPOSAL",
		Module:      "tokens",
		Description: "the permission needed to vote proposals for upsert token rate.",
	},
	{
		Id:          int32(PermCreateUnjailValidatorProposal),
		Name:        "PERMISSION_CREATE_UNJAIL_VALIDATOR_PROPOSAL",
		Module:      "slashing",
		Description: "the permission needed to create a proposal to unjail a validator.",
	},
	{
		Id:          int32(PermVoteUnjailValidatorProposal),
		Name:        "PERMISSION_VOTE_UNJAIL_VALIDATOR_PROPOSAL",
		Module:      "slashing",
		Description: "the permission needed to vote a proposal to unjail a validator.",
	},
	{
		Id:          int32(PermCreateRoleProposal),
		Name:        "PERMISSION_CREATE_CREATE_ROLE_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a proposal to create a role.",
	},
	{
		Id:          int32(PermVoteCreateRoleProposal),
		Name:        "PERMISSION_VOTE_CREATE_ROLE_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to vote a proposal to create a role.",
	},
	{
		Id:          int32(PermCreateTokensWhiteBlackChangeProposal),
		Name:        "PERMISSION_CREATE_TOKENS_WHITE_BLACK_CHANGE_PROPOSAL",
		Module:      "tokens",
		Description: "the permission needed to create a proposal to blacklist/whitelisted tokens",
	},
	{
		Id:          int32(PermVoteTokensWhiteBlackChangeProposal),
		Name:        "PERMISSION_VOTE_TOKENS_WHITE_BLACK_CHANGE_PROPOSAL",
		Module:      "tokens",
		Description: "the permission needed to vote on blacklist/whitelisted tokens proposal",
	},
	{
		Id:          int32(PermCreateResetWholeValidatorRankProposal),
		Name:        "PERMISSION_CREATE_RESET_WHOLE_VALIDATOR_RANK_PROPOSAL",
		Module:      "customstaking",
		Description: "the permission needed to create a proposal to reset whole validator rank",
	},
	{
		Id:          int32(PermVoteResetWholeValidatorRankProposal),
		Name:        "PERMISSION_VOTE_RESET_WHOLE_VALIDATOR_RANK_PROPOSAL",
		Module:      "customstaking",
		Description: "the permission needed to vote on reset whole validator rank proposal",
	},
	{
		Id:          int32(PermCreateSoftwareUpgradeProposal),
		Name:        "PERMISSION_CREATE_SOFTWARE_UPGRADE_PROPOSAL",
		Module:      "upgrade",
		Description: "the permission needed to create a proposal for software upgrade",
	},
	{
		Id:          int32(PermCreateSoftwareUpgradeProposal),
		Name:        "PermVoteSoftwareUpgradeProposal",
		Module:      "upgrade",
		Description: "the permission needed to vote on software upgrade proposal",
	},
	{
		Id:          int32(PermSetClaimValidatorPermission),
		Name:        "PERMISSION_SET_CLAIM_VALIDATOR_PERMISSION",
		Module:      "customstaking",
		Description: "the permission that allows to Set ClaimValidatorPermission to other actors.",
	},
	{
		Id:          int32(PermCreateSetProposalDurationProposal),
		Name:        "PERMISSION_CREATE_SET_PROPOSAL_DURATION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a proposal to set proposal duration.",
	},
	{
		Id:          int32(PermVoteSetProposalDurationProposal),
		Name:        "PERMISSION_VOTE_SET_PROPOSAL_DURATION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to vote a proposal to set proposal duration.",
	},
	{
		Id:          int32(PermBlacklistAccountPermissionProposal),
		Name:        "PERMISSION_BLACKLIST_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for blacklisting an account permission.",
	},
	{
		Id:          int32(PermVoteBlacklistAccountPermissionProposal),
		Name:        "PERMISSION_VOTE_BLACKLIST_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to blacklist account permission.",
	},
	{
		Id:          int32(PermRemoveWhitelistedAccountPermissionProposal),
		Name:        "PERMISSION_REMOVE_WHITELISTED_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for removing whitelisted permission from an account.",
	},
	{
		Id:          int32(PermVoteRemoveWhitelistedAccountPermissionProposal),
		Name:        "PERMISSION_VOTE_REMOVE_WHITELISTED_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to remove a whitelisted account permission.",
	},
	{
		Id:          int32(PermRemoveBlacklistedAccountPermissionProposal),
		Name:        "PERMISSION_REMOVE_BLACKLISTED_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for removing blacklisted permission from an account.",
	},
	{
		Id:          int32(PermVoteRemoveBlacklistedAccountPermissionProposal),
		Name:        "PERMISSION_VOTE_REMOVE_BLACKLISTED_ACCOUNT_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to remove a blacklisted account permission.",
	},
	{
		Id:          int32(PermWhitelistRolePermissionProposal),
		Name:        "PERMISSION_WHITELIST_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for whitelisting an role permission.",
	},
	{
		Id:          int32(PermVoteWhitelistRolePermissionProposal),
		Name:        "PERMISSION_VOTE_WHITELIST_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to whitelist role permission.",
	},
	{
		Id:          int32(PermBlacklistRolePermissionProposal),
		Name:        "PERMISSION_BLACKLIST_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for blacklisting an role permission.",
	},
	{
		Id:          int32(PermVoteBlacklistRolePermissionProposal),
		Name:        "PERMISSION_VOTE_BLACKLIST_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to blacklist role permission.",
	},
	{
		Id:          int32(PermRemoveWhitelistedRolePermissionProposal),
		Name:        "PERMISSION_REMOVE_WHITELISTED_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for removing whitelisted permission from a role.",
	},
	{
		Id:          int32(PermVoteRemoveWhitelistedRolePermissionProposal),
		Name:        "PERMISSION_VOTE_REMOVE_WHITELISTED_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to remove a whitelisted role permission.",
	},
	{
		Id:          int32(PermRemoveBlacklistedRolePermissionProposal),
		Name:        "PERMISSION_REMOVE_BLACKLISTED_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals for removing blacklisted permission from a role.",
	},
	{
		Id:          int32(PermVoteRemoveBlacklistedRolePermissionProposal),
		Name:        "PERMISSION_VOTE_REMOVE_BLACKLISTED_ROLE_PERMISSION_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to remove a blacklisted role permission.",
	},
	{
		Id:          int32(PermAssignRoleToAccountProposal),
		Name:        "PERMISSION_ASSIGN_ROLE_TO_ACCOUNT_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals to assign role to an account.",
	},
	{
		Id:          int32(PermVoteAssignRoleToAccountProposal),
		Name:        "PERMISSION_VOTE_ASSIGN_ROLE_TO_ACCOUNT_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to assign role to an account",
	},
	{
		Id:          int32(PermUnassignRoleFromAccountProposal),
		Name:        "PERMISSION_UNASSIGN_ROLE_FROM_ACCOUNT_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create proposals to unassign role from an account",
	},
	{
		Id:          int32(PermVoteUnassignRoleFromAccountProposal),
		Name:        "PERMISSION_VOTE_UNASSIGN_ROLE_FROM_ACCOUNT_PROPOSAL",
		Module:      "gov",
		Description: "the permission that an actor must have in order to vote a proposal to unassign role from an account",
	},
	{
		Id:          int32(PermRemoveRoleProposal),
		Name:        "PERMISSION_CREATE_REMOVE_ROLE_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a proposal to remove a role.",
	},
	{
		Id:          int32(PermVoteRemoveRoleProposal),
		Name:        "PERMISSION_VOTE_REMOVE_ROLE_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to vote a proposal to remove a role.",
	},
	{
		Id:          int32(PermCreateUpsertUBIProposal),
		Name:        "PERMISSION_CREATE_UPSERT_UBI_PROPOSAL",
		Module:      "ubi",
		Description: "the permission needed to create proposals to upsert ubi.",
	},
	{
		Id:          int32(PermVoteUpsertUBIProposal),
		Name:        "PERMISSION_VOTE_UPSERT_UBI_PROPOSAL",
		Module:      "ubi",
		Description: "the permission that an actor must have in order to vote a proposal to upsert ubi",
	},
	{
		Id:          int32(PermCreateRemoveUBIProposal),
		Name:        "PERMISSION_CREATE_REMOVE_UBI_PROPOSAL",
		Module:      "ubi",
		Description: "the permission needed to create a proposal to remove ubi",
	},
	{
		Id:          int32(PermVoteRemoveUBIProposal),
		Name:        "PERMISSION_VOTE_REMOVE_UBI_PROPOSAL",
		Module:      "ubi",
		Description: "the permission needed to vote a proposal to remove ubi.",
	},
	{
		Id:          int32(PermCreateSlashValidatorProposal),
		Name:        "PERMISSION_CREATE_SLASH_VALIDATOR_PROPOSAL",
		Module:      "slashing",
		Description: "the permission needed to create a proposal to slash validator",
	},
	{
		Id:          int32(PermVoteSlashValidatorProposal),
		Name:        "PERMISSION_VOTE_SLASH_VALIDATOR_PROPOSAL",
		Module:      "slashing",
		Description: "the permission needed to vote a proposal to slash validator",
	},
	{
		Id:          int32(PermCreateBasketProposal),
		Name:        "PERMISSION_CREATE_BASKET_PROPOSAL",
		Module:      "basket",
		Description: "the permission needed to create a proposal related to basket",
	},
	{
		Id:          int32(PermVoteBasketProposal),
		Name:        "PERMISSION_VOTE_BASKET_PROPOSAL",
		Module:      "basket",
		Description: "the permission needed to vote a proposal related to basket",
	},
	{
		Id:          int32(PermHandleBasketEmergency),
		Name:        "PERMISSION_HANDLE_BASKET_EMERGENCY",
		Module:      "basket",
		Description: "the permission needed to handle emergency issues on basket",
	},
	{
		Id:          int32(PermCreateResetWholeCouncilorRankProposal),
		Name:        "PERMISSION_CREATE_RESET_WHOLE_COUNCILOR_RANK_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a proposal to reset whole councilor rank",
	},
	{
		Id:          int32(PermVoteResetWholeCouncilorRankProposal),
		Name:        "PERMISSION_VOTE_RESET_WHOLE_COUNCILOR_RANK_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to vote on reset whole councilor rank proposal",
	},
	{
		Id:          int32(PermCreateJailCouncilorProposal),
		Name:        "PERMISSION_CREATE_JAIL_COUNCILOR_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a proposal to jail councilors",
	},
	{
		Id:          int32(PermVoteJailCouncilorProposal),
		Name:        "PERMISSION_VOTE_JAIL_COUNCILOR_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to vote on jail councilors proposal",
	},
	{
		Id:          int32(PermCreatePollProposal),
		Name:        "PERMISSION_CREATE_POLL_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a poll proposal",
	},
	{
		Id:          int32(PermCreateDappProposalWithoutBond),
		Name:        "PERMISSION_CREATE_DAPP_PROPOSAL_WITHOUT_BOND",
		Module:      "gov",
		Description: "the permission needed to create a dapp proposal without bond",
	},
	{
		Id:          int32(PermCreateSetExecutionFeesProposal),
		Name:        "PERMISSION_CREATE_SET_EXECUTION_FEES_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to create a proposal to set execution fees",
	},
	{
		Id:          int32(PermVoteSetExecutionFeesProposal),
		Name:        "PERMISSION_VOTE_SET_EXECUTION_FEES_PROPOSAL",
		Module:      "gov",
		Description: "the permission needed to vote on set execution fees proposal",
	},
}
