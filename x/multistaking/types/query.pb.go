// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kira/multistaking/query.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/query"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryStakingPoolsRequest struct {
}

func (m *QueryStakingPoolsRequest) Reset()         { *m = QueryStakingPoolsRequest{} }
func (m *QueryStakingPoolsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryStakingPoolsRequest) ProtoMessage()    {}
func (*QueryStakingPoolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c25b06fd9ed13dd9, []int{0}
}
func (m *QueryStakingPoolsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryStakingPoolsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryStakingPoolsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryStakingPoolsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryStakingPoolsRequest.Merge(m, src)
}
func (m *QueryStakingPoolsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryStakingPoolsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryStakingPoolsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryStakingPoolsRequest proto.InternalMessageInfo

type QueryStakingPoolsResponse struct {
}

func (m *QueryStakingPoolsResponse) Reset()         { *m = QueryStakingPoolsResponse{} }
func (m *QueryStakingPoolsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryStakingPoolsResponse) ProtoMessage()    {}
func (*QueryStakingPoolsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c25b06fd9ed13dd9, []int{1}
}
func (m *QueryStakingPoolsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryStakingPoolsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryStakingPoolsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryStakingPoolsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryStakingPoolsResponse.Merge(m, src)
}
func (m *QueryStakingPoolsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryStakingPoolsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryStakingPoolsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryStakingPoolsResponse proto.InternalMessageInfo

type QueryDelegationsRequest struct {
}

func (m *QueryDelegationsRequest) Reset()         { *m = QueryDelegationsRequest{} }
func (m *QueryDelegationsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryDelegationsRequest) ProtoMessage()    {}
func (*QueryDelegationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c25b06fd9ed13dd9, []int{2}
}
func (m *QueryDelegationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryDelegationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryDelegationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryDelegationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDelegationsRequest.Merge(m, src)
}
func (m *QueryDelegationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryDelegationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDelegationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDelegationsRequest proto.InternalMessageInfo

type QueryDelegationsResponse struct {
}

func (m *QueryDelegationsResponse) Reset()         { *m = QueryDelegationsResponse{} }
func (m *QueryDelegationsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryDelegationsResponse) ProtoMessage()    {}
func (*QueryDelegationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c25b06fd9ed13dd9, []int{3}
}
func (m *QueryDelegationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryDelegationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryDelegationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryDelegationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDelegationsResponse.Merge(m, src)
}
func (m *QueryDelegationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryDelegationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDelegationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDelegationsResponse proto.InternalMessageInfo

type QueryUndelegationsRequest struct {
}

func (m *QueryUndelegationsRequest) Reset()         { *m = QueryUndelegationsRequest{} }
func (m *QueryUndelegationsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryUndelegationsRequest) ProtoMessage()    {}
func (*QueryUndelegationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c25b06fd9ed13dd9, []int{4}
}
func (m *QueryUndelegationsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUndelegationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUndelegationsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUndelegationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUndelegationsRequest.Merge(m, src)
}
func (m *QueryUndelegationsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryUndelegationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUndelegationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUndelegationsRequest proto.InternalMessageInfo

type QueryUndelegationsResponse struct {
}

func (m *QueryUndelegationsResponse) Reset()         { *m = QueryUndelegationsResponse{} }
func (m *QueryUndelegationsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryUndelegationsResponse) ProtoMessage()    {}
func (*QueryUndelegationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c25b06fd9ed13dd9, []int{5}
}
func (m *QueryUndelegationsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryUndelegationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryUndelegationsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryUndelegationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryUndelegationsResponse.Merge(m, src)
}
func (m *QueryUndelegationsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryUndelegationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryUndelegationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryUndelegationsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QueryStakingPoolsRequest)(nil), "kira.multistaking.QueryStakingPoolsRequest")
	proto.RegisterType((*QueryStakingPoolsResponse)(nil), "kira.multistaking.QueryStakingPoolsResponse")
	proto.RegisterType((*QueryDelegationsRequest)(nil), "kira.multistaking.QueryDelegationsRequest")
	proto.RegisterType((*QueryDelegationsResponse)(nil), "kira.multistaking.QueryDelegationsResponse")
	proto.RegisterType((*QueryUndelegationsRequest)(nil), "kira.multistaking.QueryUndelegationsRequest")
	proto.RegisterType((*QueryUndelegationsResponse)(nil), "kira.multistaking.QueryUndelegationsResponse")
}

func init() { proto.RegisterFile("kira/multistaking/query.proto", fileDescriptor_c25b06fd9ed13dd9) }

var fileDescriptor_c25b06fd9ed13dd9 = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcf, 0x4b, 0x23, 0x31,
	0x14, 0xee, 0xec, 0xb2, 0x7b, 0xc8, 0xee, 0x1e, 0x36, 0x2c, 0xec, 0x36, 0x5b, 0xe7, 0x50, 0x44,
	0x4a, 0xab, 0x13, 0xab, 0xff, 0x81, 0x7a, 0x10, 0xbc, 0xf8, 0x03, 0x2f, 0x5e, 0x24, 0x53, 0x63,
	0x0c, 0x9d, 0xe6, 0x4d, 0x27, 0x19, 0xb1, 0x57, 0xff, 0x02, 0x41, 0xf0, 0x22, 0xf8, 0xf7, 0x78,
	0x2c, 0x78, 0xf1, 0xa6, 0xb4, 0xfe, 0x21, 0xd2, 0x4c, 0x06, 0xa6, 0x4c, 0x2b, 0xf5, 0x96, 0x97,
	0xef, 0xfb, 0xde, 0xfb, 0xf2, 0xbd, 0xa0, 0xa5, 0xae, 0x4c, 0x18, 0xed, 0xa5, 0x91, 0x91, 0xda,
	0xb0, 0xae, 0x54, 0x82, 0xf6, 0x53, 0x9e, 0x0c, 0x82, 0x38, 0x01, 0x03, 0xf8, 0xf7, 0x04, 0x0e,
	0x8a, 0x30, 0x69, 0x76, 0x40, 0xf7, 0x40, 0xd3, 0x90, 0x69, 0x9e, 0x71, 0xe9, 0x65, 0x3b, 0xe4,
	0x86, 0xb5, 0x69, 0xcc, 0x84, 0x54, 0xcc, 0x48, 0x50, 0x99, 0x9c, 0xfc, 0x11, 0x20, 0xc0, 0x1e,
	0xe9, 0xe4, 0xe4, 0x6e, 0xab, 0x02, 0x40, 0x44, 0x9c, 0xda, 0x2a, 0x4c, 0xcf, 0x29, 0x53, 0x6e,
	0x1e, 0xa9, 0x39, 0x88, 0xc5, 0x92, 0x32, 0xa5, 0xc0, 0xd8, 0x6e, 0xda, 0xa1, 0xcb, 0x65, 0xb3,
	0xc5, 0x22, 0x63, 0xd5, 0x09, 0xfa, 0x77, 0x30, 0xb1, 0x75, 0x94, 0xdd, 0xee, 0x03, 0x44, 0xfa,
	0x90, 0xf7, 0x53, 0xae, 0x4d, 0xfd, 0x3f, 0xaa, 0xce, 0xc0, 0x74, 0x0c, 0x4a, 0xf3, 0x7a, 0x15,
	0xfd, 0xb5, 0xe0, 0x0e, 0x8f, 0xb8, 0xc8, 0x06, 0xe7, 0xba, 0xbc, 0xe7, 0x14, 0xe4, 0x64, 0x79,
	0xcf, 0x63, 0x75, 0x56, 0x16, 0xd6, 0x10, 0x99, 0x05, 0x66, 0xd2, 0x8d, 0x97, 0xaf, 0xe8, 0x9b,
	0x85, 0xf1, 0xbd, 0x87, 0x7e, 0x16, 0x4d, 0xe1, 0x56, 0x50, 0x8a, 0x3e, 0x98, 0xf7, 0x2c, 0xb2,
	0xba, 0x18, 0xd9, 0x19, 0x5e, 0xbf, 0x7e, 0x7a, 0xbb, 0xfd, 0xd2, 0xc4, 0x0d, 0x5a, 0xce, 0x33,
	0x5f, 0xa5, 0xab, 0x4f, 0x63, 0x6b, 0xe6, 0xce, 0x43, 0x3f, 0x0a, 0x4f, 0xc7, 0xcd, 0x79, 0xf3,
	0xca, 0xd1, 0x91, 0xd6, 0x42, 0x5c, 0x67, 0x2d, 0xb0, 0xd6, 0x1a, 0x78, 0xe5, 0x03, 0x6b, 0x85,
	0x20, 0xf1, 0x83, 0x87, 0x7e, 0x4d, 0x45, 0x8b, 0xe7, 0x46, 0x31, 0x6b, 0x3d, 0x64, 0x6d, 0x41,
	0xf6, 0x27, 0x92, 0x4b, 0x8b, 0xca, 0xad, 0xdd, 0xc7, 0x91, 0xef, 0x0d, 0x47, 0xbe, 0xf7, 0x3a,
	0xf2, 0xbd, 0x9b, 0xb1, 0x5f, 0x19, 0x8e, 0xfd, 0xca, 0xf3, 0xd8, 0xaf, 0x9c, 0x04, 0x42, 0x9a,
	0x8b, 0x34, 0x0c, 0x3a, 0xd0, 0xa3, 0x7b, 0x32, 0x61, 0xdb, 0x90, 0x70, 0xaa, 0x79, 0x97, 0x49,
	0x7a, 0x35, 0xdd, 0xd9, 0x0c, 0x62, 0xae, 0xc3, 0xef, 0xf6, 0x77, 0x6f, 0xbe, 0x07, 0x00, 0x00,
	0xff, 0xff, 0x3b, 0xeb, 0x6d, 0x6b, 0xb2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	StakingPools(ctx context.Context, in *QueryStakingPoolsRequest, opts ...grpc.CallOption) (*QueryStakingPoolsResponse, error)
	Delegations(ctx context.Context, in *QueryDelegationsRequest, opts ...grpc.CallOption) (*QueryDelegationsResponse, error)
	Undelegations(ctx context.Context, in *QueryUndelegationsRequest, opts ...grpc.CallOption) (*QueryUndelegationsResponse, error)
}

type queryClient struct {
	cc grpc1.ClientConn
}

func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) StakingPools(ctx context.Context, in *QueryStakingPoolsRequest, opts ...grpc.CallOption) (*QueryStakingPoolsResponse, error) {
	out := new(QueryStakingPoolsResponse)
	err := c.cc.Invoke(ctx, "/kira.multistaking.Query/StakingPools", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Delegations(ctx context.Context, in *QueryDelegationsRequest, opts ...grpc.CallOption) (*QueryDelegationsResponse, error) {
	out := new(QueryDelegationsResponse)
	err := c.cc.Invoke(ctx, "/kira.multistaking.Query/Delegations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Undelegations(ctx context.Context, in *QueryUndelegationsRequest, opts ...grpc.CallOption) (*QueryUndelegationsResponse, error) {
	out := new(QueryUndelegationsResponse)
	err := c.cc.Invoke(ctx, "/kira.multistaking.Query/Undelegations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	StakingPools(context.Context, *QueryStakingPoolsRequest) (*QueryStakingPoolsResponse, error)
	Delegations(context.Context, *QueryDelegationsRequest) (*QueryDelegationsResponse, error)
	Undelegations(context.Context, *QueryUndelegationsRequest) (*QueryUndelegationsResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) StakingPools(ctx context.Context, req *QueryStakingPoolsRequest) (*QueryStakingPoolsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StakingPools not implemented")
}
func (*UnimplementedQueryServer) Delegations(ctx context.Context, req *QueryDelegationsRequest) (*QueryDelegationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delegations not implemented")
}
func (*UnimplementedQueryServer) Undelegations(ctx context.Context, req *QueryUndelegationsRequest) (*QueryUndelegationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Undelegations not implemented")
}

func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_StakingPools_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryStakingPoolsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).StakingPools(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.multistaking.Query/StakingPools",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).StakingPools(ctx, req.(*QueryStakingPoolsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Delegations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDelegationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Delegations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.multistaking.Query/Delegations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Delegations(ctx, req.(*QueryDelegationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Undelegations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryUndelegationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Undelegations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.multistaking.Query/Undelegations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Undelegations(ctx, req.(*QueryUndelegationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kira.multistaking.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StakingPools",
			Handler:    _Query_StakingPools_Handler,
		},
		{
			MethodName: "Delegations",
			Handler:    _Query_Delegations_Handler,
		},
		{
			MethodName: "Undelegations",
			Handler:    _Query_Undelegations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kira/multistaking/query.proto",
}

func (m *QueryStakingPoolsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryStakingPoolsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryStakingPoolsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryStakingPoolsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryStakingPoolsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryStakingPoolsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryDelegationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryDelegationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryDelegationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryDelegationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryDelegationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryDelegationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryUndelegationsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUndelegationsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUndelegationsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryUndelegationsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryUndelegationsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryUndelegationsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryStakingPoolsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryStakingPoolsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryDelegationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryDelegationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryUndelegationsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryUndelegationsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryStakingPoolsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryStakingPoolsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryStakingPoolsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryStakingPoolsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryStakingPoolsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryStakingPoolsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryDelegationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryDelegationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryDelegationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryDelegationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryDelegationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryDelegationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUndelegationsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUndelegationsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUndelegationsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryUndelegationsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryUndelegationsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryUndelegationsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuery        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuery          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuery = fmt.Errorf("proto: unexpected end of group")
)
