// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kira/upgrade/plan.proto

package upgrade

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Plan struct {
	Name                      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Resources                 []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	UpgradeTime               int64       `protobuf:"varint,3,opt,name=upgrade_time,json=upgradeTime,proto3" json:"upgrade_time,omitempty"`
	OldChainId                string      `protobuf:"bytes,4,opt,name=old_chain_id,json=oldChainId,proto3" json:"old_chain_id,omitempty"`
	NewChainId                string      `protobuf:"bytes,5,opt,name=new_chain_id,json=newChainId,proto3" json:"new_chain_id,omitempty"`
	RollbackChecksum          string      `protobuf:"bytes,6,opt,name=rollback_checksum,json=rollbackChecksum,proto3" json:"rollback_checksum,omitempty"`
	MaxEnrolmentDuration      int64       `protobuf:"varint,7,opt,name=max_enrolment_duration,json=maxEnrolmentDuration,proto3" json:"max_enrolment_duration,omitempty"`
	InstateUpgrade            bool        `protobuf:"varint,8,opt,name=instate_upgrade,json=instateUpgrade,proto3" json:"instate_upgrade,omitempty"`
	RebootRequired            bool        `protobuf:"varint,9,opt,name=reboot_required,json=rebootRequired,proto3" json:"reboot_required,omitempty"`
	SkipHandler               bool        `protobuf:"varint,10,opt,name=skip_handler,json=skipHandler,proto3" json:"skip_handler,omitempty"`
	ProposalID                uint64      `protobuf:"varint,11,opt,name=proposalID,proto3" json:"proposalID,omitempty"`
	ProcessedNoVoteValidators bool        `protobuf:"varint,12,opt,name=processed_no_vote_validators,json=processedNoVoteValidators,proto3" json:"processed_no_vote_validators,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}    `json:"-"`
	XXX_unrecognized          []byte      `json:"-"`
	XXX_sizecache             int32       `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_96c9a10c2f596dea, []int{0}
}

func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (m *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(m, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Plan) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Plan) GetUpgradeTime() int64 {
	if m != nil {
		return m.UpgradeTime
	}
	return 0
}

func (m *Plan) GetOldChainId() string {
	if m != nil {
		return m.OldChainId
	}
	return ""
}

func (m *Plan) GetNewChainId() string {
	if m != nil {
		return m.NewChainId
	}
	return ""
}

func (m *Plan) GetRollbackChecksum() string {
	if m != nil {
		return m.RollbackChecksum
	}
	return ""
}

func (m *Plan) GetMaxEnrolmentDuration() int64 {
	if m != nil {
		return m.MaxEnrolmentDuration
	}
	return 0
}

func (m *Plan) GetInstateUpgrade() bool {
	if m != nil {
		return m.InstateUpgrade
	}
	return false
}

func (m *Plan) GetRebootRequired() bool {
	if m != nil {
		return m.RebootRequired
	}
	return false
}

func (m *Plan) GetSkipHandler() bool {
	if m != nil {
		return m.SkipHandler
	}
	return false
}

func (m *Plan) GetProposalID() uint64 {
	if m != nil {
		return m.ProposalID
	}
	return 0
}

func (m *Plan) GetProcessedNoVoteValidators() bool {
	if m != nil {
		return m.ProcessedNoVoteValidators
	}
	return false
}

func init() {
	proto.RegisterType((*Plan)(nil), "kira.upgrade.Plan")
}

func init() {
	proto.RegisterFile("kira/upgrade/plan.proto", fileDescriptor_96c9a10c2f596dea)
}

var fileDescriptor_96c9a10c2f596dea = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xdd, 0x6a, 0xd4, 0x40,
	0x14, 0x80, 0x8d, 0x1b, 0x6b, 0x77, 0x76, 0xf1, 0x67, 0x28, 0x75, 0x5c, 0x44, 0xa3, 0x37, 0x06,
	0xc4, 0x04, 0x54, 0x10, 0xbd, 0x11, 0xba, 0x2d, 0xb8, 0x08, 0x45, 0x42, 0x2d, 0xe2, 0xcd, 0x30,
	0x9b, 0x39, 0x64, 0x87, 0x4c, 0xe6, 0xc4, 0x99, 0x49, 0xdb, 0x47, 0xf4, 0x29, 0x7c, 0x0c, 0xaf,
	0x25, 0xc9, 0x6c, 0xbb, 0xbd, 0xca, 0xf0, 0x7d, 0x5f, 0x32, 0x87, 0x70, 0xc8, 0x93, 0x5a, 0x59,
	0x91, 0x77, 0x6d, 0x65, 0x85, 0x84, 0xbc, 0xd5, 0xc2, 0x64, 0xad, 0x45, 0x8f, 0x74, 0xde, 0x8b,
	0x2c, 0x88, 0xc5, 0x41, 0x85, 0x15, 0x0e, 0x22, 0xef, 0x4f, 0x63, 0xb3, 0x58, 0xdc, 0x7a, 0x39,
	0x3c, 0x47, 0xf7, 0xea, 0xdf, 0x84, 0xc4, 0xdf, 0xb5, 0x30, 0x94, 0x92, 0xd8, 0x88, 0x06, 0x58,
	0x94, 0x44, 0xe9, 0xb4, 0x18, 0xce, 0xf4, 0x33, 0x99, 0x5a, 0x70, 0xd8, 0xd9, 0x12, 0x1c, 0xbb,
	0x9b, 0x4c, 0xd2, 0xd9, 0xbb, 0xc3, 0x6c, 0xf7, 0xc2, 0xac, 0x08, 0xfa, 0x28, 0xfe, 0xf3, 0xf7,
	0xc5, 0x9d, 0xe2, 0x26, 0xa7, 0x2f, 0xc9, 0x3c, 0x44, 0xdc, 0xab, 0x06, 0xd8, 0x24, 0x89, 0xd2,
	0x49, 0x31, 0x0b, 0xec, 0x4c, 0x35, 0x40, 0x13, 0x32, 0x47, 0x2d, 0x79, 0xb9, 0x11, 0xca, 0x70,
	0x25, 0x59, 0x3c, 0x5c, 0x4d, 0x50, 0xcb, 0x65, 0x8f, 0x56, 0xb2, 0x2f, 0x0c, 0x5c, 0xde, 0x14,
	0xf7, 0xc6, 0xc2, 0xc0, 0xe5, 0xb6, 0x78, 0x43, 0x1e, 0x5b, 0xd4, 0x7a, 0x2d, 0xca, 0x9a, 0x97,
	0x1b, 0x28, 0x6b, 0xd7, 0x35, 0x6c, 0x6f, 0xc8, 0x1e, 0x6d, 0xc5, 0x32, 0x70, 0xfa, 0x81, 0x1c,
	0x36, 0xe2, 0x8a, 0x83, 0xb1, 0xa8, 0x1b, 0x30, 0x9e, 0xcb, 0xce, 0x0a, 0xaf, 0xd0, 0xb0, 0xfb,
	0xc3, 0x74, 0x07, 0x8d, 0xb8, 0x3a, 0xd9, 0xca, 0xe3, 0xe0, 0xe8, 0x6b, 0xf2, 0x50, 0x19, 0xe7,
	0x85, 0x07, 0x1e, 0xa6, 0x67, 0xfb, 0x49, 0x94, 0xee, 0x17, 0x0f, 0x02, 0xfe, 0x31, 0xd2, 0x3e,
	0xb4, 0xb0, 0x46, 0xf4, 0xdc, 0xc2, 0xef, 0x4e, 0x59, 0x90, 0x6c, 0x3a, 0x86, 0x23, 0x2e, 0x02,
	0xed, 0xff, 0x8d, 0xab, 0x55, 0xcb, 0x37, 0xc2, 0x48, 0x0d, 0x96, 0x91, 0xa1, 0x9a, 0xf5, 0xec,
	0xeb, 0x88, 0xe8, 0x73, 0x42, 0x5a, 0x8b, 0x2d, 0x3a, 0xa1, 0x57, 0xc7, 0x6c, 0x96, 0x44, 0x69,
	0x5c, 0xec, 0x10, 0xfa, 0x85, 0x3c, 0x6b, 0x2d, 0x96, 0xe0, 0x1c, 0x48, 0x6e, 0x90, 0x5f, 0xa0,
	0x07, 0x7e, 0x21, 0xb4, 0x92, 0xc2, 0xa3, 0x75, 0x6c, 0x3e, 0x7c, 0xf2, 0xe9, 0x75, 0x73, 0x8a,
	0xe7, 0xe8, 0xe1, 0xfc, 0x3a, 0x38, 0xfa, 0xf4, 0xeb, 0x63, 0xa5, 0xfc, 0xa6, 0x5b, 0x67, 0x25,
	0x36, 0xf9, 0x37, 0x65, 0xc5, 0x12, 0x2d, 0xe4, 0x0e, 0x6a, 0xa1, 0xf2, 0xd5, 0xe9, 0xd9, 0x49,
	0xf1, 0x33, 0x1f, 0x56, 0xe4, 0x6d, 0x05, 0x26, 0xdf, 0xdd, 0xa0, 0xf5, 0xde, 0xc0, 0xdf, 0xff,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0x82, 0x41, 0x6d, 0xe3, 0x95, 0x02, 0x00, 0x00,
}
