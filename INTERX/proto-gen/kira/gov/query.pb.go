// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: kira/gov/query.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// QueryDataReferenceKeysRequest is the response type for data reference keys query.
type QueryDataReferenceKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryDataReferenceKeysRequest) Reset() {
	*x = QueryDataReferenceKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataReferenceKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataReferenceKeysRequest) ProtoMessage() {}

func (x *QueryDataReferenceKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataReferenceKeysRequest.ProtoReflect.Descriptor instead.
func (*QueryDataReferenceKeysRequest) Descriptor() ([]byte, []int) {
	return file_kira_gov_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryDataReferenceKeysRequest) GetPagination() *PageRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// QueryDataReferenceKeysResponse is the response type for data reference keys query.
type QueryDataReferenceKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys       []string      `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Pagination *PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryDataReferenceKeysResponse) Reset() {
	*x = QueryDataReferenceKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataReferenceKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataReferenceKeysResponse) ProtoMessage() {}

func (x *QueryDataReferenceKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataReferenceKeysResponse.ProtoReflect.Descriptor instead.
func (*QueryDataReferenceKeysResponse) Descriptor() ([]byte, []int) {
	return file_kira_gov_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryDataReferenceKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *QueryDataReferenceKeysResponse) GetPagination() *PageResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// QueryDataReferenceRequest is the response type for data reference query.
type QueryDataReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryDataReferenceRequest) Reset() {
	*x = QueryDataReferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataReferenceRequest) ProtoMessage() {}

func (x *QueryDataReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataReferenceRequest.ProtoReflect.Descriptor instead.
func (*QueryDataReferenceRequest) Descriptor() ([]byte, []int) {
	return file_kira_gov_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryDataReferenceRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// QueryDataReferenceResponse is the response type for data referencequery.
type QueryDataReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *DataRegistryEntry `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *QueryDataReferenceResponse) Reset() {
	*x = QueryDataReferenceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kira_gov_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDataReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDataReferenceResponse) ProtoMessage() {}

func (x *QueryDataReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kira_gov_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDataReferenceResponse.ProtoReflect.Descriptor instead.
func (*QueryDataReferenceResponse) Descriptor() ([]byte, []int) {
	return file_kira_gov_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryDataReferenceResponse) GetData() *DataRegistryEntry {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_kira_gov_query_proto protoreflect.FileDescriptor

var file_kira_gov_query_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6b,
	0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x6c, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a,
	0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x4d, 0x0a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e,
	0x67, 0x6f, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x99, 0x03, 0x0a, 0x05,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0xd2, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x27, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b, 0x69, 0x72,
	0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6b, 0x69, 0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6b, 0x65, 0x79, 0x73, 0x92, 0x41, 0x42, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x20, 0x41, 0x6c, 0x6c, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x20, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x1a,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x20, 0x4b, 0x65, 0x79, 0x73, 0x2e, 0x12, 0xba, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x2e, 0x6b, 0x69, 0x72, 0x61, 0x2e, 0x67, 0x6f, 0x76, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x69, 0x72, 0x61,
	0x2e, 0x67, 0x6f, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6b, 0x69,
	0x72, 0x61, 0x2f, 0x67, 0x6f, 0x76, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x6b, 0x65, 0x79,
	0x7d, 0x92, 0x41, 0x33, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x13, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x52, 0x65, 0x66, 0x65, 0x72, 0x6e, 0x63, 0x65,
	0x1a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73,
	0x65, 0x6b, 0x61, 0x69, 0x2f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x58, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x92, 0x41, 0x44, 0x12, 0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x01, 0x72, 0x38,
	0x0a, 0x0c, 0x67, 0x52, 0x50, 0x43, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x28,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x72, 0x61, 0x43, 0x6f, 0x72, 0x65, 0x2f, 0x73, 0x65, 0x6b, 0x61,
	0x69, 0x2f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x58, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kira_gov_query_proto_rawDescOnce sync.Once
	file_kira_gov_query_proto_rawDescData = file_kira_gov_query_proto_rawDesc
)

func file_kira_gov_query_proto_rawDescGZIP() []byte {
	file_kira_gov_query_proto_rawDescOnce.Do(func() {
		file_kira_gov_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_kira_gov_query_proto_rawDescData)
	})
	return file_kira_gov_query_proto_rawDescData
}

var file_kira_gov_query_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_kira_gov_query_proto_goTypes = []interface{}{
	(*QueryDataReferenceKeysRequest)(nil),  // 0: kira.gov.QueryDataReferenceKeysRequest
	(*QueryDataReferenceKeysResponse)(nil), // 1: kira.gov.QueryDataReferenceKeysResponse
	(*QueryDataReferenceRequest)(nil),      // 2: kira.gov.QueryDataReferenceRequest
	(*QueryDataReferenceResponse)(nil),     // 3: kira.gov.QueryDataReferenceResponse
	(*PageRequest)(nil),                    // 4: kira.gov.PageRequest
	(*PageResponse)(nil),                   // 5: kira.gov.PageResponse
	(*DataRegistryEntry)(nil),              // 6: kira.gov.DataRegistryEntry
}
var file_kira_gov_query_proto_depIdxs = []int32{
	4, // 0: kira.gov.QueryDataReferenceKeysRequest.pagination:type_name -> kira.gov.PageRequest
	5, // 1: kira.gov.QueryDataReferenceKeysResponse.pagination:type_name -> kira.gov.PageResponse
	6, // 2: kira.gov.QueryDataReferenceResponse.data:type_name -> kira.gov.DataRegistryEntry
	0, // 3: kira.gov.Query.GetAllDataReferenceKeys:input_type -> kira.gov.QueryDataReferenceKeysRequest
	2, // 4: kira.gov.Query.GetDataReferenceByKey:input_type -> kira.gov.QueryDataReferenceRequest
	1, // 5: kira.gov.Query.GetAllDataReferenceKeys:output_type -> kira.gov.QueryDataReferenceKeysResponse
	3, // 6: kira.gov.Query.GetDataReferenceByKey:output_type -> kira.gov.QueryDataReferenceResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_kira_gov_query_proto_init() }
func file_kira_gov_query_proto_init() {
	if File_kira_gov_query_proto != nil {
		return
	}
	file_kira_gov_data_registry_proto_init()
	file_kira_gov_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kira_gov_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataReferenceKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataReferenceKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataReferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kira_gov_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDataReferenceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kira_gov_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kira_gov_query_proto_goTypes,
		DependencyIndexes: file_kira_gov_query_proto_depIdxs,
		MessageInfos:      file_kira_gov_query_proto_msgTypes,
	}.Build()
	File_kira_gov_query_proto = out.File
	file_kira_gov_query_proto_rawDesc = nil
	file_kira_gov_query_proto_goTypes = nil
	file_kira_gov_query_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Query all data reference keys with pagination.
	GetAllDataReferenceKeys(ctx context.Context, in *QueryDataReferenceKeysRequest, opts ...grpc.CallOption) (*QueryDataReferenceKeysResponse, error)
	// Query data reference by key.
	GetDataReferenceByKey(ctx context.Context, in *QueryDataReferenceRequest, opts ...grpc.CallOption) (*QueryDataReferenceResponse, error)
}

type queryClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryClient(cc grpc.ClientConnInterface) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) GetAllDataReferenceKeys(ctx context.Context, in *QueryDataReferenceKeysRequest, opts ...grpc.CallOption) (*QueryDataReferenceKeysResponse, error) {
	out := new(QueryDataReferenceKeysResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/GetAllDataReferenceKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) GetDataReferenceByKey(ctx context.Context, in *QueryDataReferenceRequest, opts ...grpc.CallOption) (*QueryDataReferenceResponse, error) {
	out := new(QueryDataReferenceResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/GetDataReferenceByKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Query all data reference keys with pagination.
	GetAllDataReferenceKeys(context.Context, *QueryDataReferenceKeysRequest) (*QueryDataReferenceKeysResponse, error)
	// Query data reference by key.
	GetDataReferenceByKey(context.Context, *QueryDataReferenceRequest) (*QueryDataReferenceResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) GetAllDataReferenceKeys(context.Context, *QueryDataReferenceKeysRequest) (*QueryDataReferenceKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllDataReferenceKeys not implemented")
}
func (*UnimplementedQueryServer) GetDataReferenceByKey(context.Context, *QueryDataReferenceRequest) (*QueryDataReferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDataReferenceByKey not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_GetAllDataReferenceKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDataReferenceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetAllDataReferenceKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/GetAllDataReferenceKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetAllDataReferenceKeys(ctx, req.(*QueryDataReferenceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_GetDataReferenceByKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDataReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).GetDataReferenceByKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/GetDataReferenceByKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).GetDataReferenceByKey(ctx, req.(*QueryDataReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kira.gov.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllDataReferenceKeys",
			Handler:    _Query_GetAllDataReferenceKeys_Handler,
		},
		{
			MethodName: "GetDataReferenceByKey",
			Handler:    _Query_GetDataReferenceByKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kira/gov/query.proto",
}
