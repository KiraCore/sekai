// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kira/gov/query.proto

package gov

import (
	context "context"
	fmt "fmt"
	base "github.com/KiraCore/sekai/INTERX/proto-gen/cosmos/base"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// QueryProposalRequest is the request type for the Query/Proposal RPC method.
type QueryProposalRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId           uint64   `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryProposalRequest) Reset()         { *m = QueryProposalRequest{} }
func (m *QueryProposalRequest) String() string { return proto.CompactTextString(m) }
func (*QueryProposalRequest) ProtoMessage()    {}
func (*QueryProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{0}
}

func (m *QueryProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalRequest.Unmarshal(m, b)
}
func (m *QueryProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalRequest.Marshal(b, m, deterministic)
}
func (m *QueryProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalRequest.Merge(m, src)
}
func (m *QueryProposalRequest) XXX_Size() int {
	return xxx_messageInfo_QueryProposalRequest.Size(m)
}
func (m *QueryProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalRequest proto.InternalMessageInfo

func (m *QueryProposalRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

// QueryProposalResponse is the response type for the Query/Proposal RPC method.
type QueryProposalResponse struct {
	Proposal             *Proposal `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QueryProposalResponse) Reset()         { *m = QueryProposalResponse{} }
func (m *QueryProposalResponse) String() string { return proto.CompactTextString(m) }
func (*QueryProposalResponse) ProtoMessage()    {}
func (*QueryProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{1}
}

func (m *QueryProposalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalResponse.Unmarshal(m, b)
}
func (m *QueryProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalResponse.Marshal(b, m, deterministic)
}
func (m *QueryProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalResponse.Merge(m, src)
}
func (m *QueryProposalResponse) XXX_Size() int {
	return xxx_messageInfo_QueryProposalResponse.Size(m)
}
func (m *QueryProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalResponse proto.InternalMessageInfo

func (m *QueryProposalResponse) GetProposal() *Proposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

// QueryProposalsRequest is the request type for the Query/Proposals RPC method.
type QueryProposalsRequest struct {
	// voter defines the voter address for the proposals.
	Voter                string            `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	Pagination           *base.PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	All                  bool              `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	Reverse              bool              `protobuf:"varint,4,opt,name=reverse,proto3" json:"reverse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *QueryProposalsRequest) Reset()         { *m = QueryProposalsRequest{} }
func (m *QueryProposalsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryProposalsRequest) ProtoMessage()    {}
func (*QueryProposalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{2}
}

func (m *QueryProposalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalsRequest.Unmarshal(m, b)
}
func (m *QueryProposalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalsRequest.Marshal(b, m, deterministic)
}
func (m *QueryProposalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalsRequest.Merge(m, src)
}
func (m *QueryProposalsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryProposalsRequest.Size(m)
}
func (m *QueryProposalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalsRequest proto.InternalMessageInfo

func (m *QueryProposalsRequest) GetVoter() string {
	if m != nil {
		return m.Voter
	}
	return ""
}

func (m *QueryProposalsRequest) GetPagination() *base.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *QueryProposalsRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

func (m *QueryProposalsRequest) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

// QueryProposalsResponse is the response type for the Query/Proposals RPC
// method.
type QueryProposalsResponse struct {
	Proposals            []*Proposal        `protobuf:"bytes,1,rep,name=proposals,proto3" json:"proposals,omitempty"`
	Pagination           *base.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryProposalsResponse) Reset()         { *m = QueryProposalsResponse{} }
func (m *QueryProposalsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryProposalsResponse) ProtoMessage()    {}
func (*QueryProposalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{3}
}

func (m *QueryProposalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryProposalsResponse.Unmarshal(m, b)
}
func (m *QueryProposalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryProposalsResponse.Marshal(b, m, deterministic)
}
func (m *QueryProposalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryProposalsResponse.Merge(m, src)
}
func (m *QueryProposalsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryProposalsResponse.Size(m)
}
func (m *QueryProposalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryProposalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryProposalsResponse proto.InternalMessageInfo

func (m *QueryProposalsResponse) GetProposals() []*Proposal {
	if m != nil {
		return m.Proposals
	}
	return nil
}

func (m *QueryProposalsResponse) GetPagination() *base.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryDataReferenceKeysRequest is the response type for data reference keys query.
type QueryDataReferenceKeysRequest struct {
	Pagination           *base.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *QueryDataReferenceKeysRequest) Reset()         { *m = QueryDataReferenceKeysRequest{} }
func (m *QueryDataReferenceKeysRequest) String() string { return proto.CompactTextString(m) }
func (*QueryDataReferenceKeysRequest) ProtoMessage()    {}
func (*QueryDataReferenceKeysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{4}
}

func (m *QueryDataReferenceKeysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataReferenceKeysRequest.Unmarshal(m, b)
}
func (m *QueryDataReferenceKeysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataReferenceKeysRequest.Marshal(b, m, deterministic)
}
func (m *QueryDataReferenceKeysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataReferenceKeysRequest.Merge(m, src)
}
func (m *QueryDataReferenceKeysRequest) XXX_Size() int {
	return xxx_messageInfo_QueryDataReferenceKeysRequest.Size(m)
}
func (m *QueryDataReferenceKeysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataReferenceKeysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataReferenceKeysRequest proto.InternalMessageInfo

func (m *QueryDataReferenceKeysRequest) GetPagination() *base.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryDataReferenceKeysResponse is the response type for data reference keys query.
type QueryDataReferenceKeysResponse struct {
	Keys                 []string           `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Pagination           *base.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryDataReferenceKeysResponse) Reset()         { *m = QueryDataReferenceKeysResponse{} }
func (m *QueryDataReferenceKeysResponse) String() string { return proto.CompactTextString(m) }
func (*QueryDataReferenceKeysResponse) ProtoMessage()    {}
func (*QueryDataReferenceKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{5}
}

func (m *QueryDataReferenceKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataReferenceKeysResponse.Unmarshal(m, b)
}
func (m *QueryDataReferenceKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataReferenceKeysResponse.Marshal(b, m, deterministic)
}
func (m *QueryDataReferenceKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataReferenceKeysResponse.Merge(m, src)
}
func (m *QueryDataReferenceKeysResponse) XXX_Size() int {
	return xxx_messageInfo_QueryDataReferenceKeysResponse.Size(m)
}
func (m *QueryDataReferenceKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataReferenceKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataReferenceKeysResponse proto.InternalMessageInfo

func (m *QueryDataReferenceKeysResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *QueryDataReferenceKeysResponse) GetPagination() *base.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryDataReferenceRequest is the response type for data reference query.
type QueryDataReferenceRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryDataReferenceRequest) Reset()         { *m = QueryDataReferenceRequest{} }
func (m *QueryDataReferenceRequest) String() string { return proto.CompactTextString(m) }
func (*QueryDataReferenceRequest) ProtoMessage()    {}
func (*QueryDataReferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{6}
}

func (m *QueryDataReferenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataReferenceRequest.Unmarshal(m, b)
}
func (m *QueryDataReferenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataReferenceRequest.Marshal(b, m, deterministic)
}
func (m *QueryDataReferenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataReferenceRequest.Merge(m, src)
}
func (m *QueryDataReferenceRequest) XXX_Size() int {
	return xxx_messageInfo_QueryDataReferenceRequest.Size(m)
}
func (m *QueryDataReferenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataReferenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataReferenceRequest proto.InternalMessageInfo

func (m *QueryDataReferenceRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// QueryDataReferenceResponse is the response type for data referencequery.
type QueryDataReferenceResponse struct {
	Data                 *DataRegistryEntry `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *QueryDataReferenceResponse) Reset()         { *m = QueryDataReferenceResponse{} }
func (m *QueryDataReferenceResponse) String() string { return proto.CompactTextString(m) }
func (*QueryDataReferenceResponse) ProtoMessage()    {}
func (*QueryDataReferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{7}
}

func (m *QueryDataReferenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryDataReferenceResponse.Unmarshal(m, b)
}
func (m *QueryDataReferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryDataReferenceResponse.Marshal(b, m, deterministic)
}
func (m *QueryDataReferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryDataReferenceResponse.Merge(m, src)
}
func (m *QueryDataReferenceResponse) XXX_Size() int {
	return xxx_messageInfo_QueryDataReferenceResponse.Size(m)
}
func (m *QueryDataReferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryDataReferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryDataReferenceResponse proto.InternalMessageInfo

func (m *QueryDataReferenceResponse) GetData() *DataRegistryEntry {
	if m != nil {
		return m.Data
	}
	return nil
}

// QueryWhitelistedProposalVotersRequest is the request type for Query/WhitelistedProposalVoters RPC method.
type QueryWhitelistedProposalVotersRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId           uint64   `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryWhitelistedProposalVotersRequest) Reset()         { *m = QueryWhitelistedProposalVotersRequest{} }
func (m *QueryWhitelistedProposalVotersRequest) String() string { return proto.CompactTextString(m) }
func (*QueryWhitelistedProposalVotersRequest) ProtoMessage()    {}
func (*QueryWhitelistedProposalVotersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{8}
}

func (m *QueryWhitelistedProposalVotersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryWhitelistedProposalVotersRequest.Unmarshal(m, b)
}
func (m *QueryWhitelistedProposalVotersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryWhitelistedProposalVotersRequest.Marshal(b, m, deterministic)
}
func (m *QueryWhitelistedProposalVotersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWhitelistedProposalVotersRequest.Merge(m, src)
}
func (m *QueryWhitelistedProposalVotersRequest) XXX_Size() int {
	return xxx_messageInfo_QueryWhitelistedProposalVotersRequest.Size(m)
}
func (m *QueryWhitelistedProposalVotersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWhitelistedProposalVotersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryWhitelistedProposalVotersRequest proto.InternalMessageInfo

func (m *QueryWhitelistedProposalVotersRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

// QueryWhitelistedProposalVotersResponse is the response type for Query/WhitelistedProposalVoters RPC method.
type QueryWhitelistedProposalVotersResponse struct {
	Voters               []*NetworkActor `protobuf:"bytes,1,rep,name=voters,proto3" json:"voters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *QueryWhitelistedProposalVotersResponse) Reset() {
	*m = QueryWhitelistedProposalVotersResponse{}
}
func (m *QueryWhitelistedProposalVotersResponse) String() string { return proto.CompactTextString(m) }
func (*QueryWhitelistedProposalVotersResponse) ProtoMessage()    {}
func (*QueryWhitelistedProposalVotersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{9}
}

func (m *QueryWhitelistedProposalVotersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryWhitelistedProposalVotersResponse.Unmarshal(m, b)
}
func (m *QueryWhitelistedProposalVotersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryWhitelistedProposalVotersResponse.Marshal(b, m, deterministic)
}
func (m *QueryWhitelistedProposalVotersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWhitelistedProposalVotersResponse.Merge(m, src)
}
func (m *QueryWhitelistedProposalVotersResponse) XXX_Size() int {
	return xxx_messageInfo_QueryWhitelistedProposalVotersResponse.Size(m)
}
func (m *QueryWhitelistedProposalVotersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWhitelistedProposalVotersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryWhitelistedProposalVotersResponse proto.InternalMessageInfo

func (m *QueryWhitelistedProposalVotersResponse) GetVoters() []*NetworkActor {
	if m != nil {
		return m.Voters
	}
	return nil
}

// QueryVotesRequest is the request type for the Query/Votes RPC method.
type QueryVotesRequest struct {
	// proposal_id defines the unique id of the proposal.
	ProposalId           uint64   `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryVotesRequest) Reset()         { *m = QueryVotesRequest{} }
func (m *QueryVotesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryVotesRequest) ProtoMessage()    {}
func (*QueryVotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{10}
}

func (m *QueryVotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryVotesRequest.Unmarshal(m, b)
}
func (m *QueryVotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryVotesRequest.Marshal(b, m, deterministic)
}
func (m *QueryVotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVotesRequest.Merge(m, src)
}
func (m *QueryVotesRequest) XXX_Size() int {
	return xxx_messageInfo_QueryVotesRequest.Size(m)
}
func (m *QueryVotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVotesRequest proto.InternalMessageInfo

func (m *QueryVotesRequest) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

// QueryVotesResponse is the response type for the Query/Votes RPC method.
type QueryVotesResponse struct {
	// votes defined the queried votes.
	Votes                []*Vote  `protobuf:"bytes,1,rep,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryVotesResponse) Reset()         { *m = QueryVotesResponse{} }
func (m *QueryVotesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryVotesResponse) ProtoMessage()    {}
func (*QueryVotesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{11}
}

func (m *QueryVotesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryVotesResponse.Unmarshal(m, b)
}
func (m *QueryVotesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryVotesResponse.Marshal(b, m, deterministic)
}
func (m *QueryVotesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryVotesResponse.Merge(m, src)
}
func (m *QueryVotesResponse) XXX_Size() int {
	return xxx_messageInfo_QueryVotesResponse.Size(m)
}
func (m *QueryVotesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryVotesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryVotesResponse proto.InternalMessageInfo

func (m *QueryVotesResponse) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

// NetworkPropertiesRequest is the request type for the NetworkProperties Query
type NetworkPropertiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkPropertiesRequest) Reset()         { *m = NetworkPropertiesRequest{} }
func (m *NetworkPropertiesRequest) String() string { return proto.CompactTextString(m) }
func (*NetworkPropertiesRequest) ProtoMessage()    {}
func (*NetworkPropertiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{12}
}

func (m *NetworkPropertiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkPropertiesRequest.Unmarshal(m, b)
}
func (m *NetworkPropertiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkPropertiesRequest.Marshal(b, m, deterministic)
}
func (m *NetworkPropertiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkPropertiesRequest.Merge(m, src)
}
func (m *NetworkPropertiesRequest) XXX_Size() int {
	return xxx_messageInfo_NetworkPropertiesRequest.Size(m)
}
func (m *NetworkPropertiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkPropertiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkPropertiesRequest proto.InternalMessageInfo

// NetworkPropertiesResponse is the response type for the NetworkProperties Query
type NetworkPropertiesResponse struct {
	Properties           *NetworkProperties `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *NetworkPropertiesResponse) Reset()         { *m = NetworkPropertiesResponse{} }
func (m *NetworkPropertiesResponse) String() string { return proto.CompactTextString(m) }
func (*NetworkPropertiesResponse) ProtoMessage()    {}
func (*NetworkPropertiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bcca1063f62efc95, []int{13}
}

func (m *NetworkPropertiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkPropertiesResponse.Unmarshal(m, b)
}
func (m *NetworkPropertiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkPropertiesResponse.Marshal(b, m, deterministic)
}
func (m *NetworkPropertiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkPropertiesResponse.Merge(m, src)
}
func (m *NetworkPropertiesResponse) XXX_Size() int {
	return xxx_messageInfo_NetworkPropertiesResponse.Size(m)
}
func (m *NetworkPropertiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkPropertiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkPropertiesResponse proto.InternalMessageInfo

func (m *NetworkPropertiesResponse) GetProperties() *NetworkProperties {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryProposalRequest)(nil), "kira.gov.QueryProposalRequest")
	proto.RegisterType((*QueryProposalResponse)(nil), "kira.gov.QueryProposalResponse")
	proto.RegisterType((*QueryProposalsRequest)(nil), "kira.gov.QueryProposalsRequest")
	proto.RegisterType((*QueryProposalsResponse)(nil), "kira.gov.QueryProposalsResponse")
	proto.RegisterType((*QueryDataReferenceKeysRequest)(nil), "kira.gov.QueryDataReferenceKeysRequest")
	proto.RegisterType((*QueryDataReferenceKeysResponse)(nil), "kira.gov.QueryDataReferenceKeysResponse")
	proto.RegisterType((*QueryDataReferenceRequest)(nil), "kira.gov.QueryDataReferenceRequest")
	proto.RegisterType((*QueryDataReferenceResponse)(nil), "kira.gov.QueryDataReferenceResponse")
	proto.RegisterType((*QueryWhitelistedProposalVotersRequest)(nil), "kira.gov.QueryWhitelistedProposalVotersRequest")
	proto.RegisterType((*QueryWhitelistedProposalVotersResponse)(nil), "kira.gov.QueryWhitelistedProposalVotersResponse")
	proto.RegisterType((*QueryVotesRequest)(nil), "kira.gov.QueryVotesRequest")
	proto.RegisterType((*QueryVotesResponse)(nil), "kira.gov.QueryVotesResponse")
	proto.RegisterType((*NetworkPropertiesRequest)(nil), "kira.gov.NetworkPropertiesRequest")
	proto.RegisterType((*NetworkPropertiesResponse)(nil), "kira.gov.NetworkPropertiesResponse")
}

func init() {
	proto.RegisterFile("kira/gov/query.proto", fileDescriptor_bcca1063f62efc95)
}

var fileDescriptor_bcca1063f62efc95 = []byte{
	// 1070 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0x4f, 0x73, 0xdb, 0x44,
	0x18, 0xc6, 0xa3, 0xc4, 0x2e, 0xce, 0x86, 0x29, 0xe9, 0xe2, 0xb6, 0xb6, 0x1a, 0x6a, 0x55, 0x69,
	0x1b, 0x4f, 0x20, 0xda, 0x26, 0xe9, 0x40, 0x29, 0x1c, 0x50, 0xda, 0x02, 0x9d, 0xd0, 0x4e, 0xd0,
	0x30, 0x25, 0xc3, 0x81, 0xcc, 0xda, 0x5e, 0x14, 0x8d, 0x5d, 0xad, 0x2a, 0x6d, 0x9c, 0xd1, 0xb4,
	0xb9, 0x70, 0xe2, 0xc4, 0xc1, 0x9c, 0x98, 0xe1, 0xd0, 0x4b, 0x0f, 0xc0, 0x07, 0xe0, 0x13, 0x30,
	0xc3, 0x8d, 0x43, 0xef, 0x9c, 0x38, 0xf0, 0x31, 0x18, 0xed, 0x1f, 0xd9, 0x96, 0x2c, 0x3b, 0x74,
	0x38, 0x59, 0xda, 0x7d, 0xde, 0xdd, 0xdf, 0xf3, 0xee, 0xbe, 0xaf, 0x05, 0xaa, 0x5d, 0x2f, 0xc4,
	0xc8, 0xa5, 0x7d, 0xf4, 0xe4, 0x88, 0x84, 0xb1, 0x15, 0x84, 0x94, 0x51, 0x58, 0x49, 0x46, 0x2d,
	0x97, 0xf6, 0xf5, 0x15, 0x97, 0x52, 0xb7, 0x47, 0x10, 0x0e, 0x3c, 0x84, 0x7d, 0x9f, 0x32, 0xcc,
	0x3c, 0xea, 0x47, 0x42, 0xa7, 0x57, 0x5d, 0xea, 0x52, 0xfe, 0x88, 0x92, 0x27, 0x39, 0x2a, 0x7e,
	0xda, 0x1b, 0x2e, 0xf1, 0x37, 0x68, 0x40, 0x7c, 0x1c, 0x78, 0xfd, 0x2d, 0x44, 0x03, 0x1e, 0x39,
	0x61, 0x95, 0xf5, 0x36, 0x8d, 0x1e, 0xd3, 0x08, 0xb5, 0x70, 0x44, 0x04, 0x06, 0xea, 0x6f, 0xb6,
	0x08, 0xc3, 0x9b, 0x28, 0xc0, 0xae, 0xe7, 0x73, 0xb1, 0xd4, 0xae, 0xa4, 0xbc, 0x1d, 0xcc, 0xf0,
	0x41, 0x48, 0x5c, 0x2f, 0x62, 0x8a, 0x5b, 0xbf, 0x98, 0xce, 0x06, 0x21, 0x0d, 0x68, 0x84, 0x7b,
	0x72, 0xe2, 0x4a, 0x3a, 0xe1, 0x75, 0x88, 0xcf, 0x3c, 0x16, 0xab, 0x50, 0x1c, 0x2a, 0x2f, 0xa9,
	0x04, 0xb7, 0x19, 0x0d, 0x73, 0x81, 0x3e, 0x61, 0xc7, 0x34, 0xec, 0x1e, 0x24, 0x2b, 0x93, 0x90,
	0x79, 0x44, 0xe2, 0x9b, 0xef, 0x81, 0xea, 0xe7, 0x09, 0xf4, 0x9e, 0xdc, 0xd2, 0x21, 0x4f, 0x8e,
	0x48, 0xc4, 0x60, 0x03, 0x2c, 0x29, 0x8a, 0x03, 0xaf, 0x53, 0xd3, 0x0c, 0xad, 0x59, 0x72, 0x80,
	0x1a, 0xba, 0xdf, 0x31, 0x1f, 0x80, 0xf3, 0x99, 0xc0, 0x28, 0xa0, 0x7e, 0x44, 0xe0, 0x4d, 0x50,
	0x51, 0x32, 0x1e, 0xb6, 0xb4, 0x05, 0x2d, 0x75, 0x22, 0x96, 0x52, 0xef, 0x94, 0xfe, 0xf8, 0xab,
	0x31, 0xe7, 0xa4, 0x4a, 0xf3, 0x57, 0x2d, 0xb3, 0x5e, 0xa4, 0x48, 0xaa, 0xa0, 0xdc, 0xa7, 0x8c,
	0x84, 0x7c, 0xb1, 0x45, 0x47, 0xbc, 0xc0, 0x8f, 0x01, 0x18, 0xa6, 0xb7, 0x36, 0xcf, 0xf7, 0xb9,
	0x6e, 0x89, 0xb3, 0xb0, 0x92, 0xb3, 0xb0, 0xc4, 0x95, 0x90, 0x67, 0x61, 0xed, 0x61, 0x97, 0xc8,
	0x15, 0x9d, 0x91, 0x48, 0xb8, 0x0c, 0x16, 0x70, 0xaf, 0x57, 0x5b, 0x30, 0xb4, 0x66, 0xc5, 0x49,
	0x1e, 0x61, 0x0d, 0xbc, 0x16, 0x92, 0x3e, 0x09, 0x23, 0x52, 0x2b, 0xf1, 0x51, 0xf5, 0x7a, 0xbb,
	0xf2, 0xdd, 0xf3, 0xc6, 0xdc, 0x3f, 0xcf, 0x1b, 0x73, 0xe6, 0x8f, 0x1a, 0xb8, 0x90, 0xa5, 0x95,
	0xf6, 0xdf, 0x05, 0x8b, 0xca, 0x54, 0x54, 0xd3, 0x8c, 0x85, 0xa9, 0xfe, 0x87, 0x52, 0xf8, 0xc9,
	0x04, 0x43, 0x6b, 0x33, 0x0d, 0x89, 0x4d, 0x47, 0x1d, 0x99, 0x2e, 0x78, 0x8b, 0xa3, 0xdd, 0xc5,
	0x0c, 0x3b, 0xe4, 0x1b, 0x12, 0x12, 0xbf, 0x4d, 0x76, 0x49, 0x9c, 0x26, 0x74, 0x3c, 0x75, 0xda,
	0xab, 0xa6, 0xce, 0x3c, 0x01, 0x97, 0x8b, 0x36, 0x92, 0xb9, 0x80, 0xa0, 0xd4, 0x25, 0xb1, 0x48,
	0xc3, 0xa2, 0xc3, 0x9f, 0xff, 0x3f, 0x9f, 0x1b, 0xa0, 0x9e, 0xdf, 0x5e, 0x79, 0x5c, 0x06, 0x0b,
	0x5d, 0x12, 0xcb, 0x2b, 0x93, 0x3c, 0x9a, 0x0f, 0x80, 0x3e, 0x49, 0x2e, 0x49, 0x11, 0x28, 0x25,
	0x25, 0x29, 0xb3, 0x71, 0x69, 0x78, 0x60, 0x42, 0x2e, 0xea, 0xf4, 0x9e, 0xcf, 0xc2, 0xd8, 0xe1,
	0x42, 0xf3, 0x53, 0x70, 0x8d, 0x2f, 0xf7, 0xe5, 0xa1, 0xc7, 0x48, 0xcf, 0x8b, 0x18, 0xe9, 0xa8,
	0xb3, 0x7d, 0x94, 0x5c, 0xd0, 0xe8, 0xd4, 0x85, 0xf4, 0x35, 0xb8, 0x3e, 0x6b, 0xa5, 0xb4, 0xb2,
	0xce, 0xf0, 0xcb, 0xaf, 0xee, 0xd5, 0x85, 0x21, 0xe6, 0x43, 0x51, 0xdf, 0x76, 0x52, 0xfc, 0xf2,
	0x6e, 0x49, 0xad, 0x79, 0x13, 0x9c, 0xe3, 0xeb, 0x27, 0x8b, 0x9d, 0x9e, 0xea, 0x23, 0x00, 0x47,
	0xa3, 0x24, 0xc1, 0xba, 0xa8, 0x45, 0x05, 0x70, 0x76, 0x08, 0x90, 0xe8, 0xe4, 0xc6, 0x42, 0x62,
	0xea, 0xa0, 0x26, 0xa9, 0xf6, 0xd2, 0xa6, 0x23, 0xb7, 0x37, 0xf7, 0x41, 0x7d, 0xc2, 0x9c, 0xdc,
	0xe4, 0x03, 0x00, 0x86, 0x6d, 0x2a, 0x7f, 0x22, 0xf9, 0xc0, 0x11, 0xf9, 0xd6, 0x8b, 0x25, 0x50,
	0xe6, 0xe0, 0xf0, 0x85, 0x06, 0x2a, 0x2a, 0x91, 0xf0, 0xf2, 0x30, 0x7e, 0x52, 0xbb, 0xd3, 0x1b,
	0x85, 0xf3, 0x02, 0xca, 0xdc, 0x1f, 0xd8, 0x4d, 0x50, 0xe6, 0x57, 0x13, 0x9e, 0xe5, 0x12, 0x43,
	0x69, 0xf4, 0x37, 0xc6, 0xdf, 0xad, 0x6f, 0x5f, 0xfe, 0xfd, 0xc3, 0xfc, 0x1a, 0xbc, 0xc6, 0xff,
	0x77, 0x72, 0x4d, 0x3d, 0x42, 0x4f, 0x47, 0x52, 0x7f, 0x02, 0x7f, 0xd2, 0xc0, 0x62, 0xda, 0x46,
	0x60, 0x11, 0x88, 0x4a, 0x9d, 0x6e, 0x14, 0x0b, 0x24, 0xea, 0x67, 0x03, 0x7b, 0x5d, 0xa1, 0x66,
	0xd0, 0x22, 0x7d, 0x39, 0x33, 0x20, 0x60, 0xeb, 0xf0, 0x62, 0x01, 0x2c, 0xfc, 0x53, 0x03, 0x55,
	0xbb, 0xd7, 0xcb, 0x15, 0x39, 0x5c, 0xcb, 0x80, 0x14, 0xf5, 0x1b, 0xbd, 0x39, 0x5b, 0x28, 0xc9,
	0x3b, 0x03, 0x7b, 0x47, 0x91, 0x8b, 0x26, 0x66, 0xd8, 0xbd, 0x9e, 0x91, 0x04, 0x18, 0x69, 0x84,
	0x91, 0x84, 0xe8, 0xa2, 0x98, 0x27, 0x4d, 0x15, 0x38, 0xe2, 0xff, 0xb8, 0xbc, 0x03, 0xfd, 0xa6,
	0x01, 0x38, 0xc6, 0xb0, 0x13, 0xef, 0x92, 0x18, 0xae, 0x4e, 0xc3, 0x54, 0x5e, 0xae, 0x4e, 0x17,
	0x49, 0x1f, 0x8f, 0x06, 0xf6, 0xb6, 0xf2, 0xf1, 0x66, 0x16, 0xd4, 0x6f, 0x13, 0xfd, 0xfc, 0x24,
	0x7a, 0x01, 0xae, 0xc3, 0x5a, 0x1e, 0x1c, 0x3d, 0xed, 0x92, 0xf8, 0x04, 0xfe, 0x32, 0x0f, 0xea,
	0x85, 0x6d, 0x02, 0xa2, 0x0c, 0xdb, 0xac, 0xd6, 0xa4, 0xdf, 0x38, 0x7d, 0x80, 0x34, 0xf6, 0xb3,
	0x36, 0xb0, 0x9f, 0x29, 0x67, 0xb7, 0x84, 0x89, 0xe3, 0x61, 0x94, 0xa1, 0xae, 0x8d, 0x21, 0x7a,
	0x8f, 0xd1, 0x8a, 0x0d, 0x6c, 0xb8, 0x5e, 0x9f, 0xf8, 0xc6, 0xc8, 0x9d, 0xd7, 0xdf, 0x7f, 0xd5,
	0x48, 0x91, 0xa2, 0xab, 0xd0, 0x1c, 0x4f, 0x91, 0x88, 0xc9, 0xd4, 0xd5, 0x4b, 0x0d, 0x94, 0x79,
	0xf7, 0x82, 0x97, 0x32, 0x3e, 0x47, 0x3b, 0xa1, 0xbe, 0x32, 0x79, 0x52, 0x1a, 0xfe, 0x5e, 0x1b,
	0xd8, 0x2d, 0x65, 0xf8, 0x6d, 0x81, 0x3d, 0x86, 0x5a, 0xe8, 0xf1, 0x9d, 0xff, 0x20, 0x16, 0xb6,
	0x56, 0xe1, 0x95, 0xbc, 0xad, 0xac, 0xab, 0xdf, 0x35, 0x70, 0x2e, 0xd7, 0x01, 0xa1, 0x39, 0xad,
	0x3d, 0x4a, 0xa3, 0xab, 0x53, 0x35, 0xd2, 0xaf, 0x3b, 0xb0, 0x3f, 0x54, 0x76, 0x6b, 0xc2, 0x81,
	0xfc, 0x74, 0x34, 0x86, 0x4d, 0x56, 0xaf, 0x17, 0xcd, 0x08, 0x23, 0x26, 0x34, 0xc6, 0x8d, 0xe4,
	0xbf, 0x3e, 0x77, 0x9e, 0x0d, 0xec, 0xbb, 0xb0, 0xbc, 0xb5, 0xb0, 0x69, 0xdd, 0x58, 0xd7, 0xb4,
	0xf0, 0x16, 0x78, 0xdd, 0x75, 0xf6, 0xee, 0x6c, 0xb8, 0x98, 0x91, 0x63, 0x1c, 0xc3, 0xe6, 0x21,
	0x63, 0x41, 0x74, 0x1b, 0x21, 0xd7, 0x63, 0x87, 0x47, 0x2d, 0xab, 0x4d, 0x1f, 0xa3, 0x5d, 0x2f,
	0xc4, 0x77, 0x68, 0x48, 0x50, 0x44, 0xba, 0xd8, 0x43, 0xf7, 0x1f, 0x7e, 0x71, 0xcf, 0xd9, 0xff,
	0x6a, 0x7b, 0x96, 0x02, 0xf1, 0x0f, 0xdd, 0xe4, 0x7b, 0x3e, 0x05, 0x6a, 0x9d, 0xe1, 0x63, 0xdb,
	0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x9f, 0x5a, 0x6e, 0x41, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Proposal queries proposal details based on ProposalID.
	Proposal(ctx context.Context, in *QueryProposalRequest, opts ...grpc.CallOption) (*QueryProposalResponse, error)
	// Proposals queries all proposals based on given status.
	Proposals(ctx context.Context, in *QueryProposalsRequest, opts ...grpc.CallOption) (*QueryProposalsResponse, error)
	// Query all data reference keys with pagination.
	AllDataReferenceKeys(ctx context.Context, in *QueryDataReferenceKeysRequest, opts ...grpc.CallOption) (*QueryDataReferenceKeysResponse, error)
	// Query data reference by key.
	DataReferenceByKey(ctx context.Context, in *QueryDataReferenceRequest, opts ...grpc.CallOption) (*QueryDataReferenceResponse, error)
	// WhitelistedProposalVoters returns whitelisted voters for a proposal for tracking
	WhitelistedProposalVoters(ctx context.Context, in *QueryWhitelistedProposalVotersRequest, opts ...grpc.CallOption) (*QueryWhitelistedProposalVotersResponse, error)
	// Votes queries votes of a given proposal.
	Votes(ctx context.Context, in *QueryVotesRequest, opts ...grpc.CallOption) (*QueryVotesResponse, error)
	// NetworkProperties returns network properties
	NetworkProperties(ctx context.Context, in *NetworkPropertiesRequest, opts ...grpc.CallOption) (*NetworkPropertiesResponse, error)
}

type queryClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryClient(cc grpc.ClientConnInterface) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Proposal(ctx context.Context, in *QueryProposalRequest, opts ...grpc.CallOption) (*QueryProposalResponse, error) {
	out := new(QueryProposalResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/Proposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Proposals(ctx context.Context, in *QueryProposalsRequest, opts ...grpc.CallOption) (*QueryProposalsResponse, error) {
	out := new(QueryProposalsResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/Proposals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) AllDataReferenceKeys(ctx context.Context, in *QueryDataReferenceKeysRequest, opts ...grpc.CallOption) (*QueryDataReferenceKeysResponse, error) {
	out := new(QueryDataReferenceKeysResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/AllDataReferenceKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) DataReferenceByKey(ctx context.Context, in *QueryDataReferenceRequest, opts ...grpc.CallOption) (*QueryDataReferenceResponse, error) {
	out := new(QueryDataReferenceResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/DataReferenceByKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) WhitelistedProposalVoters(ctx context.Context, in *QueryWhitelistedProposalVotersRequest, opts ...grpc.CallOption) (*QueryWhitelistedProposalVotersResponse, error) {
	out := new(QueryWhitelistedProposalVotersResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/WhitelistedProposalVoters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Votes(ctx context.Context, in *QueryVotesRequest, opts ...grpc.CallOption) (*QueryVotesResponse, error) {
	out := new(QueryVotesResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/Votes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) NetworkProperties(ctx context.Context, in *NetworkPropertiesRequest, opts ...grpc.CallOption) (*NetworkPropertiesResponse, error) {
	out := new(NetworkPropertiesResponse)
	err := c.cc.Invoke(ctx, "/kira.gov.Query/NetworkProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Proposal queries proposal details based on ProposalID.
	Proposal(context.Context, *QueryProposalRequest) (*QueryProposalResponse, error)
	// Proposals queries all proposals based on given status.
	Proposals(context.Context, *QueryProposalsRequest) (*QueryProposalsResponse, error)
	// Query all data reference keys with pagination.
	AllDataReferenceKeys(context.Context, *QueryDataReferenceKeysRequest) (*QueryDataReferenceKeysResponse, error)
	// Query data reference by key.
	DataReferenceByKey(context.Context, *QueryDataReferenceRequest) (*QueryDataReferenceResponse, error)
	// WhitelistedProposalVoters returns whitelisted voters for a proposal for tracking
	WhitelistedProposalVoters(context.Context, *QueryWhitelistedProposalVotersRequest) (*QueryWhitelistedProposalVotersResponse, error)
	// Votes queries votes of a given proposal.
	Votes(context.Context, *QueryVotesRequest) (*QueryVotesResponse, error)
	// NetworkProperties returns network properties
	NetworkProperties(context.Context, *NetworkPropertiesRequest) (*NetworkPropertiesResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Proposal(ctx context.Context, req *QueryProposalRequest) (*QueryProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Proposal not implemented")
}
func (*UnimplementedQueryServer) Proposals(ctx context.Context, req *QueryProposalsRequest) (*QueryProposalsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Proposals not implemented")
}
func (*UnimplementedQueryServer) AllDataReferenceKeys(ctx context.Context, req *QueryDataReferenceKeysRequest) (*QueryDataReferenceKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllDataReferenceKeys not implemented")
}
func (*UnimplementedQueryServer) DataReferenceByKey(ctx context.Context, req *QueryDataReferenceRequest) (*QueryDataReferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DataReferenceByKey not implemented")
}
func (*UnimplementedQueryServer) WhitelistedProposalVoters(ctx context.Context, req *QueryWhitelistedProposalVotersRequest) (*QueryWhitelistedProposalVotersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WhitelistedProposalVoters not implemented")
}
func (*UnimplementedQueryServer) Votes(ctx context.Context, req *QueryVotesRequest) (*QueryVotesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Votes not implemented")
}
func (*UnimplementedQueryServer) NetworkProperties(ctx context.Context, req *NetworkPropertiesRequest) (*NetworkPropertiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NetworkProperties not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Proposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Proposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/Proposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Proposal(ctx, req.(*QueryProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Proposals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryProposalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Proposals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/Proposals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Proposals(ctx, req.(*QueryProposalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_AllDataReferenceKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDataReferenceKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AllDataReferenceKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/AllDataReferenceKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AllDataReferenceKeys(ctx, req.(*QueryDataReferenceKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_DataReferenceByKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryDataReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).DataReferenceByKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/DataReferenceByKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).DataReferenceByKey(ctx, req.(*QueryDataReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_WhitelistedProposalVoters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryWhitelistedProposalVotersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).WhitelistedProposalVoters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/WhitelistedProposalVoters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).WhitelistedProposalVoters(ctx, req.(*QueryWhitelistedProposalVotersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Votes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryVotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Votes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/Votes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Votes(ctx, req.(*QueryVotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_NetworkProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NetworkPropertiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).NetworkProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kira.gov.Query/NetworkProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).NetworkProperties(ctx, req.(*NetworkPropertiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kira.gov.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Proposal",
			Handler:    _Query_Proposal_Handler,
		},
		{
			MethodName: "Proposals",
			Handler:    _Query_Proposals_Handler,
		},
		{
			MethodName: "AllDataReferenceKeys",
			Handler:    _Query_AllDataReferenceKeys_Handler,
		},
		{
			MethodName: "DataReferenceByKey",
			Handler:    _Query_DataReferenceByKey_Handler,
		},
		{
			MethodName: "WhitelistedProposalVoters",
			Handler:    _Query_WhitelistedProposalVoters_Handler,
		},
		{
			MethodName: "Votes",
			Handler:    _Query_Votes_Handler,
		},
		{
			MethodName: "NetworkProperties",
			Handler:    _Query_NetworkProperties_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kira/gov/query.proto",
}
