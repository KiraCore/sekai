// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/bank/query.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Coin struct {
	Denom                string   `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount               string   `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Coin) Reset()         { *m = Coin{} }
func (m *Coin) String() string { return proto.CompactTextString(m) }
func (*Coin) ProtoMessage()    {}
func (*Coin) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{0}
}

func (m *Coin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Coin.Unmarshal(m, b)
}
func (m *Coin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Coin.Marshal(b, m, deterministic)
}
func (m *Coin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Coin.Merge(m, src)
}
func (m *Coin) XXX_Size() int {
	return xxx_messageInfo_Coin.Size(m)
}
func (m *Coin) XXX_DiscardUnknown() {
	xxx_messageInfo_Coin.DiscardUnknown(m)
}

var xxx_messageInfo_Coin proto.InternalMessageInfo

func (m *Coin) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *Coin) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

type PageRequest struct {
	// key is a value returned in PageResponse.next_key to begin
	// querying the next page most efficiently. Only one of offset or key
	// should be set.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// offset is a numeric offset that can be used when key is unavailable.
	// It is less efficient than using key. Only one of offset or key should
	// be set.
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// limit is the total number of results to be returned in the result page.
	// If left empty it will default to a value to be set by each app.
	Limit uint64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// count_total is set to true  to indicate that the result set should include
	// a count of the total number of items available for pagination in UIs. count_total
	// is only respected when offset is used. It is ignored when key is set.
	CountTotal           bool     `protobuf:"varint,4,opt,name=count_total,json=countTotal,proto3" json:"count_total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageRequest) Reset()         { *m = PageRequest{} }
func (m *PageRequest) String() string { return proto.CompactTextString(m) }
func (*PageRequest) ProtoMessage()    {}
func (*PageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{1}
}

func (m *PageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageRequest.Unmarshal(m, b)
}
func (m *PageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageRequest.Marshal(b, m, deterministic)
}
func (m *PageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageRequest.Merge(m, src)
}
func (m *PageRequest) XXX_Size() int {
	return xxx_messageInfo_PageRequest.Size(m)
}
func (m *PageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PageRequest proto.InternalMessageInfo

func (m *PageRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PageRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PageRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PageRequest) GetCountTotal() bool {
	if m != nil {
		return m.CountTotal
	}
	return false
}

type PageResponse struct {
	// next_key is the key to be passed to PageRequest.key to
	// query the next page most efficiently
	NextKey []byte `protobuf:"bytes,1,opt,name=next_key,json=nextKey,proto3" json:"next_key,omitempty"`
	// total is total number of results available if PageRequest.count_total
	// was set, its value is undefined otherwise
	Total                uint64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageResponse) Reset()         { *m = PageResponse{} }
func (m *PageResponse) String() string { return proto.CompactTextString(m) }
func (*PageResponse) ProtoMessage()    {}
func (*PageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{2}
}

func (m *PageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageResponse.Unmarshal(m, b)
}
func (m *PageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageResponse.Marshal(b, m, deterministic)
}
func (m *PageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageResponse.Merge(m, src)
}
func (m *PageResponse) XXX_Size() int {
	return xxx_messageInfo_PageResponse.Size(m)
}
func (m *PageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PageResponse proto.InternalMessageInfo

func (m *PageResponse) GetNextKey() []byte {
	if m != nil {
		return m.NextKey
	}
	return nil
}

func (m *PageResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
type QueryAllBalancesRequest struct {
	// address is the address to query balances for.
	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// pagination defines an optional pagination for the request.
	Pagination           *PageRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *QueryAllBalancesRequest) Reset()         { *m = QueryAllBalancesRequest{} }
func (m *QueryAllBalancesRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAllBalancesRequest) ProtoMessage()    {}
func (*QueryAllBalancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{3}
}

func (m *QueryAllBalancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAllBalancesRequest.Unmarshal(m, b)
}
func (m *QueryAllBalancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAllBalancesRequest.Marshal(b, m, deterministic)
}
func (m *QueryAllBalancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllBalancesRequest.Merge(m, src)
}
func (m *QueryAllBalancesRequest) XXX_Size() int {
	return xxx_messageInfo_QueryAllBalancesRequest.Size(m)
}
func (m *QueryAllBalancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllBalancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllBalancesRequest proto.InternalMessageInfo

func (m *QueryAllBalancesRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *QueryAllBalancesRequest) GetPagination() *PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryAllBalancesResponse is the response type for the Query/AllBalances RPC method.
type QueryAllBalancesResponse struct {
	// balances is the balances of all the coins.
	Balances []*Coin `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	// pagination defines the pagination in the response.
	Pagination           *PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueryAllBalancesResponse) Reset()         { *m = QueryAllBalancesResponse{} }
func (m *QueryAllBalancesResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAllBalancesResponse) ProtoMessage()    {}
func (*QueryAllBalancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{4}
}

func (m *QueryAllBalancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAllBalancesResponse.Unmarshal(m, b)
}
func (m *QueryAllBalancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAllBalancesResponse.Marshal(b, m, deterministic)
}
func (m *QueryAllBalancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllBalancesResponse.Merge(m, src)
}
func (m *QueryAllBalancesResponse) XXX_Size() int {
	return xxx_messageInfo_QueryAllBalancesResponse.Size(m)
}
func (m *QueryAllBalancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllBalancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAllBalancesResponse proto.InternalMessageInfo

func (m *QueryAllBalancesResponse) GetBalances() []*Coin {
	if m != nil {
		return m.Balances
	}
	return nil
}

func (m *QueryAllBalancesResponse) GetPagination() *PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

// QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC method.
type QueryTotalSupplyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTotalSupplyRequest) Reset()         { *m = QueryTotalSupplyRequest{} }
func (m *QueryTotalSupplyRequest) String() string { return proto.CompactTextString(m) }
func (*QueryTotalSupplyRequest) ProtoMessage()    {}
func (*QueryTotalSupplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{5}
}

func (m *QueryTotalSupplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTotalSupplyRequest.Unmarshal(m, b)
}
func (m *QueryTotalSupplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTotalSupplyRequest.Marshal(b, m, deterministic)
}
func (m *QueryTotalSupplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTotalSupplyRequest.Merge(m, src)
}
func (m *QueryTotalSupplyRequest) XXX_Size() int {
	return xxx_messageInfo_QueryTotalSupplyRequest.Size(m)
}
func (m *QueryTotalSupplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTotalSupplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTotalSupplyRequest proto.InternalMessageInfo

// QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC method
type QueryTotalSupplyResponse struct {
	// supply is the supply of the coins
	Supply               []*Coin  `protobuf:"bytes,1,rep,name=supply,proto3" json:"supply,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryTotalSupplyResponse) Reset()         { *m = QueryTotalSupplyResponse{} }
func (m *QueryTotalSupplyResponse) String() string { return proto.CompactTextString(m) }
func (*QueryTotalSupplyResponse) ProtoMessage()    {}
func (*QueryTotalSupplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b02ea4db7d9aa9f, []int{6}
}

func (m *QueryTotalSupplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryTotalSupplyResponse.Unmarshal(m, b)
}
func (m *QueryTotalSupplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryTotalSupplyResponse.Marshal(b, m, deterministic)
}
func (m *QueryTotalSupplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryTotalSupplyResponse.Merge(m, src)
}
func (m *QueryTotalSupplyResponse) XXX_Size() int {
	return xxx_messageInfo_QueryTotalSupplyResponse.Size(m)
}
func (m *QueryTotalSupplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryTotalSupplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryTotalSupplyResponse proto.InternalMessageInfo

func (m *QueryTotalSupplyResponse) GetSupply() []*Coin {
	if m != nil {
		return m.Supply
	}
	return nil
}

func init() {
	proto.RegisterType((*Coin)(nil), "cosmos.bank.v1beta1.Coin")
	proto.RegisterType((*PageRequest)(nil), "cosmos.bank.v1beta1.PageRequest")
	proto.RegisterType((*PageResponse)(nil), "cosmos.bank.v1beta1.PageResponse")
	proto.RegisterType((*QueryAllBalancesRequest)(nil), "cosmos.bank.v1beta1.QueryAllBalancesRequest")
	proto.RegisterType((*QueryAllBalancesResponse)(nil), "cosmos.bank.v1beta1.QueryAllBalancesResponse")
	proto.RegisterType((*QueryTotalSupplyRequest)(nil), "cosmos.bank.v1beta1.QueryTotalSupplyRequest")
	proto.RegisterType((*QueryTotalSupplyResponse)(nil), "cosmos.bank.v1beta1.QueryTotalSupplyResponse")
}

func init() {
	proto.RegisterFile("cosmos/bank/query.proto", fileDescriptor_1b02ea4db7d9aa9f)
}

var fileDescriptor_1b02ea4db7d9aa9f = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x8e, 0xd3, 0x3c,
	0x10, 0x55, 0xb6, 0x3f, 0xdb, 0x6f, 0xd2, 0x0f, 0x90, 0x41, 0x34, 0xad, 0x90, 0x08, 0xe1, 0x47,
	0x15, 0xa2, 0x31, 0x2d, 0x20, 0x21, 0x6e, 0xa0, 0x5b, 0x40, 0x42, 0x2b, 0xd0, 0x12, 0x56, 0x08,
	0x71, 0xb3, 0x72, 0x5b, 0x6f, 0x36, 0x6a, 0x6a, 0x67, 0x63, 0x67, 0xa1, 0x42, 0x5c, 0xc0, 0x23,
	0x14, 0x9e, 0x84, 0x47, 0xe0, 0x15, 0x78, 0x05, 0x1e, 0x04, 0xc5, 0x76, 0x21, 0x55, 0x4b, 0x97,
	0x2b, 0xf7, 0x8c, 0xcf, 0xcc, 0x9c, 0x39, 0x53, 0x07, 0x1a, 0x23, 0x2e, 0xa6, 0x5c, 0xe0, 0x21,
	0x61, 0x13, 0x7c, 0x9c, 0xd1, 0x74, 0xe6, 0x27, 0x29, 0x97, 0x1c, 0x9d, 0xd7, 0x17, 0x7e, 0x7e,
	0xe1, 0x9f, 0x74, 0x87, 0x54, 0x92, 0x6e, 0xeb, 0x52, 0xc8, 0x79, 0x18, 0x53, 0x4c, 0x92, 0x08,
	0x13, 0xc6, 0xb8, 0x24, 0x32, 0xe2, 0x4c, 0xe8, 0x94, 0x96, 0x3e, 0x46, 0x9d, 0x90, 0xb2, 0x0e,
	0x4f, 0x28, 0x23, 0x49, 0x74, 0xd2, 0xc3, 0x3c, 0x51, 0x9c, 0x55, 0xbe, 0x77, 0x17, 0xca, 0x03,
	0x1e, 0x31, 0x74, 0x01, 0x2a, 0x63, 0xca, 0xf8, 0xd4, 0xb1, 0x5c, 0xab, 0xfd, 0x5f, 0xa0, 0x01,
	0xba, 0x08, 0x55, 0x32, 0xe5, 0x19, 0x93, 0xce, 0x96, 0x0a, 0x1b, 0xe4, 0x31, 0xb0, 0xf7, 0x48,
	0x48, 0x03, 0x7a, 0x9c, 0x51, 0x21, 0xd1, 0x39, 0x28, 0x4d, 0xe8, 0x4c, 0xa5, 0xd6, 0x83, 0xfc,
	0x67, 0x9e, 0xc8, 0x0f, 0x0f, 0x05, 0xd5, 0x89, 0xe5, 0xc0, 0xa0, 0xbc, 0x4d, 0x1c, 0x4d, 0x23,
	0xe9, 0x94, 0x54, 0x58, 0x03, 0x74, 0x19, 0xec, 0x51, 0x5e, 0xf7, 0x40, 0x72, 0x49, 0x62, 0xa7,
	0xec, 0x5a, 0xed, 0x5a, 0x00, 0x2a, 0xb4, 0x9f, 0x47, 0xbc, 0x87, 0x50, 0xd7, 0xfd, 0x44, 0xc2,
	0x99, 0xa0, 0xa8, 0x09, 0x35, 0x46, 0xdf, 0xcb, 0x83, 0x3f, 0x5d, 0xb7, 0x73, 0xbc, 0x4b, 0x67,
	0x79, 0x07, 0x5d, 0x45, 0x37, 0xd6, 0xc0, 0xcb, 0xa0, 0xf1, 0x32, 0x37, 0xb6, 0x1f, 0xc7, 0x3b,
	0x24, 0x26, 0x6c, 0x44, 0xc5, 0x42, 0xbc, 0x03, 0xdb, 0x64, 0x3c, 0x4e, 0xa9, 0x10, 0x8b, 0x52,
	0x06, 0xa2, 0x47, 0x00, 0x09, 0x09, 0x23, 0xa6, 0x0c, 0x53, 0xf5, 0xec, 0x9e, 0xeb, 0xaf, 0xd9,
	0x89, 0x5f, 0x30, 0x23, 0x28, 0xe4, 0x78, 0x5f, 0x2d, 0x70, 0x56, 0xfb, 0x9a, 0x21, 0xee, 0x41,
	0x6d, 0x68, 0x62, 0x8e, 0xe5, 0x96, 0xda, 0x76, 0xaf, 0xb9, 0xb6, 0x78, 0xbe, 0x9f, 0xe0, 0x37,
	0x15, 0xf5, 0xd7, 0xa8, 0xba, 0xb2, 0x41, 0x95, 0xee, 0xb6, 0x24, 0xab, 0x69, 0xdc, 0x50, 0xe6,
	0xbe, 0xca, 0x92, 0x24, 0x9e, 0x19, 0xf5, 0xde, 0x73, 0x23, 0x78, 0xe9, 0xca, 0x08, 0xee, 0x42,
	0x55, 0xa8, 0xc8, 0xe9, 0x72, 0x0d, 0xb1, 0xf7, 0xa9, 0x04, 0x15, 0x55, 0x0f, 0x7d, 0xb7, 0xc0,
	0x2e, 0xb8, 0x80, 0x6e, 0xad, 0x4d, 0xfe, 0xcb, 0x92, 0x5a, 0x9d, 0x7f, 0x64, 0x6b, 0xa5, 0xde,
	0xeb, 0x79, 0xbf, 0x0d, 0x15, 0xf5, 0x94, 0xd0, 0x19, 0xc5, 0x72, 0x17, 0x9c, 0xd6, 0xd9, 0x65,
	0xec, 0x7f, 0xfe, 0xf1, 0xf3, 0xcb, 0xd6, 0x75, 0x74, 0x55, 0x3d, 0xa8, 0xe2, 0x4b, 0x5c, 0x38,
	0x8e, 0x3f, 0x98, 0x3f, 0xc4, 0x47, 0xf4, 0xcd, 0x02, 0xbb, 0xe0, 0xcc, 0xa6, 0x21, 0x56, 0xbd,
	0xdd, 0x34, 0xc4, 0x1a, 0xbb, 0xbd, 0xa7, 0xf3, 0xfe, 0xb5, 0xc5, 0x10, 0x75, 0x45, 0x70, 0x35,
	0xa3, 0xf5, 0x7f, 0x11, 0xe9, 0x01, 0x9a, 0xa8, 0xb1, 0x32, 0x80, 0xde, 0xc1, 0x0e, 0x9f, 0xf7,
	0x1f, 0xa3, 0x4a, 0xaf, 0xd4, 0xf5, 0x6f, 0xdf, 0xb4, 0xac, 0xf4, 0x3e, 0xd4, 0xc3, 0x60, 0x6f,
	0xd0, 0x09, 0x89, 0xa4, 0xef, 0xc8, 0x0c, 0xb5, 0x8f, 0xa4, 0x4c, 0xc4, 0x03, 0x8c, 0xc3, 0x48,
	0x1e, 0x65, 0x43, 0x7f, 0xc4, 0xa7, 0x78, 0x37, 0x4a, 0xc9, 0x80, 0xa7, 0x14, 0x0b, 0x3a, 0x21,
	0x11, 0x7e, 0xf6, 0x62, 0xff, 0x49, 0xf0, 0xe6, 0xed, 0x8d, 0xd3, 0x18, 0x58, 0x7d, 0x53, 0x86,
	0x55, 0x75, 0xdc, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0x24, 0x7a, 0x93, 0x89, 0xd8, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// AllBalances queries the balance of all coins for a single account.
	AllBalances(ctx context.Context, in *QueryAllBalancesRequest, opts ...grpc.CallOption) (*QueryAllBalancesResponse, error)
	TotalSupply(ctx context.Context, in *QueryTotalSupplyRequest, opts ...grpc.CallOption) (*QueryTotalSupplyResponse, error)
}

type queryClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryClient(cc grpc.ClientConnInterface) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) AllBalances(ctx context.Context, in *QueryAllBalancesRequest, opts ...grpc.CallOption) (*QueryAllBalancesResponse, error) {
	out := new(QueryAllBalancesResponse)
	err := c.cc.Invoke(ctx, "/cosmos.bank.v1beta1.Query/AllBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) TotalSupply(ctx context.Context, in *QueryTotalSupplyRequest, opts ...grpc.CallOption) (*QueryTotalSupplyResponse, error) {
	out := new(QueryTotalSupplyResponse)
	err := c.cc.Invoke(ctx, "/cosmos.bank.v1beta1.Query/TotalSupply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// AllBalances queries the balance of all coins for a single account.
	AllBalances(context.Context, *QueryAllBalancesRequest) (*QueryAllBalancesResponse, error)
	TotalSupply(context.Context, *QueryTotalSupplyRequest) (*QueryTotalSupplyResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) AllBalances(ctx context.Context, req *QueryAllBalancesRequest) (*QueryAllBalancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllBalances not implemented")
}
func (*UnimplementedQueryServer) TotalSupply(ctx context.Context, req *QueryTotalSupplyRequest) (*QueryTotalSupplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TotalSupply not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_AllBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllBalancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AllBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.bank.v1beta1.Query/AllBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AllBalances(ctx, req.(*QueryAllBalancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_TotalSupply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTotalSupplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).TotalSupply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.bank.v1beta1.Query/TotalSupply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).TotalSupply(ctx, req.(*QueryTotalSupplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmos.bank.v1beta1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AllBalances",
			Handler:    _Query_AllBalances_Handler,
		},
		{
			MethodName: "TotalSupply",
			Handler:    _Query_TotalSupply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmos/bank/query.proto",
}
