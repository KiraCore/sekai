// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cosmos/auth/query.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// QueryAccountRequest is the request type for the Query/Account RPC method.
type QueryAccountRequest struct {
	// address defines the address to query for.
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryAccountRequest) Reset()         { *m = QueryAccountRequest{} }
func (m *QueryAccountRequest) String() string { return proto.CompactTextString(m) }
func (*QueryAccountRequest) ProtoMessage()    {}
func (*QueryAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bc52f4cb65abdb, []int{0}
}

func (m *QueryAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAccountRequest.Unmarshal(m, b)
}
func (m *QueryAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAccountRequest.Marshal(b, m, deterministic)
}
func (m *QueryAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAccountRequest.Merge(m, src)
}
func (m *QueryAccountRequest) XXX_Size() int {
	return xxx_messageInfo_QueryAccountRequest.Size(m)
}
func (m *QueryAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAccountRequest proto.InternalMessageInfo

func (m *QueryAccountRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

// QueryAccountResponse is the response type for the Query/Account RPC method.
type QueryAccountResponse struct {
	// account defines the account of the corresponding address.
	Account              *any.Any `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryAccountResponse) Reset()         { *m = QueryAccountResponse{} }
func (m *QueryAccountResponse) String() string { return proto.CompactTextString(m) }
func (*QueryAccountResponse) ProtoMessage()    {}
func (*QueryAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bc52f4cb65abdb, []int{1}
}

func (m *QueryAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryAccountResponse.Unmarshal(m, b)
}
func (m *QueryAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryAccountResponse.Marshal(b, m, deterministic)
}
func (m *QueryAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAccountResponse.Merge(m, src)
}
func (m *QueryAccountResponse) XXX_Size() int {
	return xxx_messageInfo_QueryAccountResponse.Size(m)
}
func (m *QueryAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryAccountResponse proto.InternalMessageInfo

func (m *QueryAccountResponse) GetAccount() *any.Any {
	if m != nil {
		return m.Account
	}
	return nil
}

// BaseAccount defines a base account type. It contains all the necessary fields
// for basic account functionality. Any custom account type should extend this
// type for additional functionality (e.g. vesting).
type BaseAccount struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PubKey               []byte   `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	AccountNumber        uint64   `protobuf:"varint,3,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Sequence             uint64   `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BaseAccount) Reset()         { *m = BaseAccount{} }
func (m *BaseAccount) String() string { return proto.CompactTextString(m) }
func (*BaseAccount) ProtoMessage()    {}
func (*BaseAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bc52f4cb65abdb, []int{2}
}

func (m *BaseAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BaseAccount.Unmarshal(m, b)
}
func (m *BaseAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BaseAccount.Marshal(b, m, deterministic)
}
func (m *BaseAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BaseAccount.Merge(m, src)
}
func (m *BaseAccount) XXX_Size() int {
	return xxx_messageInfo_BaseAccount.Size(m)
}
func (m *BaseAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BaseAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BaseAccount proto.InternalMessageInfo

func (m *BaseAccount) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *BaseAccount) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *BaseAccount) GetAccountNumber() uint64 {
	if m != nil {
		return m.AccountNumber
	}
	return 0
}

func (m *BaseAccount) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

// ModuleAccount defines an account for modules that holds coins on a pool.
type ModuleAccount struct {
	BaseAccount          *BaseAccount `protobuf:"bytes,1,opt,name=base_account,json=baseAccount,proto3" json:"base_account,omitempty"`
	Name                 string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Permissions          []string     `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ModuleAccount) Reset()         { *m = ModuleAccount{} }
func (m *ModuleAccount) String() string { return proto.CompactTextString(m) }
func (*ModuleAccount) ProtoMessage()    {}
func (*ModuleAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bc52f4cb65abdb, []int{3}
}

func (m *ModuleAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModuleAccount.Unmarshal(m, b)
}
func (m *ModuleAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModuleAccount.Marshal(b, m, deterministic)
}
func (m *ModuleAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModuleAccount.Merge(m, src)
}
func (m *ModuleAccount) XXX_Size() int {
	return xxx_messageInfo_ModuleAccount.Size(m)
}
func (m *ModuleAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_ModuleAccount.DiscardUnknown(m)
}

var xxx_messageInfo_ModuleAccount proto.InternalMessageInfo

func (m *ModuleAccount) GetBaseAccount() *BaseAccount {
	if m != nil {
		return m.BaseAccount
	}
	return nil
}

func (m *ModuleAccount) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModuleAccount) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryAccountRequest)(nil), "cosmos.auth.v1beta1.QueryAccountRequest")
	proto.RegisterType((*QueryAccountResponse)(nil), "cosmos.auth.v1beta1.QueryAccountResponse")
	proto.RegisterType((*BaseAccount)(nil), "cosmos.auth.v1beta1.BaseAccount")
	proto.RegisterType((*ModuleAccount)(nil), "cosmos.auth.v1beta1.ModuleAccount")
}

func init() {
	proto.RegisterFile("cosmos/auth/query.proto", fileDescriptor_e1bc52f4cb65abdb)
}

var fileDescriptor_e1bc52f4cb65abdb = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4f, 0x6f, 0xd3, 0x30,
	0x14, 0x57, 0xd6, 0x75, 0x65, 0x6e, 0xbb, 0x83, 0x37, 0x69, 0x21, 0xe2, 0x10, 0x05, 0x6d, 0x0a,
	0x48, 0xb5, 0x69, 0xb9, 0x20, 0x6e, 0x5d, 0x01, 0x09, 0x4d, 0x4c, 0x10, 0xed, 0x80, 0xb8, 0x54,
	0x4e, 0xfa, 0x48, 0xa3, 0x2d, 0xb6, 0x17, 0xdb, 0x43, 0x11, 0xe2, 0x02, 0x37, 0x8e, 0xe3, 0xab,
	0x70, 0xe6, 0x4b, 0xf0, 0x15, 0xf8, 0x20, 0xa8, 0x8e, 0x3b, 0xb5, 0xa2, 0x08, 0x4e, 0xf6, 0x7b,
	0xef, 0xf7, 0x7e, 0xef, 0xf7, 0xfe, 0xa0, 0xc3, 0x4c, 0xa8, 0x52, 0x28, 0xca, 0x8c, 0x9e, 0xd3,
	0x2b, 0x03, 0x55, 0x4d, 0x64, 0x25, 0xb4, 0xc0, 0xfb, 0x4d, 0x80, 0x2c, 0x02, 0xe4, 0x7a, 0x98,
	0x82, 0x66, 0xc3, 0xe0, 0x5e, 0x2e, 0x44, 0x7e, 0x09, 0x94, 0xc9, 0x82, 0x32, 0xce, 0x85, 0x66,
	0xba, 0x10, 0x5c, 0x35, 0x29, 0xc1, 0x5d, 0x17, 0xb5, 0x56, 0x6a, 0xde, 0x53, 0xc6, 0x1d, 0x5b,
	0xd0, 0x3c, 0xd9, 0x20, 0x07, 0x3e, 0x10, 0x12, 0x38, 0x93, 0xc5, 0xf5, 0x88, 0x0a, 0x69, 0xd3,
	0xff, 0xa4, 0x8a, 0x28, 0xda, 0x7f, 0xb3, 0x10, 0x33, 0xce, 0x32, 0x61, 0xb8, 0x4e, 0xe0, 0xca,
	0x80, 0xd2, 0xd8, 0x47, 0x1d, 0x36, 0x9b, 0x55, 0xa0, 0x94, 0xef, 0x85, 0x5e, 0xdc, 0x4b, 0x96,
	0x66, 0xf4, 0x02, 0x1d, 0xac, 0x27, 0x28, 0x29, 0xb8, 0x02, 0x4c, 0x50, 0x87, 0x35, 0x2e, 0x9b,
	0xd1, 0x1d, 0x1d, 0x90, 0x46, 0x25, 0x59, 0xaa, 0x24, 0x63, 0x5e, 0x27, 0x4b, 0x50, 0xf4, 0xc5,
	0x43, 0xdd, 0x13, 0xa6, 0xc0, 0xf1, 0xfc, 0xbd, 0x22, 0x3e, 0x44, 0x1d, 0x69, 0xd2, 0xe9, 0x05,
	0xd4, 0xfe, 0x96, 0x8d, 0xec, 0x48, 0x93, 0x9e, 0x42, 0x8d, 0x8f, 0xd0, 0x9e, 0x63, 0x9b, 0x72,
	0x53, 0xa6, 0x50, 0xf9, 0xad, 0xd0, 0x8b, 0xb7, 0x93, 0xbe, 0xf3, 0x9e, 0x59, 0x27, 0x0e, 0xd0,
	0x1d, 0xb5, 0x68, 0x8b, 0x67, 0xe0, 0x6f, 0x5b, 0xc0, 0xad, 0x1d, 0x7d, 0xf5, 0x50, 0xff, 0x95,
	0x98, 0x99, 0xcb, 0x5b, 0x1d, 0x13, 0xd4, 0x4b, 0x99, 0x82, 0xe9, 0x7a, 0x33, 0x21, 0xd9, 0xb0,
	0x25, 0xb2, 0xa2, 0x3f, 0xe9, 0xa6, 0x2b, 0xcd, 0x60, 0xb4, 0xcd, 0x59, 0x09, 0x56, 0xef, 0x6e,
	0x62, 0xff, 0x38, 0x44, 0x5d, 0x09, 0x55, 0x59, 0x28, 0xb5, 0x18, 0xbf, 0xdf, 0x0a, 0x5b, 0xf1,
	0x6e, 0xb2, 0xea, 0x1a, 0xfd, 0xf0, 0x50, 0xdb, 0xce, 0x16, 0x7f, 0xf7, 0x50, 0x67, 0xc9, 0x15,
	0x6f, 0x2c, 0xbd, 0x61, 0x69, 0xc1, 0x83, 0xff, 0x40, 0x36, 0xdb, 0x8a, 0xce, 0x6f, 0xc6, 0xc7,
	0xa8, 0x6d, 0xcf, 0x10, 0xf7, 0x2d, 0x22, 0x74, 0x90, 0x60, 0x6f, 0xcd, 0x24, 0x9f, 0x7f, 0xfe,
	0xfa, 0xb6, 0x75, 0x84, 0xef, 0xdb, 0x53, 0x5c, 0xbd, 0x61, 0x37, 0x20, 0x45, 0x3f, 0xba, 0x45,
	0x7d, 0x3a, 0x11, 0x37, 0xe3, 0x67, 0xb8, 0x3d, 0x6a, 0x0d, 0xc9, 0xa3, 0x87, 0x9e, 0x57, 0x3d,
	0x41, 0xbd, 0x3c, 0x79, 0x3d, 0x19, 0xe4, 0x4c, 0xc3, 0x07, 0x56, 0xe3, 0x78, 0xae, 0xb5, 0x54,
	0x4f, 0x29, 0xcd, 0x0b, 0x3d, 0x37, 0x29, 0xc9, 0x44, 0x49, 0x4f, 0x8b, 0x8a, 0x4d, 0x44, 0x05,
	0x54, 0xc1, 0x05, 0x2b, 0xe8, 0xcb, 0xb3, 0xf3, 0xe7, 0xc9, 0xdb, 0x77, 0xc7, 0xff, 0x42, 0xb8,
	0xd3, 0xdf, 0xb1, 0xcf, 0xe3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x85, 0xf2, 0xc0, 0x5d,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Account returns account details based on address.
	Account(ctx context.Context, in *QueryAccountRequest, opts ...grpc.CallOption) (*QueryAccountResponse, error)
}

type queryClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryClient(cc grpc.ClientConnInterface) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Account(ctx context.Context, in *QueryAccountRequest, opts ...grpc.CallOption) (*QueryAccountResponse, error) {
	out := new(QueryAccountResponse)
	err := c.cc.Invoke(ctx, "/cosmos.auth.v1beta1.Query/Account", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Account returns account details based on address.
	Account(context.Context, *QueryAccountRequest) (*QueryAccountResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Account(ctx context.Context, req *QueryAccountRequest) (*QueryAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Account not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Account_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Account(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.auth.v1beta1.Query/Account",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Account(ctx, req.(*QueryAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmos.auth.v1beta1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Account",
			Handler:    _Query_Account_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmos/auth/query.proto",
}
