syntax="proto3";

package cosmos.staking.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "cosmos_proto/cosmos.proto";

// Defines the import path that should be used to import the generated package,
// and the package name.
option go_package = "github.com/KiraCore/sekai/INTERX/proto";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/KiraCore/sekai/INTERX";
    description: "gRPC-gateway";
  }
  schemes: HTTP;
};

service Query {
  // Validators queries all validators that match the given status.
  rpc Validators(QueryValidatorsRequest) returns (QueryValidatorsResponse) {
    option (google.api.http).get = "/api/validators";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Query All Validators"
      description: "Query Validators."
      tags: "query"
    };
  }
}

message PageRequest {
    // key is a value returned in PageResponse.next_key to begin
    // querying the next page most efficiently. Only one of offset or key
    // should be set.
    bytes key = 1;

    // offset is a numeric offset that can be used when key is unavailable.
    // It is less efficient than using key. Only one of offset or key should
    // be set.
    uint64 offset = 2;

    // limit is the total number of results to be returned in the result page.
    // If left empty it will default to a value to be set by each app.
    uint64 limit = 3;

    // count_total is set to true  to indicate that the result set should include
    // a count of the total number of items available for pagination in UIs. count_total
    // is only respected when offset is used. It is ignored when key is set.
    bool count_total = 4;
}

message PageResponse {
    // next_key is the key to be passed to PageRequest.key to
    // query the next page most efficiently
    bytes next_key = 1;

    // total is total number of results available if PageRequest.count_total
    // was set, its value is undefined otherwise
    uint64 total = 2;
}

// BondStatus is the status of a validator.
enum BondStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // UNSPECIFIED defines an invalid validator status.
  BOND_STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "Unspecified"];
  // UNBONDED defines a validator that is not bonded.
  BOND_STATUS_UNBONDED = 1 [(gogoproto.enumvalue_customname) = "Unbonded"];
  // UNBONDING defines a validator that is unbonding.
  BOND_STATUS_UNBONDING = 2 [(gogoproto.enumvalue_customname) = "Unbonding"];
  // BONDED defines a validator that is bonded.
  BOND_STATUS_BONDED = 3 [(gogoproto.enumvalue_customname) = "Bonded"];
}

// Description defines a validator description.
message Description {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string moniker          = 1;
  string identity         = 2;
  string website          = 3;
  string security_contact = 4 [(gogoproto.moretags) = "yaml:\"security_contact\""];
  string details          = 5;
}

// CommissionRates defines the initial commission rates to be used for creating
// a validator.
message CommissionRates {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  string rate     = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string max_rate = 2 [
    (gogoproto.moretags)   = "yaml:\"max_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  string max_change_rate = 3 [
    (gogoproto.moretags)   = "yaml:\"max_change_rate\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}

// Commission defines commission parameters for a given validator.
message Commission {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  CommissionRates           commission_rates = 1 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp update_time      = 2
      [(gogoproto.nullable) = false, (gogoproto.stdtime) = true, (gogoproto.moretags) = "yaml:\"update_time\""];
}

// Validator defines a validator, together with the total amount of the
// Validator's bond shares and their exchange rate to coins. Slashing results in
// a decrease in the exchange rate, allowing correct calculation of future
// undelegations without iterating over delegators. When coins are delegated to
// this validator, the validator is credited with a delegation whose number of
// bond shares is based on the amount of coins delegated divided by the current
// exchange rate. Voting power can be calculated as total bonded shares
// multiplied by exchange rate.
message Validator {
  option (gogoproto.equal)            = false;
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.goproto_getters)  = false;

  string operator_address = 1 [(gogoproto.moretags) = "yaml:\"operator_address\""];
  google.protobuf.Any consensus_pubkey = 2 [
    (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey",
    (gogoproto.moretags) = "yaml:\"consensus_pubkey\""];
  bool   jailed       = 3;
  BondStatus status   = 4;
  string tokens       = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string delegator_shares = 6 [
    (gogoproto.moretags)   = "yaml:\"delegator_shares\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
  Description               description      = 7 [(gogoproto.nullable) = false];
  int64                     unbonding_height = 8 [(gogoproto.moretags) = "yaml:\"unbonding_height\""];
  google.protobuf.Timestamp unbonding_time   = 9
      [(gogoproto.nullable) = false, (gogoproto.stdtime) = true, (gogoproto.moretags) = "yaml:\"unbonding_time\""];
  Commission commission          = 10 [(gogoproto.nullable) = false];
  string     min_self_delegation = 11 [
    (gogoproto.moretags)   = "yaml:\"min_self_delegation\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable)   = false
  ];
}

// QueryValidatorsRequest is the request type for the Query/AllValidators RPC method.
message QueryValidatorsRequest {
  // status is the status for validators.
  string status = 1;

  // pagination defines an optional pagination for the request.
  PageRequest pagination = 2;
}

// QueryValidatorsResponse is response type for the Query/Validators RPC method
message QueryValidatorsResponse {
  // validators contains all the queried validators.
  repeated Validator validators = 1;

  // pagination defines the pagination in the response.
  PageResponse pagination = 2;
}
