syntax = "proto3";
package kira.gov;

import "gogoproto/gogo.proto";

option go_package = "github.com/KiraCore/sekai/x/gov/types";

enum PermValue {
  option (gogoproto.goproto_enum_prefix) = false;

  // PERMISSION_ZERO is a no-op permission.
  PERMISSION_ZERO = 0 [(gogoproto.enumvalue_customname) = "PermZero"];

  // PERMISSION_SET_PERMISSIONS defines the permission that allows to Set Permissions to other actors.
  PERMISSION_SET_PERMISSIONS = 1 [(gogoproto.enumvalue_customname) = "PermSetPermissions"];

  // PERMISSION_CLAIM_VALIDATOR defines the permission that allows to Claim a validator Seat.
  PERMISSION_CLAIM_VALIDATOR = 2 [(gogoproto.enumvalue_customname) = "PermClaimValidator"];

  // PERMISSION_CLAIM_COUNCILOR defines the permission that allows to Claim a Councilor Seat.
  PERMISSION_CLAIM_COUNCILOR = 3 [(gogoproto.enumvalue_customname) = "PermClaimCouncilor"];

  // PERMISSION_CREATE_SET_PERMISSIONS_PROPOSAL defines the permission needed to create proposals.
  PERMISSION_CREATE_SET_PERMISSIONS_PROPOSAL = 4 [(gogoproto.enumvalue_customname) = "PermCreateSetPermissionsProposal"];

  // PERMISSION_VOTE_SET_PERMISSIONS_PROPOSAL defines the permission that an actor must have in order to vote a
  // Proposal to set permissions.
  PERMISSION_VOTE_SET_PERMISSIONS_PROPOSAL = 5 [(gogoproto.enumvalue_customname) = "PermVoteSetPermissionProposal"];

  PERMISSION_UPSERT_TOKEN_ALIAS = 6 [(gogoproto.enumvalue_customname) = "PermUpsertTokenAlias"];

  PERMISSION_UPSERT_TOKEN_RATE = 7 [(gogoproto.enumvalue_customname) = "PermUpsertTokenRate"];

  PERMISSION_CHANGE_TX_FEE = 8 [(gogoproto.enumvalue_customname) = "PermChangeTxFee"];
}

enum ActorStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  // Undefined status
  UNDEFINED = 0 [(gogoproto.enumvalue_customname) = "Undefined"];

  // Unclaimed status
  UNCLAIMED = 1 [(gogoproto.enumvalue_customname) = "Unclaimed"];

  // Active status
  ACTIVE = 2 [(gogoproto.enumvalue_customname) = "Active"];

  // Paused status
  PAUSED = 3 [(gogoproto.enumvalue_customname) = "Paused"];

  // Inactive status
  INACTIVE = 4 [(gogoproto.enumvalue_customname) = "Inactive"];

  // Jailed status
  JAILED = 5 [(gogoproto.enumvalue_customname) = "Jailed"];

  // Removed status
  REMOVED = 6 [(gogoproto.enumvalue_customname) = "Removed"];
}

message Permissions {
  repeated uint32 blacklist = 1;
  repeated uint32 whitelist = 2;
}

message NetworkActor {
  bytes address = 1 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  repeated uint64 roles = 2;
  ActorStatus status = 3;
  repeated uint32 votes = 4;
  Permissions permissions = 5;
  uint64 skin = 6;
}

message MsgWhitelistPermissions {
  option (gogoproto.equal)            = true;

  bytes proposer = 1 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  bytes address = 2 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  uint32 permission = 3;
}

message MsgBlacklistPermissions {
  bytes proposer = 1 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  bytes address = 2 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"address\""
  ];

  uint32 permission = 3;
}

