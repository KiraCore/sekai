syntax = "proto3";
package kira.staking;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/KiraCore/sekai/x/staking/types";

message MsgClaimValidator {
  option (gogoproto.equal)            = true;

  string moniker = 1;
  string website = 2;
  string social = 3;
  string identity = 4;
  string commission = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"commission\""
  ];
  bytes val_key = 6 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress",
    (gogoproto.moretags) = "yaml:\"val_key\""
  ];
  google.protobuf.Any pub_key = 7
  [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey", (gogoproto.moretags) = "yaml:\"pub_key\""];
}

message Validator {
  option (gogoproto.equal)            = true;

  string moniker = 1;
  string website = 2;
  string social = 3;
  string identity = 4;
  string commission = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"commission\""
  ];
  bytes val_key = 6 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress",
    (gogoproto.moretags) = "yaml:\"val_key\""
  ];
  google.protobuf.Any pub_key = 7
  [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey", (gogoproto.moretags) = "yaml:\"pub_key\""];
}
