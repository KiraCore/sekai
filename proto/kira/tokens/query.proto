syntax = "proto3";
package kira.tokens;

import "kira/tokens/alias.proto";
import "kira/tokens/rate.proto";
import "kira/tokens/freeze.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/KiraCore/sekai/x/tokens/types";

// Query defines the gRPC querier service
service Query {
  // Returns the token alias
  rpc GetTokenAlias (TokenAliasRequest) returns (TokenAliasResponse) {}
  rpc GetAllTokenAliases (AllTokenAliasesRequest) returns (AllTokenAliasesResponse) {
    option (google.api.http).get = "/kira/tokens/aliases";
  }
  rpc GetTokenAliasesByDenom (TokenAliasesByDenomRequest) returns (TokenAliasesByDenomResponse) {}
  // Returns the token rates
  rpc GetTokenRate (TokenRateRequest) returns (TokenRateResponse) {}
  rpc GetAllTokenRates (AllTokenRatesRequest) returns (AllTokenRatesResponse) {
    option (google.api.http).get = "/kira/tokens/rates";
  }
  rpc GetTokenRatesByDenom (TokenRatesByDenomRequest) returns (TokenRatesByDenomResponse) {}
  // Returns tokens black/white lists
  rpc GetTokenBlackWhites (TokenBlackWhitesRequest) returns (TokenBlackWhitesResponse) {}
}

message TokenAliasRequest {
  string symbol = 1;
}

message TokenAliasResponse {
  kira.tokens.TokenAlias data = 1;
}

message AllTokenAliasesRequest {}

message AllTokenAliasesResponse {
  repeated kira.tokens.TokenAlias data = 1;
}

message TokenAliasesByDenomRequest {
  repeated string denoms = 1;
}
  
message TokenAliasesByDenomResponse {
  map<string, kira.tokens.TokenAlias> data = 1;
}

message TokenRateRequest {
  string denom = 1;
}

message TokenRateResponse {
  kira.tokens.TokenRate data = 1;
}

message AllTokenRatesRequest {}

message AllTokenRatesResponse {
  repeated kira.tokens.TokenRate data = 1;
}

message TokenRatesByDenomRequest {
  repeated string denoms = 1;
}
  
message TokenRatesByDenomResponse {
  map<string, kira.tokens.TokenRate> data = 1;
}

message TokenBlackWhitesRequest {}
message TokenBlackWhitesResponse {
  TokensWhiteBlack data = 1;
}