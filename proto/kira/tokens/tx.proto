syntax = "proto3";
package kira.tokens;

import "gogoproto/gogo.proto";

import "alias.proto";
import "proposal.proto";
import "rate.proto";
import "freeze.proto";

option go_package = "github.com/KiraCore/sekai/x/tokens/types";

// Msg defines the tokens Msg service.
service Msg {
    // UpsertTokenAlias defines a method to upsert token alias
    rpc UpsertTokenAlias(MsgUpsertTokenAlias) returns (MsgUpsertTokenAliasResponse);
    // UpsertTokenRate defines a method to upsert token rate
    rpc UpsertTokenRate(MsgUpsertTokenRate) returns (MsgUpsertTokenRateResponse);
    // ProposalUpsertTokenAlias defines a method to create a proposal to upsert token alias
    rpc ProposalUpsertTokenAlias(MsgProposalUpsertTokenAlias) returns (MsgProposalUpsertTokenAliasResponse);
    // ProposalUpsertTokenRates defines a method to create a proposal to upsert token rates
    rpc ProposalUpsertTokenRates(MsgProposalUpsertTokenRates) returns (MsgProposalUpsertTokenRatesResponse);
    // ProposalTokensWhiteBlackChange defines a method for changing tokens whitelist / blacklist proposal
    rpc ProposalTokensWhiteBlackChange(MsgProposalTokensWhiteBlackChange) returns (MsgProposalTokensWhiteBlackChangeResponse);
}

message MsgUpsertTokenAliasResponse {}
message MsgUpsertTokenRateResponse {}
message MsgProposalUpsertTokenAliasResponse {
    uint64 proposalID = 1;
}
message MsgProposalUpsertTokenRatesResponse {
    uint64 proposalID = 1;
}
message MsgProposalTokensWhiteBlackChangeResponse {
    uint64 proposalID = 1;
}