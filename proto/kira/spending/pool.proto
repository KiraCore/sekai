syntax = "proto3";
package kira.spending;

option go_package = "github.com/KiraCore/sekai/x/spending/types";

import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

message ClaimInfo { 
    string account = 1;
    string pool_name = 2;
    uint64 last_claim = 3;
}

message PermInfo {
  option (gogoproto.equal) = true;

  repeated uint64 owner_roles = 1;
  repeated string owner_accounts = 2;
}

message WeightedRole {
  option (gogoproto.equal) = true;
  
  uint64 role = 1;
  string weight = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}
message WeightedAccount {
  option (gogoproto.equal) = true;

  string account = 1;
  string weight = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}
message WeightedPermInfo {
  option (gogoproto.equal) = true;

  repeated WeightedRole roles = 1 [ (gogoproto.nullable) = false ];
  repeated WeightedAccount accounts = 2 [ (gogoproto.nullable) = false ];
}

message SpendingPool {
  string name = 1;
  // claim-start & claim-end - defines the exact time period (Unix timestamps) between which tokens can be claimed from the pool, allowing for a precise funds distribution.
  uint64 claim_start = 2;
  uint64 claim_end = 3;
  uint64 claim_expiry = 4;
  // rate of distribution in the smallest token denomination per 1 second (this value can be a float number, smaller than actual denomination)
  repeated string rates = 5 [
    (gogoproto.moretags) = "yaml:\"rates\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.DecCoin",
    (gogoproto.nullable) = false
  ];
  // pool specific % of owner accounts that must vote YES or NO for any of the pool proposals to be valid.
  uint64 vote_quorum = 6; // percentage, # default: 51%
  // period of time in seconds that any of the pool proposals must last before passing or being rejected
  uint64 vote_period = 7; // seconds, # default: 600s
  // period of time that must pass before any of the pool proposal is enacted
  uint64 vote_enactment = 8; // seconds, # default: 300s
  // defines a list of accounts/roles controlling the spending pool via “governance-like” proposals
  PermInfo owners = 9;
  // defines set of accounts/roles to which funds can be distributed
  WeightedPermInfo beneficiaries = 10;
  repeated string balances = 11 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
  bool dynamic_rate = 12; // (default false) defines if the rate of token distribution should be dynamic
  uint64 dynamic_rate_period = 13; // time in seconds defining every what period dynamic rates are calculated
  uint64 last_dynamic_rate_calc_time = 14; // timestamp that last dynamic rate was calculated
}