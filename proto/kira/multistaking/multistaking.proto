syntax = "proto3";
package kira.multistaking;

option go_package = "github.com/KiraCore/sekai/x/multistaking/types";
option (gogoproto.equal_all) = true;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

message StakingPool {
  uint64 id = 1;
  string validator = 2;
  bool enabled = 3;
  string slashed = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated string total_staking_tokens = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
  repeated string total_share_tokens = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
  repeated string total_rewards = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ]; 
  // percentage (e.g. 0.1 == 10%) commission that the validator charges from all block reward
  string commission = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message Undelegation {
  uint64 id = 1;
  string address = 2;
  string val_address =3;
  uint64 expiry = 4;
  repeated string amount = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message Rewards {
  string delegator = 1;
  repeated string rewards = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message CompoundInfo {
  string delegator = 1;
  bool all_denom = 2;
  repeated string compound_denoms = 3;
  uint64 last_exec_block = 4;
}
