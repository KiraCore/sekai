syntax = "proto3";
package kira.multistaking;

option go_package = "github.com/KiraCore/sekai/x/multistaking/types";
option (gogoproto.equal_all) = true;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "kira/multistaking/multistaking.proto";

// Msg defines the multistaking Msg service.
service Msg {
  rpc UpsertStakingPool(MsgUpsertStakingPool) returns (MsgUpsertStakingPoolResponse);
  rpc Delegate(MsgDelegate) returns (MsgDelegateResponse);
  rpc Undelegate(MsgUndelegate) returns (MsgUndelegateResponse);
  rpc ClaimRewards(MsgClaimRewards) returns (MsgClaimRewardsResponse);
  rpc ClaimUndelegation(MsgClaimUndelegation) returns (MsgClaimUndelegationResponse);
}

message MsgUpsertStakingPool {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  string validator = 2;
  bool enabled = 3;
}

message MsgUpsertStakingPoolResponse {
}

message MsgDelegate {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string          delegator_address = 1;
  string          validator_address = 2;
  repeated string amounts = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message MsgDelegateResponse {}

message MsgUndelegate {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1;
  string validator_address = 2;
  repeated string amounts = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin",
    (gogoproto.nullable) = false
  ];
}

message MsgUndelegateResponse {}

message MsgClaimRewards {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
}

message MsgClaimRewardsResponse {}

message MsgClaimUndelegation {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string sender = 1;
  uint64 undelegation_id = 2;
}

message MsgClaimUndelegationResponse {}